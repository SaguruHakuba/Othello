

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri May 20 02:15:31 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284                           
   285                           	psect	idataBANK0
   286  0C5C                     __pidataBANK0:	
   287                           
   288                           ;initializer for _AllPos
   289  0C5C  3400               	retlw	0
   290  0C5D  3400               	retlw	0
   291  0C5E  3400               	retlw	0
   292  0C5F  3418               	retlw	24
   293  0C60  3418               	retlw	24
   294  0C61  3400               	retlw	0
   295  0C62  3400               	retlw	0
   296  0C63  3400               	retlw	0
   297                           
   298                           ;initializer for _GreenPos
   299  0C64  3400               	retlw	0
   300  0C65  3400               	retlw	0
   301  0C66  3400               	retlw	0
   302  0C67  3408               	retlw	8
   303  0C68  3410               	retlw	16
   304  0C69  3400               	retlw	0
   305  0C6A  3400               	retlw	0
   306  0C6B  3400               	retlw	0
   307                           
   308                           ;initializer for _RedPos
   309  0C6C  3400               	retlw	0
   310  0C6D  3400               	retlw	0
   311  0C6E  3400               	retlw	0
   312  0C6F  3410               	retlw	16
   313  0C70  3408               	retlw	8
   314  0C71  3400               	retlw	0
   315  0C72  3400               	retlw	0
   316  0C73  3400               	retlw	0
   317                           
   318                           	psect	stringtext
   319  0400                     __pstringtext:	
   320  0400                     stringtab:	
   321  0400                     __stringtab:	
   322                           
   323                           ;	String table - string pointers are 2 bytes each
   324  0400  1BFF               	btfsc	btemp+1,7
   325  0401  2C0A               	ljmp	stringcode
   326  0402  1383               	bcf	3,7
   327  0403  187F               	btfsc	btemp+1,0
   328  0404  1783               	bsf	3,7
   329  0405  0800               	movf	0,w
   330  0406  0A84               	incf	4,f
   331  0407  1903               	skipnz
   332  0408  0AFF               	incf	btemp+1,f
   333  0409  0008               	return
   334  040A                     stringcode:	
   335  040A  087F               	movf	btemp+1,w
   336  040B  397F               	andlw	127
   337  040C  008A               	movwf	10
   338  040D  0804               	movf	4,w
   339  040E  0A84               	incf	4,f
   340  040F  1903               	skipnz
   341  0410  0AFF               	incf	btemp+1,f
   342  0411  0082               	movwf	2
   343  0412                     __stringbase:	
   344  0412                     __end_of__stringtab:	
   345  0412                     _KEYS:	
   346  0412  3431               	retlw	49
   347  0413  3432               	retlw	50
   348  0414  3433               	retlw	51
   349  0415  3441               	retlw	65
   350  0416  3434               	retlw	52
   351  0417  3435               	retlw	53
   352  0418  3436               	retlw	54
   353  0419  3442               	retlw	66
   354  041A  3437               	retlw	55
   355  041B  3438               	retlw	56
   356  041C  3439               	retlw	57
   357  041D  3443               	retlw	67
   358  041E  342A               	retlw	42
   359  041F  3430               	retlw	48
   360  0420  3423               	retlw	35
   361  0421  3444               	retlw	68
   362  0422                     __end_of_KEYS:	
   363  0005                     _PORTA	set	5
   364  0006                     _PORTB	set	6
   365  001A                     _RCREG	set	26
   366  0013                     _SSPBUF	set	19
   367  0014                     _SSPCON	set	20
   368  0001                     _TMR0	set	1
   369  0019                     _TXREG	set	25
   370  006B                     _BCLIF	set	107
   371  00C4                     _CREN	set	196
   372  005F                     _GIE	set	95
   373  005E                     _PEIE	set	94
   374  0028                     _RA0	set	40
   375  0029                     _RA1	set	41
   376  002A                     _RA2	set	42
   377  002B                     _RA3	set	43
   378  002C                     _RA4	set	44
   379  002D                     _RA5	set	45
   380  0065                     _RCIF	set	101
   381  0041                     _RD1	set	65
   382  00C7                     _SPEN	set	199
   383  0063                     _SSPIF	set	99
   384  005A                     _T0IF	set	90
   385  0084                     _T1CKPS0	set	132
   386  0085                     _T1CKPS1	set	133
   387  0081                     _TMR1CS	set	129
   388  0086                     _TMR1GE	set	134
   389  0060                     _TMR1IF	set	96
   390  0080                     _TMR1ON	set	128
   391  0064                     _TXIF	set	100
   392  0081                     _OPTION_REG	set	129
   393  0099                     _SPBRG	set	153
   394  0093                     _SSPADD	set	147
   395  0091                     _SSPCON2	set	145
   396  0091                     _SSPCON2bits	set	145
   397  0094                     _SSPSTAT	set	148
   398  0094                     _SSPSTATbits	set	148
   399  0085                     _TRISA	set	133
   400  0086                     _TRISB	set	134
   401  0087                     _TRISC	set	135
   402  0088                     _TRISD	set	136
   403  04C2                     _BRGH	set	1218
   404  04C4                     _SYNC	set	1220
   405  0460                     _TMR1IE	set	1120
   406  043B                     _TRISC3	set	1083
   407  043C                     _TRISC4	set	1084
   408  04C5                     _TXEN	set	1221
   409  040F                     _nRBPU	set	1039
   410  0188                     _ANSEL	set	392
   411  0189                     _ANSELH	set	393
   412  0C3B                     _BRG16	set	3131
   413  0422                     STR_6:	
   414  0422  3421               	retlw	33	;'!'
   415  0423  3420               	retlw	32	;' '
   416  0424  3469               	retlw	105	;'i'
   417  0425  3473               	retlw	115	;'s'
   418  0426  3420               	retlw	32	;' '
   419  0427  3470               	retlw	112	;'p'
   420  0428  346F               	retlw	111	;'o'
   421  0429  3469               	retlw	105	;'i'
   422  042A  346E               	retlw	110	;'n'
   423  042B  3474               	retlw	116	;'t'
   424  042C  3465               	retlw	101	;'e'
   425  042D  3472               	retlw	114	;'r'
   426  042E  342C               	retlw	44	;','
   427  042F  3420               	retlw	32	;' '
   428  0430  342E               	retlw	46	;'.'
   429  0431  3420               	retlw	32	;' '
   430  0432  3469               	retlw	105	;'i'
   431  0433  3473               	retlw	115	;'s'
   432  0434  3420               	retlw	32	;' '
   433  0435  3465               	retlw	101	;'e'
   434  0436  346D               	retlw	109	;'m'
   435  0437  3470               	retlw	112	;'p'
   436  0438  3474               	retlw	116	;'t'
   437  0439  3479               	retlw	121	;'y'
   438  043A  342C               	retlw	44	;','
   439  043B  3420               	retlw	32	;' '
   440  043C  3467               	retlw	103	;'g'
   441  043D  3472               	retlw	114	;'r'
   442  043E  3465               	retlw	101	;'e'
   443  043F  3465               	retlw	101	;'e'
   444  0440  346E               	retlw	110	;'n'
   445  0441  3420               	retlw	32	;' '
   446  0442  3469               	retlw	105	;'i'
   447  0443  3473               	retlw	115	;'s'
   448  0444  3420               	retlw	32	;' '
   449  0445  3427               	retlw	39	;'''
   450  0446  344F               	retlw	79	;'O'
   451  0447  3427               	retlw	39	;'''
   452  0448  342C               	retlw	44	;','
   453  0449  3420               	retlw	32	;' '
   454  044A  3472               	retlw	114	;'r'
   455  044B  3465               	retlw	101	;'e'
   456  044C  3464               	retlw	100	;'d'
   457  044D  3420               	retlw	32	;' '
   458  044E  3469               	retlw	105	;'i'
   459  044F  3473               	retlw	115	;'s'
   460  0450  3420               	retlw	32	;' '
   461  0451  3427               	retlw	39	;'''
   462  0452  3458               	retlw	88	;'X'
   463  0453  3427               	retlw	39	;'''
   464  0454  3400               	retlw	0
   465  0455                     STR_33:	
   466  0455  3452               	retlw	82	;'R'
   467  0456  3465               	retlw	101	;'e'
   468  0457  3473               	retlw	115	;'s'
   469  0458  3465               	retlw	101	;'e'
   470  0459  3474               	retlw	116	;'t'
   471  045A  3420               	retlw	32	;' '
   472  045B  3474               	retlw	116	;'t'
   473  045C  346F               	retlw	111	;'o'
   474  045D  3420               	retlw	32	;' '
   475  045E  3452               	retlw	82	;'R'
   476  045F  3465               	retlw	101	;'e'
   477  0460  3473               	retlw	115	;'s'
   478  0461  3474               	retlw	116	;'t'
   479  0462  3461               	retlw	97	;'a'
   480  0463  3472               	retlw	114	;'r'
   481  0464  3474               	retlw	116	;'t'
   482  0465  3400               	retlw	0
   483  0466                     STR_9:	
   484  0466  3450               	retlw	80	;'P'
   485  0467  3472               	retlw	114	;'r'
   486  0468  3465               	retlw	101	;'e'
   487  0469  3473               	retlw	115	;'s'
   488  046A  3473               	retlw	115	;'s'
   489  046B  3420               	retlw	32	;' '
   490  046C  346B               	retlw	107	;'k'
   491  046D  3465               	retlw	101	;'e'
   492  046E  3479               	retlw	121	;'y'
   493  046F  3420               	retlw	32	;' '
   494  0470  3431               	retlw	49	;'1'
   495  0471  342D               	retlw	45	;'-'
   496  0472  3438               	retlw	56	;'8'
   497  0473  3400               	retlw	0
   498  0474                     STR_13:	
   499  0474  3454               	retlw	84	;'T'
   500  0475  346F               	retlw	111	;'o'
   501  0476  3474               	retlw	116	;'t'
   502  0477  3461               	retlw	97	;'a'
   503  0478  346C               	retlw	108	;'l'
   504  0479  3420               	retlw	32	;' '
   505  047A  3450               	retlw	80	;'P'
   506  047B  346C               	retlw	108	;'l'
   507  047C  3461               	retlw	97	;'a'
   508  047D  3479               	retlw	121	;'y'
   509  047E  3465               	retlw	101	;'e'
   510  047F  3464               	retlw	100	;'d'
   511  0480  343A               	retlw	58	;':'
   512  0481  3400               	retlw	0
   513  0482                     STR_10:	
   514  0482  3474               	retlw	116	;'t'
   515  0483  346F               	retlw	111	;'o'
   516  0484  3420               	retlw	32	;' '
   517  0485  3465               	retlw	101	;'e'
   518  0486  346E               	retlw	110	;'n'
   519  0487  3474               	retlw	116	;'t'
   520  0488  3465               	retlw	101	;'e'
   521  0489  3472               	retlw	114	;'r'
   522  048A  3420               	retlw	32	;' '
   523  048B  346D               	retlw	109	;'m'
   524  048C  346F               	retlw	111	;'o'
   525  048D  3476               	retlw	118	;'v'
   526  048E  3465               	retlw	101	;'e'
   527  048F  3400               	retlw	0
   528  0490                     STR_18:	
   529  0490  3450               	retlw	80	;'P'
   530  0491  346C               	retlw	108	;'l'
   531  0492  3465               	retlw	101	;'e'
   532  0493  3461               	retlw	97	;'a'
   533  0494  3473               	retlw	115	;'s'
   534  0495  3465               	retlw	101	;'e'
   535  0496  3420               	retlw	32	;' '
   536  0497  3473               	retlw	115	;'s'
   537  0498  3465               	retlw	101	;'e'
   538  0499  346C               	retlw	108	;'l'
   539  049A  3465               	retlw	101	;'e'
   540  049B  3463               	retlw	99	;'c'
   541  049C  3474               	retlw	116	;'t'
   542  049D  3400               	retlw	0
   543  049E                     STR_4:	
   544  049E  3450               	retlw	80	;'P'
   545  049F  3472               	retlw	114	;'r'
   546  04A0  3465               	retlw	101	;'e'
   547  04A1  3473               	retlw	115	;'s'
   548  04A2  3473               	retlw	115	;'s'
   549  04A3  3420               	retlw	32	;' '
   550  04A4  3461               	retlw	97	;'a'
   551  04A5  346E               	retlw	110	;'n'
   552  04A6  3479               	retlw	121	;'y'
   553  04A7  3420               	retlw	32	;' '
   554  04A8  346B               	retlw	107	;'k'
   555  04A9  3465               	retlw	101	;'e'
   556  04AA  3479               	retlw	121	;'y'
   557  04AB  3400               	retlw	0
   558  04AC                     STR_8:	
   559  04AC  3447               	retlw	71	;'G'
   560  04AD  3472               	retlw	114	;'r'
   561  04AE  3465               	retlw	101	;'e'
   562  04AF  3465               	retlw	101	;'e'
   563  04B0  346E               	retlw	110	;'n'
   564  04B1  3427               	retlw	39	;'''
   565  04B2  3473               	retlw	115	;'s'
   566  04B3  3420               	retlw	32	;' '
   567  04B4  3454               	retlw	84	;'T'
   568  04B5  3475               	retlw	117	;'u'
   569  04B6  3472               	retlw	114	;'r'
   570  04B7  346E               	retlw	110	;'n'
   571  04B8  3400               	retlw	0
   572  04B9                     STR_24:	
   573  04B9  3449               	retlw	73	;'I'
   574  04BA  346E               	retlw	110	;'n'
   575  04BB  3476               	retlw	118	;'v'
   576  04BC  3461               	retlw	97	;'a'
   577  04BD  346C               	retlw	108	;'l'
   578  04BE  3469               	retlw	105	;'i'
   579  04BF  3464               	retlw	100	;'d'
   580  04C0  3420               	retlw	32	;' '
   581  04C1  3450               	retlw	80	;'P'
   582  04C2  346C               	retlw	108	;'l'
   583  04C3  3461               	retlw	97	;'a'
   584  04C4  3479               	retlw	121	;'y'
   585  04C5  3400               	retlw	0
   586  04C6                     STR_2:	
   587  04C6  3457               	retlw	87	;'W'
   588  04C7  3465               	retlw	101	;'e'
   589  04C8  346C               	retlw	108	;'l'
   590  04C9  3463               	retlw	99	;'c'
   591  04CA  346F               	retlw	111	;'o'
   592  04CB  346D               	retlw	109	;'m'
   593  04CC  3465               	retlw	101	;'e'
   594  04CD  3420               	retlw	32	;' '
   595  04CE  3474               	retlw	116	;'t'
   596  04CF  346F               	retlw	111	;'o'
   597  04D0  3420               	retlw	32	;' '
   598  04D1  3400               	retlw	0
   599  04D2                     STR_31:	
   600  04D2  3447               	retlw	71	;'G'
   601  04D3  3472               	retlw	114	;'r'
   602  04D4  3465               	retlw	101	;'e'
   603  04D5  3465               	retlw	101	;'e'
   604  04D6  346E               	retlw	110	;'n'
   605  04D7  3420               	retlw	32	;' '
   606  04D8  3457               	retlw	87	;'W'
   607  04D9  3469               	retlw	105	;'i'
   608  04DA  346E               	retlw	110	;'n'
   609  04DB  3473               	retlw	115	;'s'
   610  04DC  3421               	retlw	33	;'!'
   611  04DD  3400               	retlw	0
   612  04DE                     STR_15:	
   613  04DE  3473               	retlw	115	;'s'
   614  04DF  3465               	retlw	101	;'e'
   615  04E0  346C               	retlw	108	;'l'
   616  04E1  3465               	retlw	101	;'e'
   617  04E2  3463               	retlw	99	;'c'
   618  04E3  3474               	retlw	116	;'t'
   619  04E4  3420               	retlw	32	;' '
   620  04E5  346D               	retlw	109	;'m'
   621  04E6  346F               	retlw	111	;'o'
   622  04E7  3476               	retlw	118	;'v'
   623  04E8  3465               	retlw	101	;'e'
   624  04E9  3400               	retlw	0
   625  04EA                     STR_17:	
   626  04EA  3443               	retlw	67	;'C'
   627  04EB  346F               	retlw	111	;'o'
   628  04EC  346C               	retlw	108	;'l'
   629  04ED  3420               	retlw	32	;' '
   630  04EE  3473               	retlw	115	;'s'
   631  04EF  3465               	retlw	101	;'e'
   632  04F0  3463               	retlw	99	;'c'
   633  04F1  346F               	retlw	111	;'o'
   634  04F2  346E               	retlw	110	;'n'
   635  04F3  3464               	retlw	100	;'d'
   636  04F4  3400               	retlw	0
   637  04F5                     STR_7:	
   638  04F5  3452               	retlw	82	;'R'
   639  04F6  3465               	retlw	101	;'e'
   640  04F7  3464               	retlw	100	;'d'
   641  04F8  3427               	retlw	39	;'''
   642  04F9  3473               	retlw	115	;'s'
   643  04FA  3420               	retlw	32	;' '
   644  04FB  3454               	retlw	84	;'T'
   645  04FC  3475               	retlw	117	;'u'
   646  04FD  3472               	retlw	114	;'r'
   647  04FE  346E               	retlw	110	;'n'
   648  04FF  3400               	retlw	0
   649  0500                     STR_14:	
   650  0500  3450               	retlw	80	;'P'
   651  0501  3472               	retlw	114	;'r'
   652  0502  3465               	retlw	101	;'e'
   653  0503  3473               	retlw	115	;'s'
   654  0504  3473               	retlw	115	;'s'
   655  0505  3420               	retlw	32	;' '
   656  0506  342A               	retlw	42	;'*'
   657  0507  3420               	retlw	32	;' '
   658  0508  3474               	retlw	116	;'t'
   659  0509  346F               	retlw	111	;'o'
   660  050A  3400               	retlw	0
   661  050B                     STR_30:	
   662  050B  3452               	retlw	82	;'R'
   663  050C  3465               	retlw	101	;'e'
   664  050D  3464               	retlw	100	;'d'
   665  050E  3420               	retlw	32	;' '
   666  050F  3457               	retlw	87	;'W'
   667  0510  3469               	retlw	105	;'i'
   668  0511  346E               	retlw	110	;'n'
   669  0512  3473               	retlw	115	;'s'
   670  0513  3421               	retlw	33	;'!'
   671  0514  3400               	retlw	0
   672  0515                     STR_5:	
   673  0515  3474               	retlw	116	;'t'
   674  0516  346F               	retlw	111	;'o'
   675  0517  3420               	retlw	32	;' '
   676  0518  3473               	retlw	115	;'s'
   677  0519  3474               	retlw	116	;'t'
   678  051A  3461               	retlw	97	;'a'
   679  051B  3472               	retlw	114	;'r'
   680  051C  3474               	retlw	116	;'t'
   681  051D  3421               	retlw	33	;'!'
   682  051E  3400               	retlw	0
   683  051F                     STR_1:	
   684  051F  3420               	retlw	32	;' '
   685  0520  3431               	retlw	49	;'1'
   686  0521  3432               	retlw	50	;'2'
   687  0522  3433               	retlw	51	;'3'
   688  0523  3434               	retlw	52	;'4'
   689  0524  3435               	retlw	53	;'5'
   690  0525  3436               	retlw	54	;'6'
   691  0526  3437               	retlw	55	;'7'
   692  0527  3438               	retlw	56	;'8'
   693  0528  3400               	retlw	0
   694  0529                     STR_27:	
   695  0529  3447               	retlw	71	;'G'
   696  052A  3461               	retlw	97	;'a'
   697  052B  346D               	retlw	109	;'m'
   698  052C  3465               	retlw	101	;'e'
   699  052D  3420               	retlw	32	;' '
   700  052E  346F               	retlw	111	;'o'
   701  052F  3476               	retlw	118	;'v'
   702  0530  3465               	retlw	101	;'e'
   703  0531  3472               	retlw	114	;'r'
   704  0532  3400               	retlw	0
   705  0533                     STR_16:	
   706  0533  3452               	retlw	82	;'R'
   707  0534  346F               	retlw	111	;'o'
   708  0535  3477               	retlw	119	;'w'
   709  0536  3420               	retlw	32	;' '
   710  0537  3466               	retlw	102	;'f'
   711  0538  3469               	retlw	105	;'i'
   712  0539  3472               	retlw	114	;'r'
   713  053A  3473               	retlw	115	;'s'
   714  053B  3474               	retlw	116	;'t'
   715  053C  3400               	retlw	0
   716  053D                     STR_3:	
   717  053D  344F               	retlw	79	;'O'
   718  053E  3474               	retlw	116	;'t'
   719  053F  3468               	retlw	104	;'h'
   720  0540  3465               	retlw	101	;'e'
   721  0541  346C               	retlw	108	;'l'
   722  0542  346C               	retlw	108	;'l'
   723  0543  346F               	retlw	111	;'o'
   724  0544  3421               	retlw	33	;'!'
   725  0545  3400               	retlw	0
   726  0546                     STR_19:	
   727  0546  346B               	retlw	107	;'k'
   728  0547  3465               	retlw	101	;'e'
   729  0548  3479               	retlw	121	;'y'
   730  0549  3473               	retlw	115	;'s'
   731  054A  3420               	retlw	32	;' '
   732  054B  3431               	retlw	49	;'1'
   733  054C  342D               	retlw	45	;'-'
   734  054D  3438               	retlw	56	;'8'
   735  054E  3400               	retlw	0
   736  054F                     STR_12:	
   737  054F  3447               	retlw	71	;'G'
   738  0550  3472               	retlw	114	;'r'
   739  0551  3465               	retlw	101	;'e'
   740  0552  3465               	retlw	101	;'e'
   741  0553  346E               	retlw	110	;'n'
   742  0554  343A               	retlw	58	;':'
   743  0555  3420               	retlw	32	;' '
   744  0556  3400               	retlw	0
   745  0557                     STR_11:	
   746  0557  3452               	retlw	82	;'R'
   747  0558  3465               	retlw	101	;'e'
   748  0559  3464               	retlw	100	;'d'
   749  055A  343A               	retlw	58	;':'
   750  055B  3420               	retlw	32	;' '
   751  055C  3400               	retlw	0
   752  055D                     STR_21:	
   753  055D  3443               	retlw	67	;'C'
   754  055E  346F               	retlw	111	;'o'
   755  055F  346C               	retlw	108	;'l'
   756  0560  343A               	retlw	58	;':'
   757  0561  3420               	retlw	32	;' '
   758  0562  3400               	retlw	0
   759  0563                     STR_20:	
   760  0563  3452               	retlw	82	;'R'
   761  0564  346F               	retlw	111	;'o'
   762  0565  3477               	retlw	119	;'w'
   763  0566  343A               	retlw	58	;':'
   764  0567  3420               	retlw	32	;' '
   765  0568  3400               	retlw	0
   766  0569                     STR_32:	
   767  0569  3454               	retlw	84	;'T'
   768  056A  3469               	retlw	105	;'i'
   769  056B  3465               	retlw	101	;'e'
   770  056C  3421               	retlw	33	;'!'
   771  056D  3400               	retlw	0
   772  0557                     
   773                           ; #config settings
   774  0000                     
   775                           	psect	cinit
   776  0015                     start_initialization:	
   777  0015                     __initialization:	
   778                           
   779                           ; Clear objects allocated to COMMON
   780  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   781  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   782                           
   783                           ; Clear objects allocated to BANK0
   784  0017  01DE               	clrf	__pbssBANK0& (0+127)
   785  0018  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   786  0019  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   787                           
   788                           ; Initialize objects allocated to BANK0
   789  001A  1383               	bcf	3,7	;select IRP bank0
   790  001B  305E               	movlw	low (__pdataBANK0+24)
   791  001C  00FD               	movwf	btemp+-1
   792  001D  300C               	movlw	high __pidataBANK0
   793  001E  00FE               	movwf	btemp
   794  001F  305C               	movlw	low __pidataBANK0
   795  0020  00FF               	movwf	btemp+1
   796  0021  3046               	movlw	low __pdataBANK0
   797  0022  0084               	movwf	4
   798  0023  120A  158A  23D5   	fcall	init_ram0
   799  0026                     end_of_initialization:	
   800                           ;End of C runtime variable initialization code
   801                           
   802  0026                     __end_of__initialization:	
   803  0026  0183               	clrf	3
   804  0027  120A  118A  282A   	ljmp	_main	;jump to C main() function
   805                           
   806                           	psect	bssCOMMON
   807  0077                     __pbssCOMMON:	
   808  0077                     _LCDStateCount:	
   809  0077                     	ds	1
   810  0078                     _played:	
   811  0078                     	ds	1
   812                           
   813                           	psect	bssBANK0
   814  005E                     __pbssBANK0:	
   815  005E                     _LCDNextState:	
   816  005E                     	ds	1
   817  005F                     _LCDState:	
   818  005F                     	ds	1
   819  0060                     _color:	
   820  0060                     	ds	1
   821                           
   822                           	psect	dataBANK0
   823  0046                     __pdataBANK0:	
   824  0046                     _AllPos:	
   825  0046                     	ds	8
   826  004E                     _GreenPos:	
   827  004E                     	ds	8
   828  0056                     _RedPos:	
   829  0056                     	ds	8
   830                           
   831                           	psect	inittext
   832  0BD1                     init_fetch0:	
   833                           ;	Called with low address in FSR and high address in W
   834                           
   835  0BD1  087E               	movf	126,w
   836  0BD2  008A               	movwf	10
   837  0BD3  087F               	movf	127,w
   838  0BD4  0082               	movwf	2
   839  0BD5                     init_ram0:	
   840                           ;Called with:
   841                           ;	high address of idata address in btemp 
   842                           ;	low address of idata address in btemp+1 
   843                           ;	low address of data in FSR
   844                           ;	high address + 1 of data in btemp-1
   845                           
   846  0BD5  23D1  120A  158A   	fcall	init_fetch0
   847  0BD8  0080               	movwf	0
   848  0BD9  0A84               	incf	4,f
   849  0BDA  0804               	movf	4,w
   850  0BDB  067D               	xorwf	125,w
   851  0BDC  1903               	btfsc	3,2
   852  0BDD  3400               	retlw	0
   853  0BDE  0AFF               	incf	127,f
   854  0BDF  1903               	btfsc	3,2
   855  0BE0  0AFE               	incf	126,f
   856  0BE1  2BD5               	goto	init_ram0
   857                           
   858                           	psect	cstackCOMMON
   859  0070                     __pcstackCOMMON:	
   860  0070                     ?_I2C_Start:	
   861  0070                     ?_I2C_SendByte:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0070                     ?_I2C_Stop:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0070                     ?_I2C_Initialize:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_tmr0_init:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_Delay20us:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_LCD_strobe:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_lcd_clear:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_lcd_putch:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_lcd_goto:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_lcd_init:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_interrupt_handler:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ??_interrupt_handler:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_matrixSetup:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_setup:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_OutChar:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_drawMatrix:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_getKeypadKey:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_getKeypadPressed:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ?_checkFullBoard:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_countColor:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_displayNuber:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_main:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_I2C_Idle_Status:	
   928                           ; 1 bytes @ 0x0
   929                           
   930                           
   931                           ; 1 bytes @ 0x0
   932  0070                     	ds	5
   933  0075                     ??_I2C_Start:	
   934  0075                     ??_I2C_SendByte:	
   935                           ; 1 bytes @ 0x5
   936                           
   937  0075                     ??_I2C_Stop:	
   938                           ; 1 bytes @ 0x5
   939                           
   940  0075                     ??_I2C_Initialize:	
   941                           ; 1 bytes @ 0x5
   942                           
   943  0075                     ??_tmr0_init:	
   944                           ; 1 bytes @ 0x5
   945                           
   946  0075                     ?_DelayMs:	
   947                           ; 1 bytes @ 0x5
   948                           
   949  0075                     ??_Delay20us:	
   950                           ; 1 bytes @ 0x5
   951                           
   952  0075                     ??_OutChar:	
   953                           ; 1 bytes @ 0x5
   954                           
   955  0075                     ?_checkPositionFree:	
   956                           ; 1 bytes @ 0x5
   957                           
   958  0075                     ??_getKeypadKey:	
   959                           ; 1 bytes @ 0x5
   960                           
   961  0075                     ??_getKeypadPressed:	
   962                           ; 1 bytes @ 0x5
   963                           
   964  0075                     ??_checkFullBoard:	
   965                           ; 1 bytes @ 0x5
   966                           
   967  0075                     ??_countColor:	
   968                           ; 1 bytes @ 0x5
   969                           
   970  0075                     ??___awdiv:	
   971                           ; 1 bytes @ 0x5
   972                           
   973  0075                     ??___awmod:	
   974                           ; 1 bytes @ 0x5
   975                           
   976  0075                     OutChar@outchr:	
   977                           ; 1 bytes @ 0x5
   978                           
   979  0075                     checkPositionFree@col:	
   980                           ; 1 bytes @ 0x5
   981                           
   982  0075                     DelayMs@millis:	
   983                           ; 1 bytes @ 0x5
   984                           
   985                           
   986                           ; 2 bytes @ 0x5
   987  0075                     	ds	1
   988  0076                     ??_OutCharMsg:	
   989  0076                     Delay20us@next:	
   990                           ; 1 bytes @ 0x6
   991                           
   992  0076                     checkPositionFree@colorArray:	
   993                           ; 1 bytes @ 0x6
   994                           
   995  0076                     checkFullBoard@i:	
   996                           ; 1 bytes @ 0x6
   997                           
   998  0076                     I2C_SendByte@data:	
   999                           ; 1 bytes @ 0x6
  1000                           
  1001                           
  1002                           ; 1 bytes @ 0x6
  1003  0076                     	ds	1
  1004  0077                     ??_I2C_SendAddress:	
  1005  0077                     ??_DelayMs:	
  1006                           ; 1 bytes @ 0x7
  1007                           
  1008  0077                     ??_LCD_strobe:	
  1009                           ; 1 bytes @ 0x7
  1010                           
  1011  0077                     ??_lcd_clear:	
  1012                           ; 1 bytes @ 0x7
  1013                           
  1014  0077                     ??_matrixSetup:	
  1015                           ; 1 bytes @ 0x7
  1016                           
  1017  0077                     ??_setup:	
  1018                           ; 1 bytes @ 0x7
  1019                           
  1020                           
  1021                           	psect	cstackBANK0
  1022  0020                     __pcstackBANK0:	
  1023                           ; 1 bytes @ 0x7
  1024                           
  1025  0020                     ?_I2C_SendAddress:	
  1026  0020                     ?_lcd_write:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0020                     ?_OutCharMsg:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0020                     ??_checkPositionFree:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0020                     ??_I2C_Idle_Status:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0020                     ?___awdiv:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0020                     ?___awmod:	
  1042                           ; 2 bytes @ 0x0
  1043                           
  1044  0020                     lcd_write@CmdChar:	
  1045                           ; 2 bytes @ 0x0
  1046                           
  1047  0020                     getKeypadKey@temp2:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0020                     getKeypadPressed@temp2:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0020                     countColor@count:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0020                     I2C_SendAddress@rw:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0020                     OutCharMsg@string:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0020                     ___awdiv@divisor:	
  1063                           ; 2 bytes @ 0x0
  1064                           
  1065  0020                     ___awmod@divisor:	
  1066                           ; 2 bytes @ 0x0
  1067                           
  1068                           
  1069                           ; 2 bytes @ 0x0
  1070  0020                     	ds	1
  1071  0021                     ??_lcd_write:	
  1072  0021                     getKeypadKey@temp:	
  1073                           ; 1 bytes @ 0x1
  1074                           
  1075  0021                     getKeypadPressed@temp:	
  1076                           ; 1 bytes @ 0x1
  1077                           
  1078  0021                     countColor@i:	
  1079                           ; 1 bytes @ 0x1
  1080                           
  1081  0021                     I2C_SendAddress@address:	
  1082                           ; 1 bytes @ 0x1
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0x1
  1086  0021                     	ds	1
  1087  0022                     lcd_write@mode:	
  1088  0022                     getKeypadKey@col:	
  1089                           ; 1 bytes @ 0x2
  1090                           
  1091  0022                     countColor@temp:	
  1092                           ; 1 bytes @ 0x2
  1093                           
  1094  0022                     ___awdiv@dividend:	
  1095                           ; 1 bytes @ 0x2
  1096                           
  1097  0022                     ___awmod@dividend:	
  1098                           ; 2 bytes @ 0x2
  1099                           
  1100                           
  1101                           ; 2 bytes @ 0x2
  1102  0022                     	ds	1
  1103  0023                     ?_lcd_puts:	
  1104  0023                     ??_lcd_putch:	
  1105                           ; 1 bytes @ 0x3
  1106                           
  1107  0023                     ??_lcd_goto:	
  1108                           ; 1 bytes @ 0x3
  1109                           
  1110  0023                     ??_lcd_init:	
  1111                           ; 1 bytes @ 0x3
  1112                           
  1113  0023                     countColor@color:	
  1114                           ; 1 bytes @ 0x3
  1115                           
  1116  0023                     lcd_puts@string:	
  1117                           ; 1 bytes @ 0x3
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x3
  1121  0023                     	ds	1
  1122  0024                     lcd_putch@character:	
  1123  0024                     lcd_goto@position:	
  1124                           ; 1 bytes @ 0x4
  1125                           
  1126  0024                     checkPositionFree@row:	
  1127                           ; 1 bytes @ 0x4
  1128                           
  1129  0024                     ___awdiv@counter:	
  1130                           ; 1 bytes @ 0x4
  1131                           
  1132  0024                     ___awmod@counter:	
  1133                           ; 1 bytes @ 0x4
  1134                           
  1135                           
  1136                           ; 1 bytes @ 0x4
  1137  0024                     	ds	1
  1138  0025                     ??_lcd_puts:	
  1139  0025                     checkPositionFree@temp:	
  1140                           ; 1 bytes @ 0x5
  1141                           
  1142  0025                     ___awdiv@sign:	
  1143                           ; 1 bytes @ 0x5
  1144                           
  1145  0025                     ___awmod@sign:	
  1146                           ; 1 bytes @ 0x5
  1147                           
  1148                           
  1149                           ; 1 bytes @ 0x5
  1150  0025                     	ds	1
  1151  0026                     ?_sendMatrix:	
  1152  0026                     ?_legalPlay:	
  1153                           ; 1 bytes @ 0x6
  1154                           
  1155  0026                     ?_drawFrom:	
  1156                           ; 1 bytes @ 0x6
  1157                           
  1158  0026                     sendMatrix@PointerC:	
  1159                           ; 1 bytes @ 0x6
  1160                           
  1161  0026                     legalPlay@col:	
  1162                           ; 1 bytes @ 0x6
  1163                           
  1164  0026                     drawFrom@col:	
  1165                           ; 1 bytes @ 0x6
  1166                           
  1167  0026                     ___awdiv@quotient:	
  1168                           ; 1 bytes @ 0x6
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0x6
  1172  0026                     	ds	1
  1173  0027                     ??_sendMatrix:	
  1174  0027                     legalPlay@ownColor:	
  1175                           ; 1 bytes @ 0x7
  1176                           
  1177  0027                     drawFrom@r:	
  1178                           ; 1 bytes @ 0x7
  1179                           
  1180                           
  1181                           ; 1 bytes @ 0x7
  1182  0027                     	ds	1
  1183  0028                     ??_drawMatrix:	
  1184  0028                     ??_displayNuber:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  0028                     legalPlay@otherColor:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190  0028                     drawFrom@c:	
  1191                           ; 1 bytes @ 0x8
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x8
  1195  0028                     	ds	1
  1196  0029                     ??_legalPlay:	
  1197  0029                     drawMatrix@temp:	
  1198                           ; 1 bytes @ 0x9
  1199                           
  1200  0029                     sendMatrix@PointerR:	
  1201                           ; 1 bytes @ 0x9
  1202                           
  1203  0029                     drawFrom@ownColor:	
  1204                           ; 1 bytes @ 0x9
  1205                           
  1206                           
  1207                           ; 1 bytes @ 0x9
  1208  0029                     	ds	1
  1209  002A                     sendMatrix@c:	
  1210  002A                     drawFrom@otherColor:	
  1211                           ; 1 bytes @ 0xA
  1212                           
  1213  002A                     displayNuber@num:	
  1214                           ; 1 bytes @ 0xA
  1215                           
  1216                           
  1217                           ; 1 bytes @ 0xA
  1218  002A                     	ds	1
  1219  002B                     ??_drawFrom:	
  1220  002B                     sendMatrix@r:	
  1221                           ; 1 bytes @ 0xB
  1222                           
  1223  002B                     legalPlay@line:	
  1224                           ; 1 bytes @ 0xB
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0xB
  1228  002B                     	ds	1
  1229  002C                     legalPlay@row:	
  1230                           
  1231                           ; 1 bytes @ 0xC
  1232  002C                     	ds	1
  1233  002D                     legalPlay@r:	
  1234                           
  1235                           ; 1 bytes @ 0xD
  1236  002D                     	ds	1
  1237  002E                     legalPlay@c:	
  1238                           
  1239                           ; 1 bytes @ 0xE
  1240  002E                     	ds	1
  1241  002F                     legalPlay@nextR:	
  1242                           
  1243                           ; 1 bytes @ 0xF
  1244  002F                     	ds	1
  1245  0030                     legalPlay@nextC:	
  1246  0030                     drawFrom@row:	
  1247                           ; 1 bytes @ 0x10
  1248                           
  1249                           
  1250                           ; 1 bytes @ 0x10
  1251  0030                     	ds	1
  1252  0031                     ?_playPeice:	
  1253  0031                     playPeice@col:	
  1254                           ; 1 bytes @ 0x11
  1255                           
  1256                           
  1257                           ; 1 bytes @ 0x11
  1258  0031                     	ds	1
  1259  0032                     playPeice@ownColor:	
  1260                           
  1261                           ; 1 bytes @ 0x12
  1262  0032                     	ds	1
  1263  0033                     playPeice@otherColor:	
  1264                           
  1265                           ; 1 bytes @ 0x13
  1266  0033                     	ds	1
  1267  0034                     ??_playPeice:	
  1268                           
  1269                           ; 1 bytes @ 0x14
  1270  0034                     	ds	5
  1271  0039                     playPeice@line:	
  1272                           
  1273                           ; 1 bytes @ 0x19
  1274  0039                     	ds	1
  1275  003A                     playPeice@nextR:	
  1276                           
  1277                           ; 1 bytes @ 0x1A
  1278  003A                     	ds	1
  1279  003B                     playPeice@nextC:	
  1280                           
  1281                           ; 1 bytes @ 0x1B
  1282  003B                     	ds	1
  1283  003C                     playPeice@row:	
  1284                           
  1285                           ; 1 bytes @ 0x1C
  1286  003C                     	ds	1
  1287  003D                     playPeice@r:	
  1288                           
  1289                           ; 1 bytes @ 0x1D
  1290  003D                     	ds	1
  1291  003E                     playPeice@c:	
  1292                           
  1293                           ; 1 bytes @ 0x1E
  1294  003E                     	ds	1
  1295  003F                     ??_main:	
  1296                           
  1297                           ; 1 bytes @ 0x1F
  1298  003F                     	ds	3
  1299  0042                     main@temp:	
  1300                           
  1301                           ; 2 bytes @ 0x22
  1302  0042                     	ds	2
  1303  0044                     main@row:	
  1304                           
  1305                           ; 1 bytes @ 0x24
  1306  0044                     	ds	1
  1307  0045                     main@col:	
  1308                           
  1309                           ; 1 bytes @ 0x25
  1310  0045                     	ds	1
  1311                           
  1312                           	psect	maintext
  1313  002A                     __pmaintext:	
  1314 ;;
  1315 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1316 ;;
  1317 ;; *************** function _main *****************
  1318 ;; Defined at:
  1319 ;;		line 414 in file "Othello.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  temp            2   34[BANK0 ] unsigned int 
  1324 ;;  col             1   37[BANK0 ] unsigned char 
  1325 ;;  row             1   36[BANK0 ] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : B00/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       4       0       0       0
  1337 ;;      Temps:          0       3       0       0       0
  1338 ;;      Totals:         0       7       0       0       0
  1339 ;;Total ram usage:        7 bytes
  1340 ;; Hardware stack levels required when called:    7
  1341 ;; This function calls:
  1342 ;;		_DelayMs
  1343 ;;		_OutChar
  1344 ;;		_OutCharMsg
  1345 ;;		_checkFullBoard
  1346 ;;		_countColor
  1347 ;;		_displayNuber
  1348 ;;		_drawMatrix
  1349 ;;		_getKeypadKey
  1350 ;;		_getKeypadPressed
  1351 ;;		_lcd_clear
  1352 ;;		_lcd_goto
  1353 ;;		_lcd_putch
  1354 ;;		_lcd_puts
  1355 ;;		_legalPlay
  1356 ;;		_playPeice
  1357 ;;		_sendMatrix
  1358 ;;		_setup
  1359 ;; This function is called by:
  1360 ;;		Startup code after reset
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _main
  1366  002A                     _main:	
  1367                           
  1368                           ;Othello.c: 415: unsigned char row = 0;
  1369                           
  1370                           ;incstack = 0
  1371                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1372  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1373  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1374  002C  01C4               	clrf	main@row
  1375                           
  1376                           ;Othello.c: 416: unsigned char col = 0;
  1377  002D  01C5               	clrf	main@col
  1378                           
  1379                           ;Othello.c: 417: for(unsigned int temp = 0; temp < 3000; temp++);
  1380  002E  01C2               	clrf	main@temp
  1381  002F  01C3               	clrf	main@temp+1
  1382  0030  300B               	movlw	11
  1383  0031  0243               	subwf	main@temp+1,w
  1384  0032  30B8               	movlw	184
  1385  0033  1903               	skipnz
  1386  0034  0242               	subwf	main@temp,w
  1387  0035  1803               	btfsc	3,0
  1388  0036  2844               	goto	l3037
  1389  0037                     l3035:	
  1390  0037  3001               	movlw	1
  1391  0038  07C2               	addwf	main@temp,f
  1392  0039  1803               	skipnc
  1393  003A  0AC3               	incf	main@temp+1,f
  1394  003B  3000               	movlw	0
  1395  003C  07C3               	addwf	main@temp+1,f
  1396  003D  300B               	movlw	11
  1397  003E  0243               	subwf	main@temp+1,w
  1398  003F  30B8               	movlw	184
  1399  0040  1903               	skipnz
  1400  0041  0242               	subwf	main@temp,w
  1401  0042  1C03               	skipc
  1402  0043  2837               	goto	l3035
  1403  0044                     l3037:	
  1404                           
  1405                           ;Othello.c: 418: setup();
  1406  0044  120A  158A  25DE  120A  118A  	fcall	_setup
  1407                           
  1408                           ;Othello.c: 419: LCDNextState = 1;
  1409  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1410  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1411  004B  01DE               	clrf	_LCDNextState
  1412  004C  0ADE               	incf	_LCDNextState,f
  1413                           
  1414                           ;Othello.c: 421: lcd_puts("Welcome to ");
  1415  004D  30C6               	movlw	low (STR_2| (0+32768))
  1416  004E  00A3               	movwf	lcd_puts@string
  1417  004F  3084               	movlw	high (STR_2| (0+32768))
  1418  0050  00A4               	movwf	lcd_puts@string+1
  1419  0051  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1420                           
  1421                           ;Othello.c: 422: lcd_goto(0x40);
  1422  0056  3040               	movlw	64
  1423  0057  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1424                           
  1425                           ;Othello.c: 423: lcd_puts("Othello!");
  1426  005C  303D               	movlw	low (STR_3| (0+32768))
  1427  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1428  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1429  005F  00A3               	movwf	lcd_puts@string
  1430  0060  3085               	movlw	high (STR_3| (0+32768))
  1431  0061  00A4               	movwf	lcd_puts@string+1
  1432  0062  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1433                           
  1434                           ;Othello.c: 424: DelayMs(5000);
  1435  0067  3088               	movlw	136
  1436  0068  00F5               	movwf	DelayMs@millis
  1437  0069  3013               	movlw	19
  1438  006A  00F6               	movwf	DelayMs@millis+1
  1439  006B  120A  158A  23E2  120A  118A  	fcall	_DelayMs
  1440                           
  1441                           ;Othello.c: 425: lcd_clear();
  1442  0070  120A  158A  23F4  120A  118A  	fcall	_lcd_clear
  1443                           
  1444                           ;Othello.c: 426: lcd_puts("Press any key");
  1445  0075  309E               	movlw	low (STR_4| (0+32768))
  1446  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0078  00A3               	movwf	lcd_puts@string
  1449  0079  3084               	movlw	high (STR_4| (0+32768))
  1450  007A  00A4               	movwf	lcd_puts@string+1
  1451  007B  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1452                           
  1453                           ;Othello.c: 427: lcd_goto(0x40);
  1454  0080  3040               	movlw	64
  1455  0081  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1456                           
  1457                           ;Othello.c: 428: lcd_puts("to start!");
  1458  0086  3015               	movlw	low (STR_5| (0+32768))
  1459  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0089  00A3               	movwf	lcd_puts@string
  1462  008A  3085               	movlw	high (STR_5| (0+32768))
  1463  008B  00A4               	movwf	lcd_puts@string+1
  1464  008C  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1465  0091                     l3053:	
  1466                           ;Othello.c: 429: while(!getKeypadPressed());
  1467                           
  1468  0091  120A  158A  24B2  120A  118A  	fcall	_getKeypadPressed
  1469  0096  3A00               	xorlw	0
  1470  0097  1903               	skipnz
  1471  0098  2891               	goto	l3053
  1472                           
  1473                           ;Othello.c: 430: DelayMs(10);
  1474  0099  300A               	movlw	10
  1475  009A  00F5               	movwf	DelayMs@millis
  1476  009B  3000               	movlw	0
  1477  009C  00F6               	movwf	DelayMs@millis+1
  1478  009D  120A  158A  23E2  120A  118A  	fcall	_DelayMs
  1479  00A2                     l3057:	
  1480                           ;Othello.c: 431: while(getKeypadPressed());
  1481                           
  1482  00A2  120A  158A  24B2  120A  118A  	fcall	_getKeypadPressed
  1483  00A7  3A00               	xorlw	0
  1484  00A8  1D03               	skipz
  1485  00A9  28A2               	goto	l3057
  1486                           
  1487                           ;Othello.c: 432: TMR1IE = 1;
  1488  00AA  1683               	bsf	3,5	;RP0=1, select bank1
  1489  00AB  1303               	bcf	3,6	;RP1=0, select bank1
  1490  00AC  140C               	bsf	12,0	;volatile
  1491  00AD                     L3:	
  1492                           
  1493                           ;Othello.c: 433: drawMatrix();
  1494  00AD  120A  158A  2618  120A  118A  	fcall	_drawMatrix
  1495                           
  1496                           ;Othello.c: 434: OutChar(0x0C);
  1497  00B2  300C               	movlw	12
  1498  00B3  120A  158A  2374  120A  118A  	fcall	_OutChar
  1499                           
  1500                           ;Othello.c: 435: OutCharMsg("! is pointer, . is empty, green is 'O', red is 'X'");
  1501  00B8  3022               	movlw	low (STR_6| (0+32768))
  1502  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1503  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1504  00BB  00A0               	movwf	OutCharMsg@string
  1505  00BC  3084               	movlw	high (STR_6| (0+32768))
  1506  00BD  00A1               	movwf	OutCharMsg@string+1
  1507  00BE  120A  158A  248D  120A  118A  	fcall	_OutCharMsg
  1508                           
  1509                           ;Othello.c: 436: OutChar(0x0A);
  1510  00C3  300A               	movlw	10
  1511  00C4  120A  158A  2374  120A  118A  	fcall	_OutChar
  1512                           
  1513                           ;Othello.c: 437: OutChar(0x0D);
  1514  00C9  300D               	movlw	13
  1515  00CA  120A  158A  2374  120A  118A  	fcall	_OutChar
  1516                           
  1517                           ;Othello.c: 438: sendMatrix(-1,-1);
  1518  00CF  30FF               	movlw	255
  1519  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1520  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1521  00D2  00BF               	movwf	??_main
  1522  00D3  083F               	movf	??_main,w
  1523  00D4  00A6               	movwf	sendMatrix@PointerC
  1524  00D5  30FF               	movlw	255
  1525  00D6  120A  118A  265A  120A  118A  	fcall	_sendMatrix
  1526  00DB                     l3233:	
  1527                           ;Othello.c: 439: while(!checkFullBoard()) {
  1528                           
  1529  00DB  120A  158A  2444  120A  118A  	fcall	_checkFullBoard
  1530  00E0  3A00               	xorlw	0
  1531  00E1  1D03               	btfss	3,2
  1532  00E2  2BB2               	goto	l3235
  1533                           
  1534                           ;Othello.c: 440: if(LCDNextState == 1) {
  1535  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1536  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1537  00E5  035E               	decf	_LCDNextState,w
  1538  00E6  1D03               	btfss	3,2
  1539  00E7  29B0               	goto	l3133
  1540                           
  1541                           ;Othello.c: 441: LCDNextState = 0;
  1542  00E8  01DE               	clrf	_LCDNextState
  1543                           
  1544                           ;Othello.c: 442: lcd_clear();
  1545  00E9  120A  158A  23F4  120A  118A  	fcall	_lcd_clear
  1546                           
  1547                           ;Othello.c: 443: switch(LCDState) {
  1548  00EE  299A               	goto	l3131
  1549  00EF                     l3077:	
  1550                           ;Othello.c: 444: case 0:
  1551                           
  1552                           
  1553                           ;Othello.c: 445: if(color == 0) {
  1554  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1555  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1556  00F1  0860               	movf	_color,w
  1557  00F2  1D03               	btfss	3,2
  1558  00F3  28F8               	goto	l3081
  1559                           
  1560                           ;Othello.c: 446: lcd_puts("Red's Turn");
  1561  00F4  30F5               	movlw	low (STR_7| (0+32768))
  1562  00F5  00A3               	movwf	lcd_puts@string
  1563  00F6  3084               	movlw	high (STR_7| (0+32768))
  1564  00F7  298B               	goto	L4
  1565  00F8                     l3081:	
  1566                           ;Othello.c: 447: } else {
  1567                           
  1568                           
  1569                           ;Othello.c: 448: lcd_puts("Green's Turn");
  1570  00F8  30AC               	movlw	low (STR_8| (0+32768))
  1571  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1572  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1573  00FB  00A3               	movwf	lcd_puts@string
  1574  00FC  3084               	movlw	high (STR_8| (0+32768))
  1575  00FD  298B               	goto	L4
  1576  00FE                     l3085:	
  1577                           ;Othello.c: 452: case 1:
  1578                           
  1579                           ;Othello.c: 451: break;
  1580                           
  1581                           ;Othello.c: 449: }
  1582                           ;Othello.c: 450: LCDState++;
  1583                           
  1584                           
  1585                           ;Othello.c: 453: lcd_puts("Press key 1-8");
  1586  00FE  3066               	movlw	low (STR_9| (0+32768))
  1587  00FF  00A3               	movwf	lcd_puts@string
  1588  0100  3084               	movlw	high (STR_9| (0+32768))
  1589  0101  00A4               	movwf	lcd_puts@string+1
  1590  0102  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1591                           
  1592                           ;Othello.c: 454: lcd_goto(0x40);
  1593  0107  3040               	movlw	64
  1594  0108  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1595                           
  1596                           ;Othello.c: 455: lcd_puts("to enter move");
  1597  010D  3082               	movlw	low (STR_10| (0+32768))
  1598  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1599  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0110  00A3               	movwf	lcd_puts@string
  1601  0111  3084               	movlw	high (STR_10| (0+32768))
  1602  0112  298B               	goto	L4
  1603  0113                     l3093:	
  1604                           ;Othello.c: 458: case 4:
  1605                           
  1606                           ;Othello.c: 457: break;
  1607                           
  1608                           ;Othello.c: 456: LCDState++;
  1609                           
  1610                           
  1611                           ;Othello.c: 459: lcd_puts("Red: ");
  1612  0113  3057               	movlw	low (STR_11| (0+32768))
  1613  0114  00A3               	movwf	lcd_puts@string
  1614  0115  3085               	movlw	high (STR_11| (0+32768))
  1615  0116  00A4               	movwf	lcd_puts@string+1
  1616  0117  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1617                           
  1618                           ;Othello.c: 460: displayNuber(countColor(RedPos));
  1619  011C  3056               	movlw	(low (_RedPos| 0))& (0+255)
  1620  011D  120A  118A  23CE  120A  118A  	fcall	_countColor
  1621  0122  120A  158A  2501  120A  118A  	fcall	_displayNuber
  1622                           
  1623                           ;Othello.c: 461: lcd_goto(0x40);
  1624  0127  3040               	movlw	64
  1625  0128  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1626                           
  1627                           ;Othello.c: 462: lcd_puts("Green: ");
  1628  012D  304F               	movlw	low (STR_12| (0+32768))
  1629  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1630  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1631  0130  00A3               	movwf	lcd_puts@string
  1632  0131  3085               	movlw	high (STR_12| (0+32768))
  1633  0132  00A4               	movwf	lcd_puts@string+1
  1634  0133  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1635                           
  1636                           ;Othello.c: 463: displayNuber(countColor(GreenPos));
  1637  0138  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  1638  0139  120A  118A  23CE  120A  118A  	fcall	_countColor
  1639  013E  120A  158A  2501  120A  118A  	fcall	_displayNuber
  1640  0143  2991               	goto	l3127
  1641  0144                     l3105:	
  1642                           ;Othello.c: 466: case 5:
  1643                           
  1644                           ;Othello.c: 465: break;
  1645                           
  1646                           ;Othello.c: 464: LCDState++;
  1647                           
  1648                           
  1649                           ;Othello.c: 467: lcd_puts("Total Played:");
  1650  0144  3074               	movlw	low (STR_13| (0+32768))
  1651  0145  00A3               	movwf	lcd_puts@string
  1652  0146  3084               	movlw	high (STR_13| (0+32768))
  1653  0147  00A4               	movwf	lcd_puts@string+1
  1654  0148  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1655                           
  1656                           ;Othello.c: 468: lcd_goto(0x40);
  1657  014D  3040               	movlw	64
  1658  014E  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1659                           
  1660                           ;Othello.c: 469: displayNuber(countColor(AllPos) - 4);
  1661  0153  3046               	movlw	(low (_AllPos| 0))& (0+255)
  1662  0154  120A  118A  23CE  120A  118A  	fcall	_countColor
  1663  0159  3EFC               	addlw	252
  1664  015A  120A  158A  2501  120A  118A  	fcall	_displayNuber
  1665                           
  1666                           ;Othello.c: 470: LCDState = 0;
  1667  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0161  2998               	goto	l3129
  1670  0162                     l3113:	
  1671                           ;Othello.c: 472: case 2:
  1672                           
  1673                           ;Othello.c: 471: break;
  1674                           
  1675                           
  1676                           ;Othello.c: 473: lcd_puts("Press * to");
  1677  0162  3000               	movlw	low (STR_14| (0+32768))
  1678  0163  00A3               	movwf	lcd_puts@string
  1679  0164  3085               	movlw	high (STR_14| (0+32768))
  1680  0165  00A4               	movwf	lcd_puts@string+1
  1681  0166  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1682                           
  1683                           ;Othello.c: 474: lcd_goto(0x40);
  1684  016B  3040               	movlw	64
  1685  016C  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1686                           
  1687                           ;Othello.c: 475: lcd_puts("select move");
  1688  0171  30DE               	movlw	low (STR_15| (0+32768))
  1689  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0174  00A3               	movwf	lcd_puts@string
  1692  0175  3084               	movlw	high (STR_15| (0+32768))
  1693  0176  298B               	goto	L4
  1694  0177                     l3121:	
  1695                           ;Othello.c: 478: case 3:
  1696                           
  1697                           ;Othello.c: 477: break;
  1698                           
  1699                           ;Othello.c: 476: LCDState++;
  1700                           
  1701                           
  1702                           ;Othello.c: 479: lcd_puts("Row first");
  1703  0177  3033               	movlw	low (STR_16| (0+32768))
  1704  0178  00A3               	movwf	lcd_puts@string
  1705  0179  3085               	movlw	high (STR_16| (0+32768))
  1706  017A  00A4               	movwf	lcd_puts@string+1
  1707  017B  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1708                           
  1709                           ;Othello.c: 480: lcd_goto(0x40);
  1710  0180  3040               	movlw	64
  1711  0181  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1712                           
  1713                           ;Othello.c: 481: lcd_puts("Col second");
  1714  0186  30EA               	movlw	low (STR_17| (0+32768))
  1715  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0189  00A3               	movwf	lcd_puts@string
  1718  018A  3084               	movlw	high (STR_17| (0+32768))
  1719  018B                     L4:	
  1720  018B  00A4               	movwf	lcd_puts@string+1
  1721  018C  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1722  0191                     l3127:	
  1723                           
  1724                           ;Othello.c: 482: LCDState++;
  1725  0191  3001               	movlw	1
  1726  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0194  00BF               	movwf	??_main
  1729  0195  083F               	movf	??_main,w
  1730  0196  07DF               	addwf	_LCDState,f
  1731                           
  1732                           ;Othello.c: 483: break;
  1733  0197  29B0               	goto	l3133
  1734  0198                     l3129:	
  1735                           ;Othello.c: 484: default:
  1736                           
  1737                           
  1738                           ;Othello.c: 485: LCDState = 0;
  1739  0198  01DF               	clrf	_LCDState
  1740                           
  1741                           ;Othello.c: 486: }
  1742  0199  29B0               	goto	l3133
  1743  019A                     l3131:	
  1744  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1745  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1746  019C  085F               	movf	_LCDState,w
  1747                           
  1748                           ; Switch size 1, requested type "space"
  1749                           ; Number of cases is 6, Range of values is 0 to 5
  1750                           ; switch strategies available:
  1751                           ; Name         Instructions Cycles
  1752                           ; simple_byte           19    10 (average)
  1753                           ; direct_byte           26     8 (fixed)
  1754                           ; jumptable            260     6 (fixed)
  1755                           ;	Chosen strategy is simple_byte
  1756  019D  3A00               	xorlw	0	; case 0
  1757  019E  1903               	skipnz
  1758  019F  28EF               	goto	l3077
  1759  01A0  3A01               	xorlw	1	; case 1
  1760  01A1  1903               	skipnz
  1761  01A2  28FE               	goto	l3085
  1762  01A3  3A03               	xorlw	3	; case 2
  1763  01A4  1903               	skipnz
  1764  01A5  2962               	goto	l3113
  1765  01A6  3A01               	xorlw	1	; case 3
  1766  01A7  1903               	skipnz
  1767  01A8  2977               	goto	l3121
  1768  01A9  3A07               	xorlw	7	; case 4
  1769  01AA  1903               	skipnz
  1770  01AB  2913               	goto	l3093
  1771  01AC  3A01               	xorlw	1	; case 5
  1772  01AD  1903               	skipnz
  1773  01AE  2944               	goto	l3105
  1774  01AF  2998               	goto	l3129
  1775  01B0                     l3133:	
  1776                           
  1777                           ;Othello.c: 488: }
  1778                           ;Othello.c: 489: if(getKeypadPressed()) {
  1779  01B0  120A  158A  24B2  120A  118A  	fcall	_getKeypadPressed
  1780  01B5  3A00               	xorlw	0
  1781  01B6  1903               	skipnz
  1782  01B7  28DB               	goto	l3233
  1783                           
  1784                           ;Othello.c: 490: row = 0; col = 0;
  1785  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1786  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1787  01BA  01C4               	clrf	main@row
  1788  01BB  01C5               	clrf	main@col
  1789                           
  1790                           ;Othello.c: 491: row = getKeypadKey() - 0x30;
  1791  01BC  120A  158A  279B  120A  118A  	fcall	_getKeypadKey
  1792  01C1  3ED0               	addlw	208
  1793  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  1794  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  1795  01C4  00BF               	movwf	??_main
  1796  01C5  083F               	movf	??_main,w
  1797  01C6  00C4               	movwf	main@row
  1798  01C7                     l3139:	
  1799                           ;Othello.c: 492: while(getKeypadPressed());
  1800                           
  1801  01C7  120A  158A  24B2  120A  118A  	fcall	_getKeypadPressed
  1802  01CC  3A00               	xorlw	0
  1803  01CD  1D03               	skipz
  1804  01CE  29C7               	goto	l3139
  1805                           
  1806                           ;Othello.c: 493: if(!(row >= 1 && row <= 8)) {
  1807  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1808  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1809  01D1  0844               	movf	main@row,w
  1810  01D2  1903               	btfsc	3,2
  1811  01D3  29D8               	goto	l3145
  1812  01D4  3009               	movlw	9
  1813  01D5  0244               	subwf	main@row,w
  1814  01D6  1C03               	skipc
  1815  01D7  2A03               	goto	l3153
  1816  01D8                     l3145:	
  1817                           
  1818                           ;Othello.c: 494: lcd_clear();
  1819  01D8  120A  158A  23F4  120A  118A  	fcall	_lcd_clear
  1820                           
  1821                           ;Othello.c: 495: lcd_puts("Please select");
  1822  01DD  3090               	movlw	low (STR_18| (0+32768))
  1823  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  1824  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  1825  01E0  00A3               	movwf	lcd_puts@string
  1826  01E1  3084               	movlw	high (STR_18| (0+32768))
  1827  01E2  00A4               	movwf	lcd_puts@string+1
  1828  01E3  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1829                           
  1830                           ;Othello.c: 496: lcd_goto(0x40);
  1831  01E8  3040               	movlw	64
  1832  01E9  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1833                           
  1834                           ;Othello.c: 497: lcd_puts("keys 1-8");
  1835  01EE  3046               	movlw	low (STR_19| (0+32768))
  1836  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1837  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1838  01F1  00A3               	movwf	lcd_puts@string
  1839  01F2  3085               	movlw	high (STR_19| (0+32768))
  1840  01F3  00A4               	movwf	lcd_puts@string+1
  1841  01F4  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1842                           
  1843                           ;Othello.c: 498: DelayMs(2000);
  1844  01F9  30D0               	movlw	208
  1845  01FA  00F5               	movwf	DelayMs@millis
  1846  01FB  3007               	movlw	7
  1847  01FC  00F6               	movwf	DelayMs@millis+1
  1848  01FD  120A  158A  23E2  120A  118A  	fcall	_DelayMs
  1849                           
  1850                           ;Othello.c: 499: } else {
  1851  0202  28DB               	goto	l3233
  1852  0203                     l3153:	
  1853                           
  1854                           ;Othello.c: 500: lcd_clear();
  1855  0203  120A  158A  23F4  120A  118A  	fcall	_lcd_clear
  1856                           
  1857                           ;Othello.c: 501: lcd_puts("Row: ");
  1858  0208  3063               	movlw	low (STR_20| (0+32768))
  1859  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1860  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1861  020B  00A3               	movwf	lcd_puts@string
  1862  020C  3085               	movlw	high (STR_20| (0+32768))
  1863  020D  00A4               	movwf	lcd_puts@string+1
  1864  020E  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1865                           
  1866                           ;Othello.c: 502: lcd_putch(row + 0x30);
  1867  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0215  0844               	movf	main@row,w
  1870  0216  3E30               	addlw	48
  1871  0217  120A  158A  2398  120A  118A  	fcall	_lcd_putch
  1872                           
  1873                           ;Othello.c: 503: lcd_goto(0x40);
  1874  021C  3040               	movlw	64
  1875  021D  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1876                           
  1877                           ;Othello.c: 504: lcd_puts("Col: ");
  1878  0222  305D               	movlw	low (STR_21| (0+32768))
  1879  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0225  00A3               	movwf	lcd_puts@string
  1882  0226  3085               	movlw	high (STR_21| (0+32768))
  1883  0227  00A4               	movwf	lcd_puts@string+1
  1884  0228  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1885  022D                     l3163:	
  1886                           ;Othello.c: 505: while(!getKeypadPressed());
  1887                           
  1888  022D  120A  158A  24B2  120A  118A  	fcall	_getKeypadPressed
  1889  0232  3A00               	xorlw	0
  1890  0233  1903               	skipnz
  1891  0234  2A2D               	goto	l3163
  1892                           
  1893                           ;Othello.c: 506: DelayMs(10);
  1894  0235  300A               	movlw	10
  1895  0236  00F5               	movwf	DelayMs@millis
  1896  0237  3000               	movlw	0
  1897  0238  00F6               	movwf	DelayMs@millis+1
  1898  0239  120A  158A  23E2  120A  118A  	fcall	_DelayMs
  1899                           
  1900                           ;Othello.c: 507: col = getKeypadKey() - 0x30;
  1901  023E  120A  158A  279B  120A  118A  	fcall	_getKeypadKey
  1902  0243  3ED0               	addlw	208
  1903  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0246  00BF               	movwf	??_main
  1906  0247  083F               	movf	??_main,w
  1907  0248  00C5               	movwf	main@col
  1908  0249                     l3169:	
  1909                           ;Othello.c: 508: while(getKeypadPressed());
  1910                           
  1911  0249  120A  158A  24B2  120A  118A  	fcall	_getKeypadPressed
  1912  024E  3A00               	xorlw	0
  1913  024F  1D03               	skipz
  1914  0250  2A49               	goto	l3169
  1915                           
  1916                           ;Othello.c: 509: if(!(col >= 1 && col <= 8)) {
  1917  0251  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0252  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0253  0845               	movf	main@col,w
  1920  0254  1903               	btfsc	3,2
  1921  0255  2A5A               	goto	l3175
  1922  0256  3009               	movlw	9
  1923  0257  0245               	subwf	main@col,w
  1924  0258  1C03               	skipc
  1925  0259  2A85               	goto	l3183
  1926  025A                     l3175:	
  1927                           
  1928                           ;Othello.c: 510: lcd_clear();
  1929  025A  120A  158A  23F4  120A  118A  	fcall	_lcd_clear
  1930                           
  1931                           ;Othello.c: 511: lcd_puts("Please select");
  1932  025F  3090               	movlw	low (STR_18| (0+32768))
  1933  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1934  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1935  0262  00A3               	movwf	lcd_puts@string
  1936  0263  3084               	movlw	high (STR_18| (0+32768))
  1937  0264  00A4               	movwf	lcd_puts@string+1
  1938  0265  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1939                           
  1940                           ;Othello.c: 512: lcd_goto(0x40);
  1941  026A  3040               	movlw	64
  1942  026B  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  1943                           
  1944                           ;Othello.c: 513: lcd_puts("keys 1-8");
  1945  0270  3046               	movlw	low (STR_19| (0+32768))
  1946  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0273  00A3               	movwf	lcd_puts@string
  1949  0274  3085               	movlw	high (STR_19| (0+32768))
  1950  0275  00A4               	movwf	lcd_puts@string+1
  1951  0276  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  1952                           
  1953                           ;Othello.c: 514: DelayMs(2000);
  1954  027B  30D0               	movlw	208
  1955  027C  00F5               	movwf	DelayMs@millis
  1956  027D  3007               	movlw	7
  1957  027E  00F6               	movwf	DelayMs@millis+1
  1958  027F  120A  158A  23E2  120A  118A  	fcall	_DelayMs
  1959                           
  1960                           ;Othello.c: 515: } else {
  1961  0284  28DB               	goto	l3233
  1962  0285                     l3183:	
  1963                           
  1964                           ;Othello.c: 516: lcd_putch(col + 0x30);
  1965  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0287  0845               	movf	main@col,w
  1968  0288  3E30               	addlw	48
  1969  0289  120A  158A  2398  120A  118A  	fcall	_lcd_putch
  1970  028E                     l3185:	
  1971                           ;Othello.c: 517: while(getKeypadKey() != '*');
  1972                           
  1973  028E  120A  158A  279B  120A  118A  	fcall	_getKeypadKey
  1974  0293  3A2A               	xorlw	42
  1975  0294  1D03               	skipz
  1976  0295  2A8E               	goto	l3185
  1977  0296                     l3187:	
  1978                           ;Othello.c: 518: while(getKeypadPressed());
  1979                           
  1980  0296  120A  158A  24B2  120A  118A  	fcall	_getKeypadPressed
  1981  029B  3A00               	xorlw	0
  1982  029C  1D03               	skipz
  1983  029D  2A96               	goto	l3187
  1984                           
  1985                           ;Othello.c: 519: row--;
  1986  029E  3001               	movlw	1
  1987  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1988  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1989  02A1  02C4               	subwf	main@row,f
  1990                           
  1991                           ;Othello.c: 520: col--;
  1992  02A2  3001               	movlw	1
  1993  02A3  02C5               	subwf	main@col,f
  1994                           
  1995                           ;Othello.c: 521: sendMatrix(row,col);
  1996  02A4  0845               	movf	main@col,w
  1997  02A5  00BF               	movwf	??_main
  1998  02A6  083F               	movf	??_main,w
  1999  02A7  00A6               	movwf	sendMatrix@PointerC
  2000  02A8  0844               	movf	main@row,w
  2001  02A9  120A  118A  265A  120A  118A  	fcall	_sendMatrix
  2002                           
  2003                           ;Othello.c: 522: if(color == 0) {
  2004  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  2005  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  2006  02B0  0860               	movf	_color,w
  2007  02B1  1D03               	btfss	3,2
  2008  02B2  2AD6               	goto	l3207
  2009                           
  2010                           ;Othello.c: 523: if(legalPlay(row,col,RedPos,GreenPos)) {
  2011  02B3  0845               	movf	main@col,w
  2012  02B4  00BF               	movwf	??_main
  2013  02B5  083F               	movf	??_main,w
  2014  02B6  00A6               	movwf	legalPlay@col
  2015  02B7  3056               	movlw	(low (_RedPos| 0))& (0+255)
  2016  02B8  00C0               	movwf	??_main+1
  2017  02B9  0840               	movf	??_main+1,w
  2018  02BA  00A7               	movwf	legalPlay@ownColor
  2019  02BB  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  2020  02BC  00C1               	movwf	??_main+2
  2021  02BD  0841               	movf	??_main+2,w
  2022  02BE  00A8               	movwf	legalPlay@otherColor
  2023  02BF  0844               	movf	main@row,w
  2024  02C0  120A  118A  2701  120A  118A  	fcall	_legalPlay
  2025  02C5  3A00               	xorlw	0
  2026  02C6  1903               	skipnz
  2027  02C7  2B0F               	goto	l3215
  2028                           
  2029                           ;Othello.c: 524: color = 1;
  2030  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2031  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2032  02CA  01E0               	clrf	_color
  2033  02CB  0AE0               	incf	_color,f
  2034                           
  2035                           ;Othello.c: 525: playPeice(row,col,RedPos,GreenPos);
  2036  02CC  0845               	movf	main@col,w
  2037  02CD  00BF               	movwf	??_main
  2038  02CE  083F               	movf	??_main,w
  2039  02CF  00B1               	movwf	playPeice@col
  2040  02D0  3056               	movlw	(low (_RedPos| 0))& (0+255)
  2041  02D1  00C0               	movwf	??_main+1
  2042  02D2  0840               	movf	??_main+1,w
  2043  02D3  00B2               	movwf	playPeice@ownColor
  2044  02D4  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  2045  02D5  2AF9               	goto	L2
  2046  02D6                     l3207:	
  2047                           ;Othello.c: 530: }
  2048                           ;Othello.c: 531: } else {
  2049                           
  2050                           ;Othello.c: 529: lcd_puts("Invalid Play");
  2051                           
  2052                           ;Othello.c: 528: lcd_clear();
  2053                           
  2054                           ;Othello.c: 527: } else {
  2055                           
  2056                           ;Othello.c: 526: sendMatrix(-1,-1);
  2057                           
  2058                           
  2059                           ;Othello.c: 532: if(legalPlay(row,col,GreenPos,RedPos)) {
  2060  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2061  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2062  02D8  0845               	movf	main@col,w
  2063  02D9  00BF               	movwf	??_main
  2064  02DA  083F               	movf	??_main,w
  2065  02DB  00A6               	movwf	legalPlay@col
  2066  02DC  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  2067  02DD  00C0               	movwf	??_main+1
  2068  02DE  0840               	movf	??_main+1,w
  2069  02DF  00A7               	movwf	legalPlay@ownColor
  2070  02E0  3056               	movlw	(low (_RedPos| 0))& (0+255)
  2071  02E1  00C1               	movwf	??_main+2
  2072  02E2  0841               	movf	??_main+2,w
  2073  02E3  00A8               	movwf	legalPlay@otherColor
  2074  02E4  0844               	movf	main@row,w
  2075  02E5  120A  118A  2701  120A  118A  	fcall	_legalPlay
  2076  02EA  3A00               	xorlw	0
  2077  02EB  1903               	skipnz
  2078  02EC  2B0F               	goto	l3215
  2079                           
  2080                           ;Othello.c: 533: color = 0;
  2081  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2082  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2083  02EF  01E0               	clrf	_color
  2084                           
  2085                           ;Othello.c: 534: playPeice(row,col,GreenPos,RedPos);
  2086  02F0  0845               	movf	main@col,w
  2087  02F1  00BF               	movwf	??_main
  2088  02F2  083F               	movf	??_main,w
  2089  02F3  00B1               	movwf	playPeice@col
  2090  02F4  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  2091  02F5  00C0               	movwf	??_main+1
  2092  02F6  0840               	movf	??_main+1,w
  2093  02F7  00B2               	movwf	playPeice@ownColor
  2094  02F8  3056               	movlw	(low (_RedPos| 0))& (0+255)
  2095  02F9                     L2:	
  2096  02F9  00C1               	movwf	??_main+2
  2097  02FA  0841               	movf	??_main+2,w
  2098  02FB  00B3               	movwf	playPeice@otherColor
  2099  02FC  0844               	movf	main@row,w
  2100  02FD  120A  118A  256E  120A  118A  	fcall	_playPeice
  2101                           
  2102                           ;Othello.c: 535: sendMatrix(-1,-1);
  2103  0302  30FF               	movlw	255
  2104  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0305  00BF               	movwf	??_main
  2107  0306  083F               	movf	??_main,w
  2108  0307  00A6               	movwf	sendMatrix@PointerC
  2109  0308  30FF               	movlw	255
  2110  0309  120A  118A  265A  120A  118A  	fcall	_sendMatrix
  2111                           
  2112                           ;Othello.c: 536: } else {
  2113  030E  2B1F               	goto	l3219
  2114  030F                     l3215:	
  2115                           
  2116                           ;Othello.c: 537: lcd_clear();
  2117  030F  120A  158A  23F4  120A  118A  	fcall	_lcd_clear
  2118                           
  2119                           ;Othello.c: 538: lcd_puts("Invalid Play");
  2120  0314  30B9               	movlw	low (STR_24| (0+32768))
  2121  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0317  00A3               	movwf	lcd_puts@string
  2124  0318  3084               	movlw	high (STR_24| (0+32768))
  2125  0319  00A4               	movwf	lcd_puts@string+1
  2126  031A  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  2127  031F                     l3219:	
  2128                           
  2129                           ;Othello.c: 539: }
  2130                           ;Othello.c: 540: }
  2131                           ;Othello.c: 541: DelayMs(3000);
  2132  031F  30B8               	movlw	184
  2133  0320  00F5               	movwf	DelayMs@millis
  2134  0321  300B               	movlw	11
  2135  0322  00F6               	movwf	DelayMs@millis+1
  2136  0323  120A  158A  23E2  120A  118A  	fcall	_DelayMs
  2137  0328  28AD               	goto	L3
  2138  0329                     l3241:	
  2139                           ;Othello.c: 560: case 0:
  2140                           
  2141                           ;Othello.c: 559: switch(LCDState) {
  2142                           
  2143                           ;Othello.c: 547: sendMatrix(-1,-1);
  2144                           
  2145                           ;Othello.c: 546: OutChar(0x0D);
  2146                           
  2147                           ;Othello.c: 545: OutChar(0x0A);
  2148                           
  2149                           ;Othello.c: 544: OutCharMsg("! is pointer, . is empty, green is 'O', red is 'X'");
  2150                           
  2151                           ;Othello.c: 543: OutChar(0x0C);
  2152                           
  2153                           ;Othello.c: 542: drawMatrix();
  2154                           
  2155                           
  2156                           ;Othello.c: 561: lcd_puts("Game over");
  2157  0329  3029               	movlw	low (STR_27| (0+32768))
  2158  032A  1283               	bcf	3,5	;RP0=0, select bank0
  2159  032B  1303               	bcf	3,6	;RP1=0, select bank0
  2160  032C  00A3               	movwf	lcd_puts@string
  2161  032D  3085               	movlw	high (STR_27| (0+32768))
  2162  032E  2B99               	goto	L1
  2163  032F                     l3245:	
  2164                           ;Othello.c: 564: case 1:
  2165                           
  2166                           ;Othello.c: 563: break;
  2167                           
  2168                           ;Othello.c: 562: LCDState++;
  2169                           
  2170                           
  2171                           ;Othello.c: 565: lcd_puts("Red: ");
  2172  032F  3057               	movlw	low (STR_11| (0+32768))
  2173  0330  00A3               	movwf	lcd_puts@string
  2174  0331  3085               	movlw	high (STR_11| (0+32768))
  2175  0332  00A4               	movwf	lcd_puts@string+1
  2176  0333  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  2177                           
  2178                           ;Othello.c: 566: displayNuber(countColor(RedPos));
  2179  0338  3056               	movlw	(low (_RedPos| 0))& (0+255)
  2180  0339  120A  118A  23CE  120A  118A  	fcall	_countColor
  2181  033E  120A  158A  2501  120A  118A  	fcall	_displayNuber
  2182                           
  2183                           ;Othello.c: 567: lcd_goto(0x40);
  2184  0343  3040               	movlw	64
  2185  0344  120A  158A  242E  120A  118A  	fcall	_lcd_goto
  2186                           
  2187                           ;Othello.c: 568: lcd_puts("Green: ");
  2188  0349  304F               	movlw	low (STR_12| (0+32768))
  2189  034A  1283               	bcf	3,5	;RP0=0, select bank0
  2190  034B  1303               	bcf	3,6	;RP1=0, select bank0
  2191  034C  00A3               	movwf	lcd_puts@string
  2192  034D  3085               	movlw	high (STR_12| (0+32768))
  2193  034E  00A4               	movwf	lcd_puts@string+1
  2194  034F  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  2195                           
  2196                           ;Othello.c: 569: displayNuber(countColor(GreenPos));
  2197  0354  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  2198  0355  120A  118A  23CE  120A  118A  	fcall	_countColor
  2199  035A  120A  158A  2501  120A  118A  	fcall	_displayNuber
  2200  035F  2B9F               	goto	l3267
  2201  0360                     l3257:	
  2202                           ;Othello.c: 572: case 2:
  2203                           
  2204                           ;Othello.c: 571: break;
  2205                           
  2206                           ;Othello.c: 570: LCDState++;
  2207                           
  2208                           
  2209                           ;Othello.c: 573: if(countColor(RedPos) > countColor(GreenPos)) {
  2210  0360  3056               	movlw	(low (_RedPos| 0))& (0+255)
  2211  0361  120A  118A  23CE  120A  118A  	fcall	_countColor
  2212  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0368  00BF               	movwf	??_main
  2215  0369  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  2216  036A  120A  118A  23CE  120A  118A  	fcall	_countColor
  2217  036F  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0370  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0371  00C0               	movwf	??_main+1
  2220  0372  083F               	movf	??_main,w
  2221  0373  0240               	subwf	??_main+1,w
  2222  0374  1803               	skipnc
  2223  0375  2B7A               	goto	l3261
  2224                           
  2225                           ;Othello.c: 574: lcd_puts("Red Wins!");
  2226  0376  300B               	movlw	low (STR_30| (0+32768))
  2227  0377  00A3               	movwf	lcd_puts@string
  2228  0378  3085               	movlw	high (STR_30| (0+32768))
  2229  0379  2B99               	goto	L1
  2230  037A                     l3261:	
  2231                           ;Othello.c: 575: }
  2232                           
  2233                           
  2234                           ;Othello.c: 576: else if(countColor(RedPos) < countColor(GreenPos)) {
  2235  037A  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  2236  037B  120A  118A  23CE  120A  118A  	fcall	_countColor
  2237  0380  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0381  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0382  00BF               	movwf	??_main
  2240  0383  3056               	movlw	(low (_RedPos| 0))& (0+255)
  2241  0384  120A  118A  23CE  120A  118A  	fcall	_countColor
  2242  0389  1283               	bcf	3,5	;RP0=0, select bank0
  2243  038A  1303               	bcf	3,6	;RP1=0, select bank0
  2244  038B  00C0               	movwf	??_main+1
  2245  038C  083F               	movf	??_main,w
  2246  038D  0240               	subwf	??_main+1,w
  2247  038E  1803               	skipnc
  2248  038F  2B94               	goto	l3265
  2249                           
  2250                           ;Othello.c: 577: lcd_puts("Green Wins!");
  2251  0390  30D2               	movlw	low (STR_31| (0+32768))
  2252  0391  00A3               	movwf	lcd_puts@string
  2253  0392  3084               	movlw	high (STR_31| (0+32768))
  2254  0393  2B99               	goto	L1
  2255  0394                     l3265:	
  2256                           ;Othello.c: 578: } else {
  2257                           
  2258                           
  2259                           ;Othello.c: 579: lcd_puts("Tie!");
  2260  0394  3069               	movlw	low (STR_32| (0+32768))
  2261  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0397  00A3               	movwf	lcd_puts@string
  2264  0398  3085               	movlw	high (STR_32| (0+32768))
  2265  0399                     L1:	
  2266  0399  00A4               	movwf	lcd_puts@string+1
  2267  039A  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  2268  039F                     l3267:	
  2269                           
  2270                           ;Othello.c: 580: }
  2271                           ;Othello.c: 581: LCDState++;
  2272  039F  3001               	movlw	1
  2273  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2274  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2275  03A2  00BF               	movwf	??_main
  2276  03A3  083F               	movf	??_main,w
  2277  03A4  07DF               	addwf	_LCDState,f
  2278                           
  2279                           ;Othello.c: 582: break;
  2280  03A5  2BB2               	goto	l3235
  2281  03A6                     l3269:	
  2282                           ;Othello.c: 583: case 3:
  2283                           
  2284                           
  2285                           ;Othello.c: 584: lcd_puts("Reset to Restart");
  2286  03A6  3055               	movlw	low (STR_33| (0+32768))
  2287  03A7  00A3               	movwf	lcd_puts@string
  2288  03A8  3084               	movlw	high (STR_33| (0+32768))
  2289  03A9  00A4               	movwf	lcd_puts@string+1
  2290  03AA  120A  158A  24D8  120A  118A  	fcall	_lcd_puts
  2291                           
  2292                           ;Othello.c: 585: LCDState = 0;
  2293  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2294  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2295  03B1                     l3273:	
  2296                           ;Othello.c: 587: default:
  2297                           
  2298                           ;Othello.c: 586: break;
  2299                           
  2300                           
  2301                           ;Othello.c: 588: LCDState = 0;
  2302  03B1  01DF               	clrf	_LCDState
  2303  03B2                     l3235:	
  2304                           ;Othello.c: 549: }
  2305                           ;Othello.c: 550: }
  2306                           ;Othello.c: 552: }
  2307                           ;Othello.c: 554: }
  2308                           ;Othello.c: 555: while(1) {
  2309                           
  2310                           ;Othello.c: 589: }
  2311                           
  2312                           
  2313                           ;Othello.c: 556: if(LCDNextState == 1) {
  2314  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2315  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2316  03B4  035E               	decf	_LCDNextState,w
  2317  03B5  1D03               	btfss	3,2
  2318  03B6  2BB2               	goto	l3235
  2319                           
  2320                           ;Othello.c: 557: LCDNextState = 0;
  2321  03B7  01DE               	clrf	_LCDNextState
  2322                           
  2323                           ;Othello.c: 558: lcd_clear();
  2324  03B8  120A  158A  23F4  120A  118A  	fcall	_lcd_clear
  2325  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2326  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2327  03BF  085F               	movf	_LCDState,w
  2328                           
  2329                           ; Switch size 1, requested type "space"
  2330                           ; Number of cases is 4, Range of values is 0 to 3
  2331                           ; switch strategies available:
  2332                           ; Name         Instructions Cycles
  2333                           ; simple_byte           13     7 (average)
  2334                           ; direct_byte           20     8 (fixed)
  2335                           ; jumptable            260     6 (fixed)
  2336                           ;	Chosen strategy is simple_byte
  2337  03C0  3A00               	xorlw	0	; case 0
  2338  03C1  1903               	skipnz
  2339  03C2  2B29               	goto	l3241
  2340  03C3  3A01               	xorlw	1	; case 1
  2341  03C4  1903               	skipnz
  2342  03C5  2B2F               	goto	l3245
  2343  03C6  3A03               	xorlw	3	; case 2
  2344  03C7  1903               	skipnz
  2345  03C8  2B60               	goto	l3257
  2346  03C9  3A01               	xorlw	1	; case 3
  2347  03CA  1903               	skipnz
  2348  03CB  2BA6               	goto	l3269
  2349  03CC  2BB1               	goto	l3273
  2350  03CD  2BB2               	goto	l3235
  2351  03CE                     __end_of_main:	
  2352                           
  2353                           	psect	text1
  2354  0DDE                     __ptext1:	
  2355 ;; *************** function _setup *****************
  2356 ;; Defined at:
  2357 ;;		line 121 in file "Othello.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    6
  2378 ;; This function calls:
  2379 ;;		_I2C_Initialize
  2380 ;;		_lcd_init
  2381 ;;		_matrixSetup
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _setup
  2389  0DDE                     _setup:	
  2390                           
  2391                           ;Othello.c: 122: lcd_init();
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2395  0DDE  120A  158A  2741  120A  158A  	fcall	_lcd_init
  2396                           
  2397                           ;Othello.c: 123: I2C_Initialize();
  2398  0DE3  120A  158A  2406  120A  158A  	fcall	_I2C_Initialize
  2399                           
  2400                           ;Othello.c: 125: matrixSetup();
  2401  0DE8  120A  158A  2659  120A  158A  	fcall	_matrixSetup
  2402                           
  2403                           ;Othello.c: 127: ANSEL = 0;
  2404  0DED  1683               	bsf	3,5	;RP0=1, select bank3
  2405  0DEE  1703               	bsf	3,6	;RP1=1, select bank3
  2406  0DEF  0188               	clrf	8	;volatile
  2407                           
  2408                           ;Othello.c: 128: ANSELH = 0;
  2409  0DF0  0189               	clrf	9	;volatile
  2410                           
  2411                           ;Othello.c: 130: TRISB = 0x0F;
  2412  0DF1  300F               	movlw	15
  2413  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  2414  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  2415  0DF4  0086               	movwf	6	;volatile
  2416                           
  2417                           ;Othello.c: 132: nRBPU = 0;
  2418  0DF5  1381               	bcf	1,7	;volatile
  2419                           
  2420                           ;Othello.c: 136: TRISD = 0;
  2421  0DF6  0188               	clrf	8	;volatile
  2422                           
  2423                           ;Othello.c: 137: TRISC = 0;
  2424  0DF7  0187               	clrf	7	;volatile
  2425                           
  2426                           ;Othello.c: 140: TMR1ON = 1;
  2427  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0DFA  1410               	bsf	16,0	;volatile
  2430                           
  2431                           ;Othello.c: 141: TMR1GE = 0;
  2432  0DFB  1310               	bcf	16,6	;volatile
  2433                           
  2434                           ;Othello.c: 142: T1CKPS1 = 1; T1CKPS0 = 1;
  2435  0DFC  1690               	bsf	16,5	;volatile
  2436  0DFD  1610               	bsf	16,4	;volatile
  2437                           
  2438                           ;Othello.c: 143: TMR1CS = 0;
  2439  0DFE  1090               	bcf	16,1	;volatile
  2440                           
  2441                           ;Othello.c: 144: TMR1IE = 0;
  2442  0DFF  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0E00  1303               	bcf	3,6	;RP1=0, select bank1
  2444  0E01  100C               	bcf	12,0	;volatile
  2445                           
  2446                           ;Othello.c: 145: TMR1IF = 0;
  2447  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0E04  100C               	bcf	12,0	;volatile
  2450                           
  2451                           ;Othello.c: 156: SPEN = 1;
  2452  0E05  1798               	bsf	24,7	;volatile
  2453                           
  2454                           ;Othello.c: 157: SYNC = 0;
  2455  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0E07  1303               	bcf	3,6	;RP1=0, select bank1
  2457  0E08  1218               	bcf	24,4	;volatile
  2458                           
  2459                           ;Othello.c: 158: TXEN = 1;
  2460  0E09  1698               	bsf	24,5	;volatile
  2461                           
  2462                           ;Othello.c: 159: CREN = 1;
  2463  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0E0C  1618               	bsf	24,4	;volatile
  2466                           
  2467                           ;Othello.c: 160: BRG16 = 1;
  2468  0E0D  1683               	bsf	3,5	;RP0=1, select bank3
  2469  0E0E  1703               	bsf	3,6	;RP1=1, select bank3
  2470  0E0F  1587               	bsf	7,3	;volatile
  2471                           
  2472                           ;Othello.c: 161: BRGH = 1;
  2473  0E10  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0E11  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0E12  1518               	bsf	24,2	;volatile
  2476                           
  2477                           ;Othello.c: 162: SPBRG = 207;
  2478  0E13  30CF               	movlw	207
  2479  0E14  0099               	movwf	25	;volatile
  2480                           
  2481                           ;Othello.c: 164: GIE = 1;
  2482  0E15  178B               	bsf	11,7	;volatile
  2483                           
  2484                           ;Othello.c: 165: PEIE = 1;
  2485  0E16  170B               	bsf	11,6	;volatile
  2486  0E17  0008               	return
  2487  0E18                     __end_of_setup:	
  2488                           
  2489                           	psect	text2
  2490  0E59                     __ptext2:	
  2491 ;; *************** function _matrixSetup *****************
  2492 ;; Defined at:
  2493 ;;		line 92 in file "Othello.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, pclath, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    3
  2514 ;; This function calls:
  2515 ;;		_I2C_SendAddress
  2516 ;;		_I2C_SendByte
  2517 ;;		_I2C_Start
  2518 ;;		_I2C_Stop
  2519 ;; This function is called by:
  2520 ;;		_setup
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           
  2525                           ;psect for function _matrixSetup
  2526  0E59                     _matrixSetup:	
  2527                           
  2528                           ;Othello.c: 93: I2C_Start();
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _matrixSetup: [wreg+status,2+status,0+pclath+cstack]
  2532  0E59  120A  158A  23B2  120A  158A  	fcall	_I2C_Start
  2533                           
  2534                           ;Othello.c: 94: I2C_SendAddress((0x70), 0x00);
  2535  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0E60  01A0               	clrf	I2C_SendAddress@rw
  2538  0E61  3070               	movlw	112
  2539  0E62  120A  158A  23A4  120A  158A  	fcall	_I2C_SendAddress
  2540                           
  2541                           ;Othello.c: 95: I2C_SendByte(0x21);
  2542  0E67  3021               	movlw	33
  2543  0E68  120A  158A  2419  120A  158A  	fcall	_I2C_SendByte
  2544                           
  2545                           ;Othello.c: 96: I2C_Stop();
  2546  0E6D  120A  158A  23C0  120A  158A  	fcall	_I2C_Stop
  2547                           
  2548                           ;Othello.c: 97: I2C_Start();
  2549  0E72  120A  158A  23B2  120A  158A  	fcall	_I2C_Start
  2550                           
  2551                           ;Othello.c: 98: I2C_SendAddress((0x70), 0x00);
  2552  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2553  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2554  0E79  01A0               	clrf	I2C_SendAddress@rw
  2555  0E7A  3070               	movlw	112
  2556  0E7B  120A  158A  23A4  120A  158A  	fcall	_I2C_SendAddress
  2557                           
  2558                           ;Othello.c: 99: I2C_SendByte(0xE0 | 0xf);
  2559  0E80  30EF               	movlw	239
  2560  0E81  120A  158A  2419  120A  158A  	fcall	_I2C_SendByte
  2561                           
  2562                           ;Othello.c: 100: I2C_Stop();
  2563  0E86  120A  158A  23C0  120A  158A  	fcall	_I2C_Stop
  2564                           
  2565                           ;Othello.c: 101: I2C_Start();
  2566  0E8B  120A  158A  23B2  120A  158A  	fcall	_I2C_Start
  2567                           
  2568                           ;Othello.c: 102: I2C_SendAddress((0x70), 0x00);
  2569  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  2570  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  2571  0E92  01A0               	clrf	I2C_SendAddress@rw
  2572  0E93  3070               	movlw	112
  2573  0E94  120A  158A  23A4  120A  158A  	fcall	_I2C_SendAddress
  2574                           
  2575                           ;Othello.c: 103: I2C_SendByte(0x81);
  2576  0E99  3081               	movlw	129
  2577  0E9A  120A  158A  2419  120A  158A  	fcall	_I2C_SendByte
  2578                           
  2579                           ;Othello.c: 104: I2C_Stop();
  2580  0E9F  120A  158A  23C0   	fcall	_I2C_Stop
  2581  0EA2  0008               	return
  2582  0EA3                     __end_of_matrixSetup:	
  2583                           
  2584                           	psect	text3
  2585  0F41                     __ptext3:	
  2586 ;; *************** function _lcd_init *****************
  2587 ;; Defined at:
  2588 ;;		line 176 in file "lcd4bit/lcd4bits.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0
  2604 ;;      Temps:          0       1       0       0       0
  2605 ;;      Totals:         0       1       0       0       0
  2606 ;;Total ram usage:        1 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    5
  2609 ;; This function calls:
  2610 ;;		_DelayMs
  2611 ;;		_lcd_clear
  2612 ;;		_lcd_write
  2613 ;;		_tmr0_init
  2614 ;; This function is called by:
  2615 ;;		_setup
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           
  2620                           ;psect for function _lcd_init
  2621  0F41                     _lcd_init:	
  2622                           
  2623                           ;lcd4bits.c: 178: ANSEL = ANSEL & 0xE0;
  2624                           
  2625                           ;incstack = 0
  2626                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2627  0F41  1683               	bsf	3,5	;RP0=1, select bank3
  2628  0F42  1703               	bsf	3,6	;RP1=1, select bank3
  2629  0F43  0808               	movf	8,w	;volatile
  2630  0F44  39E0               	andlw	224
  2631  0F45  0088               	movwf	8	;volatile
  2632                           
  2633                           ;lcd4bits.c: 179: TRISA = 0x00;
  2634  0F46  1683               	bsf	3,5	;RP0=1, select bank1
  2635  0F47  1303               	bcf	3,6	;RP1=0, select bank1
  2636  0F48  0185               	clrf	5	;volatile
  2637                           
  2638                           ;lcd4bits.c: 180: PORTA = 0b00000000;
  2639  0F49  1283               	bcf	3,5	;RP0=0, select bank0
  2640  0F4A  1303               	bcf	3,6	;RP1=0, select bank0
  2641  0F4B  0185               	clrf	5	;volatile
  2642                           
  2643                           ;lcd4bits.c: 181: tmr0_init();
  2644  0F4C  120A  158A  237C  120A  158A  	fcall	_tmr0_init
  2645                           
  2646                           ;lcd4bits.c: 182: RA5 = 0;
  2647  0F51  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0F52  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0F53  1285               	bcf	5,5	;volatile
  2650                           
  2651                           ;lcd4bits.c: 183: RA4 = 0;
  2652  0F54  1205               	bcf	5,4	;volatile
  2653                           
  2654                           ;lcd4bits.c: 184: DelayMs(15);
  2655  0F55  300F               	movlw	15
  2656  0F56  00F5               	movwf	DelayMs@millis
  2657  0F57  3000               	movlw	0
  2658  0F58  00F6               	movwf	DelayMs@millis+1
  2659  0F59  120A  158A  23E2  120A  158A  	fcall	_DelayMs
  2660                           
  2661                           ;lcd4bits.c: 185: lcd_write(0, 0x28);
  2662  0F5E  3028               	movlw	40
  2663  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0F61  00A3               	movwf	??_lcd_init
  2666  0F62  0823               	movf	??_lcd_init,w
  2667  0F63  00A0               	movwf	lcd_write@CmdChar
  2668  0F64  3000               	movlw	0
  2669  0F65  120A  158A  256D  120A  158A  	fcall	_lcd_write
  2670                           
  2671                           ;lcd4bits.c: 186: DelayMs(15);
  2672  0F6A  300F               	movlw	15
  2673  0F6B  00F5               	movwf	DelayMs@millis
  2674  0F6C  3000               	movlw	0
  2675  0F6D  00F6               	movwf	DelayMs@millis+1
  2676  0F6E  120A  158A  23E2  120A  158A  	fcall	_DelayMs
  2677                           
  2678                           ;lcd4bits.c: 187: lcd_write(0, 0x28);
  2679  0F73  3028               	movlw	40
  2680  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0F76  00A3               	movwf	??_lcd_init
  2683  0F77  0823               	movf	??_lcd_init,w
  2684  0F78  00A0               	movwf	lcd_write@CmdChar
  2685  0F79  3000               	movlw	0
  2686  0F7A  120A  158A  256D  120A  158A  	fcall	_lcd_write
  2687                           
  2688                           ;lcd4bits.c: 188: lcd_write(0, 0x0C);
  2689  0F7F  300C               	movlw	12
  2690  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  2691  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0F82  00A3               	movwf	??_lcd_init
  2693  0F83  0823               	movf	??_lcd_init,w
  2694  0F84  00A0               	movwf	lcd_write@CmdChar
  2695  0F85  3000               	movlw	0
  2696  0F86  120A  158A  256D  120A  158A  	fcall	_lcd_write
  2697                           
  2698                           ;lcd4bits.c: 189: lcd_clear();
  2699  0F8B  120A  158A  23F4  120A  158A  	fcall	_lcd_clear
  2700                           
  2701                           ;lcd4bits.c: 190: lcd_write(0, 0x06);
  2702  0F90  3006               	movlw	6
  2703  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0F93  00A3               	movwf	??_lcd_init
  2706  0F94  0823               	movf	??_lcd_init,w
  2707  0F95  00A0               	movwf	lcd_write@CmdChar
  2708  0F96  3000               	movlw	0
  2709  0F97  120A  158A  256D   	fcall	_lcd_write
  2710  0F9A  0008               	return
  2711  0F9B                     __end_of_lcd_init:	
  2712                           
  2713                           	psect	text4
  2714  0B7C                     __ptext4:	
  2715 ;; *************** function _tmr0_init *****************
  2716 ;; Defined at:
  2717 ;;		line 73 in file "lcd4bit/lcd4bits.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;		None
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0
  2733 ;;      Temps:          1       0       0       0       0
  2734 ;;      Totals:         1       0       0       0       0
  2735 ;;Total ram usage:        1 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    1
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_lcd_init
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           
  2746                           ;psect for function _tmr0_init
  2747  0B7C                     _tmr0_init:	
  2748                           
  2749                           ;lcd4bits.c: 77: OPTION_REG &= 0xC0;
  2750                           
  2751                           ;incstack = 0
  2752                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  2753  0B7C  30C0               	movlw	192
  2754  0B7D  00F5               	movwf	??_tmr0_init
  2755  0B7E  0875               	movf	??_tmr0_init,w
  2756  0B7F  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0B80  1303               	bcf	3,6	;RP1=0, select bank1
  2758  0B81  0581               	andwf	1,f	;volatile
  2759                           
  2760                           ;lcd4bits.c: 79: OPTION_REG |= 0x02;
  2761  0B82  1481               	bsf	1,1	;volatile
  2762  0B83  0008               	return
  2763  0B84                     __end_of_tmr0_init:	
  2764                           
  2765                           	psect	text5
  2766  0BF4                     __ptext5:	
  2767 ;; *************** function _lcd_clear *****************
  2768 ;; Defined at:
  2769 ;;		line 145 in file "lcd4bit/lcd4bits.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0, pclath, cstack
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    4
  2790 ;; This function calls:
  2791 ;;		_DelayMs
  2792 ;;		_lcd_write
  2793 ;; This function is called by:
  2794 ;;		_lcd_init
  2795 ;;		_main
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _lcd_clear
  2801  0BF4                     _lcd_clear:	
  2802                           
  2803                           ;lcd4bits.c: 146: lcd_write(0, 0x01);
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2807  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0BF6  01A0               	clrf	lcd_write@CmdChar
  2810  0BF7  0AA0               	incf	lcd_write@CmdChar,f
  2811  0BF8  3000               	movlw	0
  2812  0BF9  120A  158A  256D  120A  158A  	fcall	_lcd_write
  2813                           
  2814                           ;lcd4bits.c: 147: DelayMs(2);
  2815  0BFE  3002               	movlw	2
  2816  0BFF  00F5               	movwf	DelayMs@millis
  2817  0C00  3000               	movlw	0
  2818  0C01  00F6               	movwf	DelayMs@millis+1
  2819  0C02  120A  158A  23E2   	fcall	_DelayMs
  2820  0C05  0008               	return
  2821  0C06                     __end_of_lcd_clear:	
  2822                           
  2823                           	psect	text6
  2824  0C06                     __ptext6:	
  2825 ;; *************** function _I2C_Initialize *****************
  2826 ;; Defined at:
  2827 ;;		line 73 in file "i2c/i2c.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;		None
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, status,2
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2841 ;;      Params:         0       0       0       0       0
  2842 ;;      Locals:         0       0       0       0       0
  2843 ;;      Temps:          0       0       0       0       0
  2844 ;;      Totals:         0       0       0       0       0
  2845 ;;Total ram usage:        0 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    1
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_setup
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           
  2856                           ;psect for function _I2C_Initialize
  2857  0C06                     _I2C_Initialize:	
  2858                           
  2859                           ;i2c.c: 75: TRISC3=1;
  2860                           
  2861                           ;incstack = 0
  2862                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2863  0C06  1683               	bsf	3,5	;RP0=1, select bank1
  2864  0C07  1303               	bcf	3,6	;RP1=0, select bank1
  2865  0C08  1587               	bsf	7,3	;volatile
  2866                           
  2867                           ;i2c.c: 76: TRISC4=1;
  2868  0C09  1607               	bsf	7,4	;volatile
  2869                           
  2870                           ;i2c.c: 79: SSPSTAT = 0x00;
  2871  0C0A  0194               	clrf	20	;volatile
  2872                           
  2873                           ;i2c.c: 81: SSPCON = 0x28;
  2874  0C0B  3028               	movlw	40
  2875  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0C0E  0094               	movwf	20	;volatile
  2878                           
  2879                           ;i2c.c: 83: SSPCON2 = 0x00;
  2880  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  2881  0C10  1303               	bcf	3,6	;RP1=0, select bank1
  2882  0C11  0191               	clrf	17	;volatile
  2883                           
  2884                           ;i2c.c: 85: SSPADD = 99;
  2885  0C12  3063               	movlw	99
  2886  0C13  0093               	movwf	19	;volatile
  2887                           
  2888                           ;i2c.c: 89: BCLIF=0;
  2889  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0C16  118D               	bcf	13,3	;volatile
  2892                           
  2893                           ;i2c.c: 91: SSPIF = 0;
  2894  0C17  118C               	bcf	12,3	;volatile
  2895  0C18  0008               	return
  2896  0C19                     __end_of_I2C_Initialize:	
  2897                           
  2898                           	psect	text7
  2899  065A                     __ptext7:	
  2900 ;; *************** function _sendMatrix *****************
  2901 ;; Defined at:
  2902 ;;		line 219 in file "Othello.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  PointerR        1    wreg     unsigned char 
  2905 ;;  PointerC        1    6[BANK0 ] unsigned char 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  PointerR        1    9[BANK0 ] unsigned char 
  2908 ;;  c               1   10[BANK0 ] unsigned char 
  2909 ;;  r               1   11[BANK0 ] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2919 ;;      Params:         0       1       0       0       0
  2920 ;;      Locals:         0       3       0       0       0
  2921 ;;      Temps:          0       2       0       0       0
  2922 ;;      Totals:         0       6       0       0       0
  2923 ;;Total ram usage:        6 bytes
  2924 ;; Hardware stack levels used:    1
  2925 ;; Hardware stack levels required when called:    3
  2926 ;; This function calls:
  2927 ;;		_OutChar
  2928 ;;		_OutCharMsg
  2929 ;;		_checkPositionFree
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _sendMatrix
  2937  065A                     _sendMatrix:	
  2938                           
  2939                           ;incstack = 0
  2940                           ; Regs used in _sendMatrix: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2941                           ;sendMatrix@PointerR stored from wreg
  2942  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2943  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2944  065C  00A9               	movwf	sendMatrix@PointerR
  2945                           
  2946                           ;Othello.c: 220: OutCharMsg(" 12345678");
  2947  065D  301F               	movlw	low (STR_1| (0+32768))
  2948  065E  00A0               	movwf	OutCharMsg@string
  2949  065F  3085               	movlw	high (STR_1| (0+32768))
  2950  0660  00A1               	movwf	OutCharMsg@string+1
  2951  0661  120A  158A  248D  120A  118A  	fcall	_OutCharMsg
  2952                           
  2953                           ;Othello.c: 221: OutChar(0x0A);
  2954  0666  300A               	movlw	10
  2955  0667  120A  158A  2374  120A  118A  	fcall	_OutChar
  2956                           
  2957                           ;Othello.c: 222: OutChar(0x0D);
  2958  066C  300D               	movlw	13
  2959  066D  120A  158A  2374  120A  118A  	fcall	_OutChar
  2960                           
  2961                           ;Othello.c: 223: for(char r = 0; r<8; r++) {
  2962  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0674  01AB               	clrf	sendMatrix@r
  2965  0675  3008               	movlw	8
  2966  0676  022B               	subwf	sendMatrix@r,w
  2967  0677  1803               	btfsc	3,0
  2968  0678  2EF6               	goto	l2901
  2969  0679                     l2863:	
  2970                           
  2971                           ;Othello.c: 224: OutChar(r + 0x31);
  2972  0679  082B               	movf	sendMatrix@r,w
  2973  067A  3E31               	addlw	49
  2974  067B  120A  158A  2374  120A  118A  	fcall	_OutChar
  2975                           
  2976                           ;Othello.c: 225: for(char c = 0; c<8; c++) {
  2977  0680  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0681  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0682  01AA               	clrf	sendMatrix@c
  2980  0683  3008               	movlw	8
  2981  0684  022A               	subwf	sendMatrix@c,w
  2982  0685  1803               	btfsc	3,0
  2983  0686  2EE0               	goto	l2895
  2984  0687                     l2871:	
  2985                           
  2986                           ;Othello.c: 226: if(r == PointerR && c == PointerC) {
  2987  0687  082B               	movf	sendMatrix@r,w
  2988  0688  0629               	xorwf	sendMatrix@PointerR,w
  2989  0689  1D03               	skipz
  2990  068A  2E91               	goto	l2877
  2991  068B  082A               	movf	sendMatrix@c,w
  2992  068C  0626               	xorwf	sendMatrix@PointerC,w
  2993  068D  1D03               	skipz
  2994  068E  2E91               	goto	l2877
  2995                           
  2996                           ;Othello.c: 227: OutChar('!');
  2997  068F  3021               	movlw	33
  2998  0690  2ED1               	goto	L5
  2999  0691                     l2877:	
  3000                           ;Othello.c: 228: continue;
  3001                           
  3002                           
  3003                           ;Othello.c: 229: }
  3004                           ;Othello.c: 230: if(checkPositionFree(r,c,AllPos) == 1) {
  3005  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0693  082A               	movf	sendMatrix@c,w
  3008  0694  00A7               	movwf	??_sendMatrix
  3009  0695  0827               	movf	??_sendMatrix,w
  3010  0696  00F5               	movwf	checkPositionFree@col
  3011  0697  3046               	movlw	(low (_AllPos| 0))& (0+255)
  3012  0698  00A8               	movwf	??_sendMatrix+1
  3013  0699  0828               	movf	??_sendMatrix+1,w
  3014  069A  00F6               	movwf	checkPositionFree@colorArray
  3015  069B  082B               	movf	sendMatrix@r,w
  3016  069C  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3017  06A1  3A01               	xorlw	1
  3018  06A2  1D03               	skipz
  3019  06A3  2EA6               	goto	l2881
  3020                           
  3021                           ;Othello.c: 231: OutChar('.');
  3022  06A4  302E               	movlw	46
  3023  06A5  2ED1               	goto	L5
  3024  06A6                     l2881:	
  3025                           ;Othello.c: 232: } else {
  3026                           
  3027                           
  3028                           ;Othello.c: 233: if(checkPositionFree(r,c,GreenPos) == 1) {
  3029  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  3030  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  3031  06A8  082A               	movf	sendMatrix@c,w
  3032  06A9  00A7               	movwf	??_sendMatrix
  3033  06AA  0827               	movf	??_sendMatrix,w
  3034  06AB  00F5               	movwf	checkPositionFree@col
  3035  06AC  304E               	movlw	(low (_GreenPos| 0))& (0+255)
  3036  06AD  00A8               	movwf	??_sendMatrix+1
  3037  06AE  0828               	movf	??_sendMatrix+1,w
  3038  06AF  00F6               	movwf	checkPositionFree@colorArray
  3039  06B0  082B               	movf	sendMatrix@r,w
  3040  06B1  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3041  06B6  3A01               	xorlw	1
  3042  06B7  1D03               	skipz
  3043  06B8  2ED0               	goto	l2889
  3044                           
  3045                           ;Othello.c: 234: if (checkPositionFree(r,c,RedPos)) {
  3046  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3047  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3048  06BB  082A               	movf	sendMatrix@c,w
  3049  06BC  00A7               	movwf	??_sendMatrix
  3050  06BD  0827               	movf	??_sendMatrix,w
  3051  06BE  00F5               	movwf	checkPositionFree@col
  3052  06BF  3056               	movlw	(low (_RedPos| 0))& (0+255)
  3053  06C0  00A8               	movwf	??_sendMatrix+1
  3054  06C1  0828               	movf	??_sendMatrix+1,w
  3055  06C2  00F6               	movwf	checkPositionFree@colorArray
  3056  06C3  082B               	movf	sendMatrix@r,w
  3057  06C4  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3058  06C9  3A00               	xorlw	0
  3059  06CA  1903               	skipnz
  3060  06CB  2ECE               	goto	l2887
  3061                           
  3062                           ;Othello.c: 235: OutChar('?');
  3063  06CC  303F               	movlw	63
  3064  06CD  2ED1               	goto	L5
  3065  06CE                     l2887:	
  3066                           ;Othello.c: 236: } else {
  3067                           
  3068                           
  3069                           ;Othello.c: 237: OutChar('X');
  3070  06CE  3058               	movlw	88
  3071  06CF  2ED1               	goto	L5
  3072  06D0                     l2889:	
  3073                           ;Othello.c: 238: }
  3074                           ;Othello.c: 239: } else {
  3075                           
  3076                           
  3077                           ;Othello.c: 240: OutChar('O');
  3078  06D0  304F               	movlw	79
  3079  06D1                     L5:	
  3080  06D1  120A  158A  2374  120A  118A  	fcall	_OutChar
  3081  06D6  3001               	movlw	1
  3082  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3083  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3084  06D9  00A7               	movwf	??_sendMatrix
  3085  06DA  0827               	movf	??_sendMatrix,w
  3086  06DB  07AA               	addwf	sendMatrix@c,f
  3087  06DC  3008               	movlw	8
  3088  06DD  022A               	subwf	sendMatrix@c,w
  3089  06DE  1C03               	skipc
  3090  06DF  2E87               	goto	l2871
  3091  06E0                     l2895:	
  3092                           
  3093                           ;Othello.c: 241: }
  3094                           ;Othello.c: 242: }
  3095                           ;Othello.c: 243: }
  3096                           ;Othello.c: 244: OutChar(0x0A);
  3097  06E0  300A               	movlw	10
  3098  06E1  120A  158A  2374  120A  118A  	fcall	_OutChar
  3099                           
  3100                           ;Othello.c: 245: OutChar(0x0D);
  3101  06E6  300D               	movlw	13
  3102  06E7  120A  158A  2374  120A  118A  	fcall	_OutChar
  3103  06EC  3001               	movlw	1
  3104  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3105  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  3106  06EF  00A7               	movwf	??_sendMatrix
  3107  06F0  0827               	movf	??_sendMatrix,w
  3108  06F1  07AB               	addwf	sendMatrix@r,f
  3109  06F2  3008               	movlw	8
  3110  06F3  022B               	subwf	sendMatrix@r,w
  3111  06F4  1C03               	skipc
  3112  06F5  2E79               	goto	l2863
  3113  06F6                     l2901:	
  3114                           
  3115                           ;Othello.c: 247: }
  3116                           ;Othello.c: 248: OutChar(0x0A);
  3117  06F6  300A               	movlw	10
  3118  06F7  120A  158A  2374  120A  118A  	fcall	_OutChar
  3119                           
  3120                           ;Othello.c: 249: OutChar(0x0D);
  3121  06FC  300D               	movlw	13
  3122  06FD  120A  158A  2374   	fcall	_OutChar
  3123  0700  0008               	return
  3124  0701                     __end_of_sendMatrix:	
  3125                           
  3126                           	psect	text8
  3127  0C8D                     __ptext8:	
  3128 ;; *************** function _OutCharMsg *****************
  3129 ;; Defined at:
  3130 ;;		line 182 in file "Othello.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;  string          2    0[BANK0 ] PTR const unsigned char 
  3133 ;;		 -> STR_26(51), STR_6(51), STR_1(10), 
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         0       2       0       0       0
  3146 ;;      Locals:         0       0       0       0       0
  3147 ;;      Temps:          0       0       0       0       0
  3148 ;;      Totals:         0       2       0       0       0
  3149 ;;Total ram usage:        2 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; Hardware stack levels required when called:    2
  3152 ;; This function calls:
  3153 ;;		_OutChar
  3154 ;; This function is called by:
  3155 ;;		_sendMatrix
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           
  3161                           ;psect for function _OutCharMsg
  3162  0C8D                     _OutCharMsg:	
  3163  0C8D                     l2685:	
  3164                           ;Othello.c: 183: while(*string != 0)
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in _OutCharMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3168                           
  3169  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0C8F  0821               	movf	OutCharMsg@string+1,w
  3172  0C90  00FF               	movwf	127
  3173  0C91  0820               	movf	OutCharMsg@string,w
  3174  0C92  0084               	movwf	4
  3175  0C93  120A  118A  2400  120A  158A  	fcall	stringtab
  3176  0C98  3A00               	xorlw	0
  3177  0C99  1903               	btfsc	3,2
  3178  0C9A  0008               	return
  3179                           
  3180                           ;Othello.c: 184: OutChar(*string++);
  3181  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0C9D  0821               	movf	OutCharMsg@string+1,w
  3184  0C9E  00FF               	movwf	127
  3185  0C9F  0820               	movf	OutCharMsg@string,w
  3186  0CA0  0084               	movwf	4
  3187  0CA1  120A  118A  2400  120A  158A  	fcall	stringtab
  3188  0CA6  120A  158A  2374  120A  158A  	fcall	_OutChar
  3189  0CAB  3001               	movlw	1
  3190  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  3191  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  3192  0CAE  07A0               	addwf	OutCharMsg@string,f
  3193  0CAF  1803               	skipnc
  3194  0CB0  0AA1               	incf	OutCharMsg@string+1,f
  3195  0CB1  2C8D               	goto	l2685
  3196  0CB2                     __end_of_OutCharMsg:	
  3197                           
  3198                           	psect	text9
  3199  0B74                     __ptext9:	
  3200 ;; *************** function _OutChar *****************
  3201 ;; Defined at:
  3202 ;;		line 172 in file "Othello.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  outchr          1    wreg     unsigned char 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  outchr          1    5[COMMON] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         0       0       0       0       0
  3217 ;;      Locals:         1       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0
  3219 ;;      Totals:         1       0       0       0       0
  3220 ;;Total ram usage:        1 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_OutCharMsg
  3227 ;;		_sendMatrix
  3228 ;;		_main
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           
  3233                           ;psect for function _OutChar
  3234  0B74                     _OutChar:	
  3235                           
  3236                           ;incstack = 0
  3237                           ; Regs used in _OutChar: [wreg]
  3238                           ;OutChar@outchr stored from wreg
  3239  0B74  00F5               	movwf	OutChar@outchr
  3240  0B75                     l178:	
  3241                           ;Othello.c: 173: while (TXIF == 0);
  3242                           
  3243  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0B77  1E0C               	btfss	12,4	;volatile
  3246  0B78  2B75               	goto	l178
  3247                           
  3248                           ;Othello.c: 174: TXREG = outchr;
  3249  0B79  0875               	movf	OutChar@outchr,w
  3250  0B7A  0099               	movwf	25	;volatile
  3251  0B7B  0008               	return
  3252  0B7C                     __end_of_OutChar:	
  3253                           
  3254                           	psect	text10
  3255  056E                     __ptext10:	
  3256 ;; *************** function _playPeice *****************
  3257 ;; Defined at:
  3258 ;;		line 349 in file "Othello.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  row             1    wreg     unsigned char 
  3261 ;;  col             1   17[BANK0 ] unsigned char 
  3262 ;;  ownColor        1   18[BANK0 ] PTR unsigned char 
  3263 ;;		 -> RedPos(8), GreenPos(8), 
  3264 ;;  otherColor      1   19[BANK0 ] PTR unsigned char 
  3265 ;;		 -> RedPos(8), GreenPos(8), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  row             1   28[BANK0 ] unsigned char 
  3268 ;;  c               1   30[BANK0 ] char 
  3269 ;;  r               1   29[BANK0 ] char 
  3270 ;;  nextC           1   27[BANK0 ] unsigned char 
  3271 ;;  nextR           1   26[BANK0 ] unsigned char 
  3272 ;;  line            1   25[BANK0 ] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       3       0       0       0
  3283 ;;      Locals:         0       6       0       0       0
  3284 ;;      Temps:          0       5       0       0       0
  3285 ;;      Totals:         0      14       0       0       0
  3286 ;;Total ram usage:       14 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    3
  3289 ;; This function calls:
  3290 ;;		_checkPositionFree
  3291 ;;		_drawFrom
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           
  3298                           ;psect for function _playPeice
  3299  056E                     _playPeice:	
  3300                           
  3301                           ;incstack = 0
  3302                           ; Regs used in _playPeice: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3303                           ;playPeice@row stored from wreg
  3304  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3305  056F  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0570  00BC               	movwf	playPeice@row
  3307                           
  3308                           ;Othello.c: 350: signed char r;
  3309                           ;Othello.c: 351: signed char c;
  3310                           ;Othello.c: 352: unsigned char nextR;
  3311                           ;Othello.c: 353: unsigned char nextC;
  3312                           ;Othello.c: 354: unsigned char line;
  3313                           ;Othello.c: 356: if (row < 8 && col < 8 && checkPositionFree(row, col, AllPos)) {
  3314  0571  3008               	movlw	8
  3315  0572  023C               	subwf	playPeice@row,w
  3316  0573  1803               	skipnc
  3317  0574  0008               	return
  3318  0575  3008               	movlw	8
  3319  0576  0231               	subwf	playPeice@col,w
  3320  0577  1803               	skipnc
  3321  0578  0008               	return
  3322  0579  0831               	movf	playPeice@col,w
  3323  057A  00B4               	movwf	??_playPeice
  3324  057B  0834               	movf	??_playPeice,w
  3325  057C  00F5               	movwf	checkPositionFree@col
  3326  057D  3046               	movlw	(low (_AllPos| 0))& (0+255)
  3327  057E  00B5               	movwf	??_playPeice+1
  3328  057F  0835               	movf	??_playPeice+1,w
  3329  0580  00F6               	movwf	checkPositionFree@colorArray
  3330  0581  083C               	movf	playPeice@row,w
  3331  0582  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3332  0587  3A00               	xorlw	0
  3333  0588  1903               	skipnz
  3334  0589  0008               	return
  3335                           
  3336                           ;Othello.c: 357: ownColor[row] |= 0x80 >> col;
  3337  058A  1283               	bcf	3,5	;RP0=0, select bank0
  3338  058B  1303               	bcf	3,6	;RP1=0, select bank0
  3339  058C  0A31               	incf	playPeice@col,w
  3340  058D  00B4               	movwf	??_playPeice
  3341  058E  3080               	movlw	128
  3342  058F  00B5               	movwf	??_playPeice+1
  3343  0590  3000               	movlw	0
  3344  0591  00B6               	movwf	??_playPeice+2
  3345  0592  2D96               	goto	u3294
  3346  0593                     u3295:	
  3347  0593  0D36               	rlf	??_playPeice+2,w
  3348  0594  0CB6               	rrf	??_playPeice+2,f
  3349  0595  0CB5               	rrf	??_playPeice+1,f
  3350  0596                     u3294:	
  3351  0596  0BB4               	decfsz	??_playPeice,f
  3352  0597  2D93               	goto	u3295
  3353  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0599  1303               	bcf	3,6	;RP1=0, select bank0
  3355  059A  0835               	movf	??_playPeice+1,w
  3356  059B  00B7               	movwf	??_playPeice+3
  3357  059C  083C               	movf	playPeice@row,w
  3358  059D  0732               	addwf	playPeice@ownColor,w
  3359  059E  00B8               	movwf	??_playPeice+4
  3360  059F  0838               	movf	??_playPeice+4,w
  3361  05A0  0084               	movwf	4
  3362  05A1  0837               	movf	??_playPeice+3,w
  3363  05A2  1383               	bcf	3,7	;select IRP bank0
  3364  05A3  0480               	iorwf	0,f
  3365                           
  3366                           ;Othello.c: 359: for(r = -1; r<2; r++) {
  3367  05A4  01BD               	clrf	playPeice@r
  3368  05A5  03BD               	decf	playPeice@r,f
  3369  05A6  083D               	movf	playPeice@r,w
  3370  05A7  3A80               	xorlw	128
  3371  05A8  3E7E               	addlw	-130
  3372  05A9  1803               	btfsc	3,0
  3373  05AA  2E43               	goto	l3025
  3374  05AB                     l269:	
  3375                           
  3376                           ;Othello.c: 360: for(c = -1; c<2; c++) {
  3377  05AB  01BE               	clrf	playPeice@c
  3378  05AC  03BE               	decf	playPeice@c,f
  3379  05AD  083E               	movf	playPeice@c,w
  3380  05AE  3A80               	xorlw	128
  3381  05AF  3E7E               	addlw	-130
  3382  05B0  1803               	btfsc	3,0
  3383  05B1  2E3A               	goto	l3021
  3384  05B2                     l2995:	
  3385                           
  3386                           ;Othello.c: 361: nextR = row + r;
  3387  05B2  083C               	movf	playPeice@row,w
  3388  05B3  073D               	addwf	playPeice@r,w
  3389  05B4  00B4               	movwf	??_playPeice
  3390  05B5  0834               	movf	??_playPeice,w
  3391  05B6  00BA               	movwf	playPeice@nextR
  3392                           
  3393                           ;Othello.c: 362: nextC = col + c;
  3394  05B7  0831               	movf	playPeice@col,w
  3395  05B8  073E               	addwf	playPeice@c,w
  3396  05B9  00B4               	movwf	??_playPeice
  3397  05BA  0834               	movf	??_playPeice,w
  3398  05BB  00BB               	movwf	playPeice@nextC
  3399                           
  3400                           ;Othello.c: 364: line = 0;
  3401  05BC  01B9               	clrf	playPeice@line
  3402  05BD                     l3015:	
  3403                           ;Othello.c: 365: while(checkPositionFree(nextR,nextC,AllPos) == 0) {
  3404                           
  3405  05BD  083B               	movf	playPeice@nextC,w
  3406  05BE  00B4               	movwf	??_playPeice
  3407  05BF  0834               	movf	??_playPeice,w
  3408  05C0  00F5               	movwf	checkPositionFree@col
  3409  05C1  3046               	movlw	(low (_AllPos| 0))& (0+255)
  3410  05C2  00B5               	movwf	??_playPeice+1
  3411  05C3  0835               	movf	??_playPeice+1,w
  3412  05C4  00F6               	movwf	checkPositionFree@colorArray
  3413  05C5  083A               	movf	playPeice@nextR,w
  3414  05C6  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3415  05CB  3A00               	xorlw	0
  3416  05CC  1D03               	btfss	3,2
  3417  05CD  2E2F               	goto	l3017
  3418                           
  3419                           ;Othello.c: 367: if(!(nextR > 7 && nextC > 7)) {
  3420  05CE  3008               	movlw	8
  3421  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3422  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  3423  05D1  023A               	subwf	playPeice@nextR,w
  3424  05D2  1C03               	skipc
  3425  05D3  2DD8               	goto	l3003
  3426  05D4  3008               	movlw	8
  3427  05D5  023B               	subwf	playPeice@nextC,w
  3428  05D6  1803               	skipnc
  3429  05D7  2E22               	goto	l3013
  3430  05D8                     l3003:	
  3431                           
  3432                           ;Othello.c: 368: if((checkPositionFree(nextR, nextC, otherColor) == 0) && (checkPosition
      +                          Free(nextR,nextC,ownColor) == 1)) {
  3433  05D8  083B               	movf	playPeice@nextC,w
  3434  05D9  00B4               	movwf	??_playPeice
  3435  05DA  0834               	movf	??_playPeice,w
  3436  05DB  00F5               	movwf	checkPositionFree@col
  3437  05DC  0833               	movf	playPeice@otherColor,w
  3438  05DD  00B5               	movwf	??_playPeice+1
  3439  05DE  0835               	movf	??_playPeice+1,w
  3440  05DF  00F6               	movwf	checkPositionFree@colorArray
  3441  05E0  083A               	movf	playPeice@nextR,w
  3442  05E1  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3443  05E6  3A00               	xorlw	0
  3444  05E7  1D03               	skipz
  3445  05E8  2E01               	goto	l3009
  3446  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  3447  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  3448  05EB  083B               	movf	playPeice@nextC,w
  3449  05EC  00B4               	movwf	??_playPeice
  3450  05ED  0834               	movf	??_playPeice,w
  3451  05EE  00F5               	movwf	checkPositionFree@col
  3452  05EF  0832               	movf	playPeice@ownColor,w
  3453  05F0  00B5               	movwf	??_playPeice+1
  3454  05F1  0835               	movf	??_playPeice+1,w
  3455  05F2  00F6               	movwf	checkPositionFree@colorArray
  3456  05F3  083A               	movf	playPeice@nextR,w
  3457  05F4  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3458  05F9  3A01               	xorlw	1
  3459  05FA  1D03               	skipz
  3460  05FB  2E01               	goto	l3009
  3461                           
  3462                           ;Othello.c: 369: line = 1;
  3463  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  3464  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  3465  05FE  01B9               	clrf	playPeice@line
  3466  05FF  0AB9               	incf	playPeice@line,f
  3467                           
  3468                           ;Othello.c: 370: } else {
  3469  0600  2E22               	goto	l3013
  3470  0601                     l3009:	
  3471                           
  3472                           ;Othello.c: 371: if(line == 1) {
  3473  0601  1283               	bcf	3,5	;RP0=0, select bank0
  3474  0602  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0603  0339               	decf	playPeice@line,w
  3476  0604  1D03               	btfss	3,2
  3477  0605  2E2F               	goto	l3017
  3478                           
  3479                           ;Othello.c: 372: drawFrom(row + r,col + c,r,c,ownColor,otherColor);
  3480  0606  0831               	movf	playPeice@col,w
  3481  0607  073E               	addwf	playPeice@c,w
  3482  0608  00B4               	movwf	??_playPeice
  3483  0609  0834               	movf	??_playPeice,w
  3484  060A  00A6               	movwf	drawFrom@col
  3485  060B  083D               	movf	playPeice@r,w
  3486  060C  00B5               	movwf	??_playPeice+1
  3487  060D  0835               	movf	??_playPeice+1,w
  3488  060E  00A7               	movwf	drawFrom@r
  3489  060F  083E               	movf	playPeice@c,w
  3490  0610  00B6               	movwf	??_playPeice+2
  3491  0611  0836               	movf	??_playPeice+2,w
  3492  0612  00A8               	movwf	drawFrom@c
  3493  0613  0832               	movf	playPeice@ownColor,w
  3494  0614  00B7               	movwf	??_playPeice+3
  3495  0615  0837               	movf	??_playPeice+3,w
  3496  0616  00A9               	movwf	drawFrom@ownColor
  3497  0617  0833               	movf	playPeice@otherColor,w
  3498  0618  00B8               	movwf	??_playPeice+4
  3499  0619  0838               	movf	??_playPeice+4,w
  3500  061A  00AA               	movwf	drawFrom@otherColor
  3501  061B  083C               	movf	playPeice@row,w
  3502  061C  073D               	addwf	playPeice@r,w
  3503  061D  120A  158A  26F0  120A  118A  	fcall	_drawFrom
  3504  0622                     l3013:	
  3505                           ;Othello.c: 374: break;
  3506                           
  3507                           ;Othello.c: 373: } else {
  3508                           
  3509                           
  3510                           ;Othello.c: 375: }
  3511                           ;Othello.c: 376: }
  3512                           ;Othello.c: 377: }
  3513                           ;Othello.c: 378: nextR = nextR + r;
  3514  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0624  083A               	movf	playPeice@nextR,w
  3517  0625  073D               	addwf	playPeice@r,w
  3518  0626  00B4               	movwf	??_playPeice
  3519  0627  0834               	movf	??_playPeice,w
  3520  0628  00BA               	movwf	playPeice@nextR
  3521                           
  3522                           ;Othello.c: 379: nextC = nextC + c;
  3523  0629  083B               	movf	playPeice@nextC,w
  3524  062A  073E               	addwf	playPeice@c,w
  3525  062B  00B4               	movwf	??_playPeice
  3526  062C  0834               	movf	??_playPeice,w
  3527  062D  00BB               	movwf	playPeice@nextC
  3528  062E  2DBD               	goto	l3015
  3529  062F                     l3017:	
  3530  062F  3001               	movlw	1
  3531  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0632  00B4               	movwf	??_playPeice
  3534  0633  0834               	movf	??_playPeice,w
  3535  0634  07BE               	addwf	playPeice@c,f
  3536  0635  083E               	movf	playPeice@c,w
  3537  0636  3A80               	xorlw	128
  3538  0637  3E7E               	addlw	-130
  3539  0638  1C03               	skipc
  3540  0639  2DB2               	goto	l2995
  3541  063A                     l3021:	
  3542  063A  3001               	movlw	1
  3543  063B  00B4               	movwf	??_playPeice
  3544  063C  0834               	movf	??_playPeice,w
  3545  063D  07BD               	addwf	playPeice@r,f
  3546  063E  083D               	movf	playPeice@r,w
  3547  063F  3A80               	xorlw	128
  3548  0640  3E7E               	addlw	-130
  3549  0641  1C03               	skipc
  3550  0642  2DAB               	goto	l269
  3551  0643                     l3025:	
  3552                           
  3553                           ;Othello.c: 381: }
  3554                           ;Othello.c: 382: }
  3555                           ;Othello.c: 383: }
  3556                           ;Othello.c: 384: AllPos[row] |= 0x80 >> col;
  3557  0643  0A31               	incf	playPeice@col,w
  3558  0644  00B4               	movwf	??_playPeice
  3559  0645  3080               	movlw	128
  3560  0646  00B5               	movwf	??_playPeice+1
  3561  0647  3000               	movlw	0
  3562  0648  00B6               	movwf	??_playPeice+2
  3563  0649  2E4D               	goto	u3404
  3564  064A                     u3405:	
  3565  064A  0D36               	rlf	??_playPeice+2,w
  3566  064B  0CB6               	rrf	??_playPeice+2,f
  3567  064C  0CB5               	rrf	??_playPeice+1,f
  3568  064D                     u3404:	
  3569  064D  0BB4               	decfsz	??_playPeice,f
  3570  064E  2E4A               	goto	u3405
  3571  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3572  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3573  0651  0835               	movf	??_playPeice+1,w
  3574  0652  00B7               	movwf	??_playPeice+3
  3575  0653  083C               	movf	playPeice@row,w
  3576  0654  3E46               	addlw	(low (_AllPos| 0))& (0+255)
  3577  0655  0084               	movwf	4
  3578  0656  0837               	movf	??_playPeice+3,w
  3579  0657  1383               	bcf	3,7	;select IRP bank0
  3580  0658  0480               	iorwf	0,f
  3581  0659  0008               	return
  3582  065A                     __end_of_playPeice:	
  3583                           
  3584                           	psect	text11
  3585  0EF0                     __ptext11:	
  3586 ;; *************** function _drawFrom *****************
  3587 ;; Defined at:
  3588 ;;		line 339 in file "Othello.c"
  3589 ;; Parameters:    Size  Location     Type
  3590 ;;  row             1    wreg     unsigned char 
  3591 ;;  col             1    6[BANK0 ] unsigned char 
  3592 ;;  r               1    7[BANK0 ] unsigned char 
  3593 ;;  c               1    8[BANK0 ] unsigned char 
  3594 ;;  ownColor        1    9[BANK0 ] PTR unsigned char 
  3595 ;;		 -> RedPos(8), GreenPos(8), 
  3596 ;;  otherColor      1   10[BANK0 ] PTR unsigned char 
  3597 ;;		 -> RedPos(8), GreenPos(8), 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  row             1   16[BANK0 ] unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3609 ;;      Params:         0       5       0       0       0
  3610 ;;      Locals:         0       1       0       0       0
  3611 ;;      Temps:          0       5       0       0       0
  3612 ;;      Totals:         0      11       0       0       0
  3613 ;;Total ram usage:       11 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    2
  3616 ;; This function calls:
  3617 ;;		_checkPositionFree
  3618 ;; This function is called by:
  3619 ;;		_playPeice
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function _drawFrom
  3625  0EF0                     _drawFrom:	
  3626                           
  3627                           ;incstack = 0
  3628                           ; Regs used in _drawFrom: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3629                           ;drawFrom@row stored from wreg
  3630  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0EF2  00B0               	movwf	drawFrom@row
  3633  0EF3                     l263:	
  3634                           ;Othello.c: 340: do {
  3635                           
  3636                           
  3637                           ;Othello.c: 341: ownColor[row] |= 0x80 >> col;
  3638  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  3639  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  3640  0EF5  0A26               	incf	drawFrom@col,w
  3641  0EF6  00AB               	movwf	??_drawFrom
  3642  0EF7  3080               	movlw	128
  3643  0EF8  00AC               	movwf	??_drawFrom+1
  3644  0EF9  3000               	movlw	0
  3645  0EFA  00AD               	movwf	??_drawFrom+2
  3646  0EFB  2EFF               	goto	u2774
  3647  0EFC                     u2775:	
  3648  0EFC  0D2D               	rlf	??_drawFrom+2,w
  3649  0EFD  0CAD               	rrf	??_drawFrom+2,f
  3650  0EFE  0CAC               	rrf	??_drawFrom+1,f
  3651  0EFF                     u2774:	
  3652  0EFF  0BAB               	decfsz	??_drawFrom,f
  3653  0F00  2EFC               	goto	u2775
  3654  0F01  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0F02  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0F03  082C               	movf	??_drawFrom+1,w
  3657  0F04  00AE               	movwf	??_drawFrom+3
  3658  0F05  0830               	movf	drawFrom@row,w
  3659  0F06  0729               	addwf	drawFrom@ownColor,w
  3660  0F07  00AF               	movwf	??_drawFrom+4
  3661  0F08  082F               	movf	??_drawFrom+4,w
  3662  0F09  0084               	movwf	4
  3663  0F0A  082E               	movf	??_drawFrom+3,w
  3664  0F0B  1383               	bcf	3,7	;select IRP bank0
  3665  0F0C  0480               	iorwf	0,f
  3666                           
  3667                           ;Othello.c: 342: otherColor[row] ^= 0x80 >> col;
  3668  0F0D  0A26               	incf	drawFrom@col,w
  3669  0F0E  00AB               	movwf	??_drawFrom
  3670  0F0F  3080               	movlw	128
  3671  0F10  00AC               	movwf	??_drawFrom+1
  3672  0F11  3000               	movlw	0
  3673  0F12  00AD               	movwf	??_drawFrom+2
  3674  0F13  2F17               	goto	u2784
  3675  0F14                     u2785:	
  3676  0F14  0D2D               	rlf	??_drawFrom+2,w
  3677  0F15  0CAD               	rrf	??_drawFrom+2,f
  3678  0F16  0CAC               	rrf	??_drawFrom+1,f
  3679  0F17                     u2784:	
  3680  0F17  0BAB               	decfsz	??_drawFrom,f
  3681  0F18  2F14               	goto	u2785
  3682  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3683  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3684  0F1B  082C               	movf	??_drawFrom+1,w
  3685  0F1C  00AE               	movwf	??_drawFrom+3
  3686  0F1D  0830               	movf	drawFrom@row,w
  3687  0F1E  072A               	addwf	drawFrom@otherColor,w
  3688  0F1F  00AF               	movwf	??_drawFrom+4
  3689  0F20  082F               	movf	??_drawFrom+4,w
  3690  0F21  0084               	movwf	4
  3691  0F22  082E               	movf	??_drawFrom+3,w
  3692  0F23  1383               	bcf	3,7	;select IRP bank0
  3693  0F24  0680               	xorwf	0,f
  3694                           
  3695                           ;Othello.c: 343: row += r;
  3696  0F25  0827               	movf	drawFrom@r,w
  3697  0F26  00AB               	movwf	??_drawFrom
  3698  0F27  082B               	movf	??_drawFrom,w
  3699  0F28  07B0               	addwf	drawFrom@row,f
  3700                           
  3701                           ;Othello.c: 344: col += c;
  3702  0F29  0828               	movf	drawFrom@c,w
  3703  0F2A  00AB               	movwf	??_drawFrom
  3704  0F2B  082B               	movf	??_drawFrom,w
  3705  0F2C  07A6               	addwf	drawFrom@col,f
  3706                           
  3707                           ;Othello.c: 346: } while(checkPositionFree(row, col, ownColor));
  3708  0F2D  0826               	movf	drawFrom@col,w
  3709  0F2E  00AB               	movwf	??_drawFrom
  3710  0F2F  082B               	movf	??_drawFrom,w
  3711  0F30  00F5               	movwf	checkPositionFree@col
  3712  0F31  0829               	movf	drawFrom@ownColor,w
  3713  0F32  00AC               	movwf	??_drawFrom+1
  3714  0F33  082C               	movf	??_drawFrom+1,w
  3715  0F34  00F6               	movwf	checkPositionFree@colorArray
  3716  0F35  0830               	movf	drawFrom@row,w
  3717  0F36  120A  158A  25A5  120A  158A  	fcall	_checkPositionFree
  3718  0F3B  3A00               	xorlw	0
  3719  0F3C  1903               	btfsc	3,2
  3720  0F3D  0008               	return
  3721  0F3E  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0F3F  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0F40  2EF3               	goto	l263
  3724  0F41                     __end_of_drawFrom:	
  3725                           
  3726                           	psect	text12
  3727  0701                     __ptext12:	
  3728 ;; *************** function _legalPlay *****************
  3729 ;; Defined at:
  3730 ;;		line 301 in file "Othello.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  row             1    wreg     unsigned char 
  3733 ;;  col             1    6[BANK0 ] unsigned char 
  3734 ;;  ownColor        1    7[BANK0 ] PTR unsigned char 
  3735 ;;		 -> RedPos(8), GreenPos(8), 
  3736 ;;  otherColor      1    8[BANK0 ] PTR unsigned char 
  3737 ;;		 -> RedPos(8), GreenPos(8), 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  row             1   12[BANK0 ] unsigned char 
  3740 ;;  nextC           1   16[BANK0 ] unsigned char 
  3741 ;;  nextR           1   15[BANK0 ] unsigned char 
  3742 ;;  c               1   14[BANK0 ] char 
  3743 ;;  r               1   13[BANK0 ] char 
  3744 ;;  line            1   11[BANK0 ] unsigned char 
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      unsigned char 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3754 ;;      Params:         0       3       0       0       0
  3755 ;;      Locals:         0       6       0       0       0
  3756 ;;      Temps:          0       2       0       0       0
  3757 ;;      Totals:         0      11       0       0       0
  3758 ;;Total ram usage:       11 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:    2
  3761 ;; This function calls:
  3762 ;;		_checkPositionFree
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           
  3769                           ;psect for function _legalPlay
  3770  0701                     _legalPlay:	
  3771                           
  3772                           ;incstack = 0
  3773                           ; Regs used in _legalPlay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3774                           ;legalPlay@row stored from wreg
  3775  0701  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0702  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0703  00AC               	movwf	legalPlay@row
  3778                           
  3779                           ;Othello.c: 302: signed char r;
  3780                           ;Othello.c: 303: signed char c;
  3781                           ;Othello.c: 304: unsigned char nextR;
  3782                           ;Othello.c: 305: unsigned char nextC;
  3783                           ;Othello.c: 306: unsigned char line;
  3784                           ;Othello.c: 308: if (row < 8 && col < 8 && checkPositionFree(row, col, AllPos)) {
  3785  0704  3008               	movlw	8
  3786  0705  022C               	subwf	legalPlay@row,w
  3787  0706  1803               	skipnc
  3788  0707  2FA2               	goto	l2973
  3789  0708  3008               	movlw	8
  3790  0709  0226               	subwf	legalPlay@col,w
  3791  070A  1803               	skipnc
  3792  070B  2FA2               	goto	l2973
  3793  070C  0826               	movf	legalPlay@col,w
  3794  070D  00A9               	movwf	??_legalPlay
  3795  070E  0829               	movf	??_legalPlay,w
  3796  070F  00F5               	movwf	checkPositionFree@col
  3797  0710  3046               	movlw	(low (_AllPos| 0))& (0+255)
  3798  0711  00AA               	movwf	??_legalPlay+1
  3799  0712  082A               	movf	??_legalPlay+1,w
  3800  0713  00F6               	movwf	checkPositionFree@colorArray
  3801  0714  082C               	movf	legalPlay@row,w
  3802  0715  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3803  071A  3A00               	xorlw	0
  3804  071B  1903               	skipnz
  3805  071C  2FA2               	goto	l2973
  3806                           
  3807                           ;Othello.c: 310: for(r = -1; r<2; r++) {
  3808  071D  1283               	bcf	3,5	;RP0=0, select bank0
  3809  071E  1303               	bcf	3,6	;RP1=0, select bank0
  3810  071F  01AD               	clrf	legalPlay@r
  3811  0720  03AD               	decf	legalPlay@r,f
  3812  0721  082D               	movf	legalPlay@r,w
  3813  0722  3A80               	xorlw	128
  3814  0723  3E7E               	addlw	-130
  3815  0724  1803               	btfsc	3,0
  3816  0725  2FA2               	goto	l2973
  3817  0726                     l246:	
  3818                           
  3819                           ;Othello.c: 311: for(c = -1; c<2; c++) {
  3820  0726  01AE               	clrf	legalPlay@c
  3821  0727  03AE               	decf	legalPlay@c,f
  3822  0728  082E               	movf	legalPlay@c,w
  3823  0729  3A80               	xorlw	128
  3824  072A  3E7E               	addlw	-130
  3825  072B  1803               	btfsc	3,0
  3826  072C  2F99               	goto	l2969
  3827  072D                     l2939:	
  3828                           
  3829                           ;Othello.c: 312: nextR = row + r;
  3830  072D  082C               	movf	legalPlay@row,w
  3831  072E  072D               	addwf	legalPlay@r,w
  3832  072F  00A9               	movwf	??_legalPlay
  3833  0730  0829               	movf	??_legalPlay,w
  3834  0731  00AF               	movwf	legalPlay@nextR
  3835                           
  3836                           ;Othello.c: 313: nextC = col + c;
  3837  0732  0826               	movf	legalPlay@col,w
  3838  0733  072E               	addwf	legalPlay@c,w
  3839  0734  00A9               	movwf	??_legalPlay
  3840  0735  0829               	movf	??_legalPlay,w
  3841  0736  00B0               	movwf	legalPlay@nextC
  3842                           
  3843                           ;Othello.c: 315: line = 0;
  3844  0737  01AB               	clrf	legalPlay@line
  3845  0738                     l2963:	
  3846                           ;Othello.c: 316: while(checkPositionFree(nextR,nextC,AllPos) == 0) {
  3847                           
  3848  0738  0830               	movf	legalPlay@nextC,w
  3849  0739  00A9               	movwf	??_legalPlay
  3850  073A  0829               	movf	??_legalPlay,w
  3851  073B  00F5               	movwf	checkPositionFree@col
  3852  073C  3046               	movlw	(low (_AllPos| 0))& (0+255)
  3853  073D  00AA               	movwf	??_legalPlay+1
  3854  073E  082A               	movf	??_legalPlay+1,w
  3855  073F  00F6               	movwf	checkPositionFree@colorArray
  3856  0740  082F               	movf	legalPlay@nextR,w
  3857  0741  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3858  0746  3A00               	xorlw	0
  3859  0747  1D03               	btfss	3,2
  3860  0748  2F8E               	goto	l2965
  3861                           
  3862                           ;Othello.c: 318: if(!(nextR > 7 && nextC > 7)) {
  3863  0749  3008               	movlw	8
  3864  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3865  074B  1303               	bcf	3,6	;RP1=0, select bank0
  3866  074C  022F               	subwf	legalPlay@nextR,w
  3867  074D  1C03               	skipc
  3868  074E  2F53               	goto	l2947
  3869  074F  3008               	movlw	8
  3870  0750  0230               	subwf	legalPlay@nextC,w
  3871  0751  1803               	skipnc
  3872  0752  2F83               	goto	l2961
  3873  0753                     l2947:	
  3874                           
  3875                           ;Othello.c: 319: if((checkPositionFree(nextR, nextC, otherColor) == 0) && (checkPosition
      +                          Free(nextR,nextC,ownColor) == 1)) {
  3876  0753  0830               	movf	legalPlay@nextC,w
  3877  0754  00A9               	movwf	??_legalPlay
  3878  0755  0829               	movf	??_legalPlay,w
  3879  0756  00F5               	movwf	checkPositionFree@col
  3880  0757  0828               	movf	legalPlay@otherColor,w
  3881  0758  00AA               	movwf	??_legalPlay+1
  3882  0759  082A               	movf	??_legalPlay+1,w
  3883  075A  00F6               	movwf	checkPositionFree@colorArray
  3884  075B  082F               	movf	legalPlay@nextR,w
  3885  075C  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3886  0761  3A00               	xorlw	0
  3887  0762  1D03               	skipz
  3888  0763  2F7C               	goto	l2953
  3889  0764  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0765  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0766  0830               	movf	legalPlay@nextC,w
  3892  0767  00A9               	movwf	??_legalPlay
  3893  0768  0829               	movf	??_legalPlay,w
  3894  0769  00F5               	movwf	checkPositionFree@col
  3895  076A  0827               	movf	legalPlay@ownColor,w
  3896  076B  00AA               	movwf	??_legalPlay+1
  3897  076C  082A               	movf	??_legalPlay+1,w
  3898  076D  00F6               	movwf	checkPositionFree@colorArray
  3899  076E  082F               	movf	legalPlay@nextR,w
  3900  076F  120A  158A  25A5  120A  118A  	fcall	_checkPositionFree
  3901  0774  3A01               	xorlw	1
  3902  0775  1D03               	skipz
  3903  0776  2F7C               	goto	l2953
  3904                           
  3905                           ;Othello.c: 320: line = 1;
  3906  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0778  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0779  01AB               	clrf	legalPlay@line
  3909  077A  0AAB               	incf	legalPlay@line,f
  3910                           
  3911                           ;Othello.c: 321: } else {
  3912  077B  2F83               	goto	l2961
  3913  077C                     l2953:	
  3914                           
  3915                           ;Othello.c: 322: if(line == 1) {
  3916  077C  1283               	bcf	3,5	;RP0=0, select bank0
  3917  077D  1303               	bcf	3,6	;RP1=0, select bank0
  3918  077E  032B               	decf	legalPlay@line,w
  3919  077F  1D03               	btfss	3,2
  3920  0780  2F8E               	goto	l2965
  3921                           
  3922                           ;Othello.c: 323: return 1;
  3923  0781  3001               	movlw	1
  3924  0782  0008               	return
  3925  0783                     l2961:	
  3926                           ;Othello.c: 325: break;
  3927                           
  3928                           ;Othello.c: 324: } else {
  3929                           
  3930                           
  3931                           ;Othello.c: 326: }
  3932                           ;Othello.c: 327: }
  3933                           ;Othello.c: 328: }
  3934                           ;Othello.c: 329: nextR = nextR + r;
  3935  0783  082F               	movf	legalPlay@nextR,w
  3936  0784  072D               	addwf	legalPlay@r,w
  3937  0785  00A9               	movwf	??_legalPlay
  3938  0786  0829               	movf	??_legalPlay,w
  3939  0787  00AF               	movwf	legalPlay@nextR
  3940                           
  3941                           ;Othello.c: 330: nextC = nextC + c;
  3942  0788  0830               	movf	legalPlay@nextC,w
  3943  0789  072E               	addwf	legalPlay@c,w
  3944  078A  00A9               	movwf	??_legalPlay
  3945  078B  0829               	movf	??_legalPlay,w
  3946  078C  00B0               	movwf	legalPlay@nextC
  3947  078D  2F38               	goto	l2963
  3948  078E                     l2965:	
  3949  078E  3001               	movlw	1
  3950  078F  1283               	bcf	3,5	;RP0=0, select bank0
  3951  0790  1303               	bcf	3,6	;RP1=0, select bank0
  3952  0791  00A9               	movwf	??_legalPlay
  3953  0792  0829               	movf	??_legalPlay,w
  3954  0793  07AE               	addwf	legalPlay@c,f
  3955  0794  082E               	movf	legalPlay@c,w
  3956  0795  3A80               	xorlw	128
  3957  0796  3E7E               	addlw	-130
  3958  0797  1C03               	skipc
  3959  0798  2F2D               	goto	l2939
  3960  0799                     l2969:	
  3961  0799  3001               	movlw	1
  3962  079A  00A9               	movwf	??_legalPlay
  3963  079B  0829               	movf	??_legalPlay,w
  3964  079C  07AD               	addwf	legalPlay@r,f
  3965  079D  082D               	movf	legalPlay@r,w
  3966  079E  3A80               	xorlw	128
  3967  079F  3E7E               	addlw	-130
  3968  07A0  1C03               	skipc
  3969  07A1  2F26               	goto	l246
  3970  07A2                     l2973:	
  3971                           
  3972                           ;Othello.c: 332: }
  3973                           ;Othello.c: 333: }
  3974                           ;Othello.c: 334: }
  3975                           ;Othello.c: 335: }
  3976                           ;Othello.c: 336: return 0;
  3977  07A2  3000               	movlw	0
  3978  07A3  0008               	return
  3979  07A4                     __end_of_legalPlay:	
  3980                           
  3981                           	psect	text13
  3982  0DA5                     __ptext13:	
  3983 ;; *************** function _checkPositionFree *****************
  3984 ;; Defined at:
  3985 ;;		line 199 in file "Othello.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  row             1    wreg     unsigned char 
  3988 ;;  col             1    5[COMMON] unsigned char 
  3989 ;;  colorArray      1    6[COMMON] PTR unsigned char 
  3990 ;;		 -> RedPos(8), GreenPos(8), AllPos(8), 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  row             1    4[BANK0 ] unsigned char 
  3993 ;;  temp            1    5[BANK0 ] unsigned char 
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      unsigned char 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         2       0       0       0       0
  4004 ;;      Locals:         0       2       0       0       0
  4005 ;;      Temps:          0       4       0       0       0
  4006 ;;      Totals:         2       6       0       0       0
  4007 ;;Total ram usage:        8 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    1
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_sendMatrix
  4014 ;;		_legalPlay
  4015 ;;		_drawFrom
  4016 ;;		_playPeice
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           
  4021                           ;psect for function _checkPositionFree
  4022  0DA5                     _checkPositionFree:	
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _checkPositionFree: [wreg-fsr0h+status,2+status,0]
  4026                           ;checkPositionFree@row stored from wreg
  4027  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0DA7  00A4               	movwf	checkPositionFree@row
  4030                           
  4031                           ;Othello.c: 200: char temp = 0x80>>col;
  4032  0DA8  0A75               	incf	checkPositionFree@col,w
  4033  0DA9  00A0               	movwf	??_checkPositionFree
  4034  0DAA  3080               	movlw	128
  4035  0DAB  00A1               	movwf	??_checkPositionFree+1
  4036  0DAC  3000               	movlw	0
  4037  0DAD  00A2               	movwf	??_checkPositionFree+2
  4038  0DAE  2DB2               	goto	u2734
  4039  0DAF                     u2735:	
  4040  0DAF  0D22               	rlf	??_checkPositionFree+2,w
  4041  0DB0  0CA2               	rrf	??_checkPositionFree+2,f
  4042  0DB1  0CA1               	rrf	??_checkPositionFree+1,f
  4043  0DB2                     u2734:	
  4044  0DB2  0BA0               	decfsz	??_checkPositionFree,f
  4045  0DB3  2DAF               	goto	u2735
  4046  0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  4047  0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  4048  0DB6  0821               	movf	??_checkPositionFree+1,w
  4049  0DB7  00A3               	movwf	??_checkPositionFree+3
  4050  0DB8  0823               	movf	??_checkPositionFree+3,w
  4051  0DB9  00A5               	movwf	checkPositionFree@temp
  4052                           
  4053                           ;Othello.c: 201: temp ^= colorArray[row];
  4054  0DBA  0824               	movf	checkPositionFree@row,w
  4055  0DBB  0776               	addwf	checkPositionFree@colorArray,w
  4056  0DBC  00A0               	movwf	??_checkPositionFree
  4057  0DBD  0820               	movf	??_checkPositionFree,w
  4058  0DBE  0084               	movwf	4
  4059  0DBF  1383               	bcf	3,7	;select IRP bank0
  4060  0DC0  0800               	movf	0,w
  4061  0DC1  00A1               	movwf	??_checkPositionFree+1
  4062  0DC2  0821               	movf	??_checkPositionFree+1,w
  4063  0DC3  06A5               	xorwf	checkPositionFree@temp,f
  4064                           
  4065                           ;Othello.c: 202: temp &= colorArray[row];
  4066  0DC4  0824               	movf	checkPositionFree@row,w
  4067  0DC5  0776               	addwf	checkPositionFree@colorArray,w
  4068  0DC6  00A0               	movwf	??_checkPositionFree
  4069  0DC7  0820               	movf	??_checkPositionFree,w
  4070  0DC8  0084               	movwf	4
  4071  0DC9  0800               	movf	0,w
  4072  0DCA  00A1               	movwf	??_checkPositionFree+1
  4073  0DCB  0821               	movf	??_checkPositionFree+1,w
  4074  0DCC  05A5               	andwf	checkPositionFree@temp,f
  4075                           
  4076                           ;Othello.c: 203: temp = temp == colorArray[row];
  4077  0DCD  0824               	movf	checkPositionFree@row,w
  4078  0DCE  0776               	addwf	checkPositionFree@colorArray,w
  4079  0DCF  00A0               	movwf	??_checkPositionFree
  4080  0DD0  0820               	movf	??_checkPositionFree,w
  4081  0DD1  0084               	movwf	4
  4082  0DD2  0800               	movf	0,w
  4083  0DD3  0625               	xorwf	checkPositionFree@temp,w
  4084  0DD4  1D03               	btfss	3,2
  4085  0DD5  2DD8               	goto	u2740
  4086  0DD6  3001               	movlw	1
  4087  0DD7  2DD9               	goto	u2750
  4088  0DD8                     u2740:	
  4089  0DD8  3000               	movlw	0
  4090  0DD9                     u2750:	
  4091  0DD9  00A1               	movwf	??_checkPositionFree+1
  4092  0DDA  0821               	movf	??_checkPositionFree+1,w
  4093  0DDB  00A5               	movwf	checkPositionFree@temp
  4094                           
  4095                           ;Othello.c: 204: return temp;
  4096  0DDC  0825               	movf	checkPositionFree@temp,w
  4097  0DDD  0008               	return
  4098  0DDE                     __end_of_checkPositionFree:	
  4099                           
  4100                           	psect	text14
  4101  0CD8                     __ptext14:	
  4102 ;; *************** function _lcd_puts *****************
  4103 ;; Defined at:
  4104 ;;		line 151 in file "lcd4bit/lcd4bits.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;  string          2    3[BANK0 ] PTR const unsigned char 
  4107 ;;		 -> STR_33(17), STR_32(5), STR_31(12), STR_30(10), 
  4108 ;;		 -> STR_29(8), STR_28(6), STR_27(10), STR_25(13), 
  4109 ;;		 -> STR_24(13), STR_23(9), STR_22(14), STR_21(6), 
  4110 ;;		 -> STR_20(6), STR_19(9), STR_18(14), STR_17(11), 
  4111 ;;		 -> STR_16(10), STR_15(12), STR_14(11), STR_13(14), 
  4112 ;;		 -> STR_12(8), STR_11(6), STR_10(14), STR_9(14), 
  4113 ;;		 -> STR_8(13), STR_7(11), STR_5(10), STR_4(14), 
  4114 ;;		 -> STR_3(9), STR_2(12), 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4126 ;;      Params:         0       2       0       0       0
  4127 ;;      Locals:         0       0       0       0       0
  4128 ;;      Temps:          0       1       0       0       0
  4129 ;;      Totals:         0       3       0       0       0
  4130 ;;Total ram usage:        3 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    4
  4133 ;; This function calls:
  4134 ;;		_lcd_write
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           
  4141                           ;psect for function _lcd_puts
  4142  0CD8                     _lcd_puts:	
  4143  0CD8                     l2783:	
  4144                           ;lcd4bits.c: 152: while (*string != 0)
  4145                           
  4146                           ;incstack = 0
  4147                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4148                           
  4149  0CD8  1283               	bcf	3,5	;RP0=0, select bank0
  4150  0CD9  1303               	bcf	3,6	;RP1=0, select bank0
  4151  0CDA  0824               	movf	lcd_puts@string+1,w
  4152  0CDB  00FF               	movwf	127
  4153  0CDC  0823               	movf	lcd_puts@string,w
  4154  0CDD  0084               	movwf	4
  4155  0CDE  120A  118A  2400  120A  158A  	fcall	stringtab
  4156  0CE3  3A00               	xorlw	0
  4157  0CE4  1903               	btfsc	3,2
  4158  0CE5  0008               	return
  4159                           
  4160                           ;lcd4bits.c: 153: lcd_write(1, *string++);
  4161  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0CE8  0824               	movf	lcd_puts@string+1,w
  4164  0CE9  00FF               	movwf	127
  4165  0CEA  0823               	movf	lcd_puts@string,w
  4166  0CEB  0084               	movwf	4
  4167  0CEC  120A  118A  2400  120A  158A  	fcall	stringtab
  4168  0CF1  00A5               	movwf	??_lcd_puts
  4169  0CF2  0825               	movf	??_lcd_puts,w
  4170  0CF3  00A0               	movwf	lcd_write@CmdChar
  4171  0CF4  3001               	movlw	1
  4172  0CF5  120A  158A  256D  120A  158A  	fcall	_lcd_write
  4173  0CFA  3001               	movlw	1
  4174  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  4176  0CFD  07A3               	addwf	lcd_puts@string,f
  4177  0CFE  1803               	skipnc
  4178  0CFF  0AA4               	incf	lcd_puts@string+1,f
  4179  0D00  2CD8               	goto	l2783
  4180  0D01                     __end_of_lcd_puts:	
  4181                           
  4182                           	psect	text15
  4183  0C2E                     __ptext15:	
  4184 ;; *************** function _lcd_goto *****************
  4185 ;; Defined at:
  4186 ;;		line 167 in file "lcd4bit/lcd4bits.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  position        1    wreg     unsigned char 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  position        1    4[BANK0 ] unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0, pclath, cstack
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4200 ;;      Params:         0       0       0       0       0
  4201 ;;      Locals:         0       1       0       0       0
  4202 ;;      Temps:          0       1       0       0       0
  4203 ;;      Totals:         0       2       0       0       0
  4204 ;;Total ram usage:        2 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; Hardware stack levels required when called:    4
  4207 ;; This function calls:
  4208 ;;		_DelayMs
  4209 ;;		_lcd_write
  4210 ;; This function is called by:
  4211 ;;		_main
  4212 ;; This function uses a non-reentrant model
  4213 ;;
  4214                           
  4215                           
  4216                           ;psect for function _lcd_goto
  4217  0C2E                     _lcd_goto:	
  4218                           
  4219                           ;incstack = 0
  4220                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4221                           ;lcd_goto@position stored from wreg
  4222  0C2E  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0C2F  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0C30  00A4               	movwf	lcd_goto@position
  4225                           
  4226                           ;lcd4bits.c: 168: lcd_write(0, 0x80 + position);
  4227  0C31  0824               	movf	lcd_goto@position,w
  4228  0C32  3E80               	addlw	128
  4229  0C33  00A3               	movwf	??_lcd_goto
  4230  0C34  0823               	movf	??_lcd_goto,w
  4231  0C35  00A0               	movwf	lcd_write@CmdChar
  4232  0C36  3000               	movlw	0
  4233  0C37  120A  158A  256D  120A  158A  	fcall	_lcd_write
  4234                           
  4235                           ;lcd4bits.c: 170: DelayMs(2);
  4236  0C3C  3002               	movlw	2
  4237  0C3D  00F5               	movwf	DelayMs@millis
  4238  0C3E  3000               	movlw	0
  4239  0C3F  00F6               	movwf	DelayMs@millis+1
  4240  0C40  120A  158A  23E2   	fcall	_DelayMs
  4241  0C43  0008               	return
  4242  0C44                     __end_of_lcd_goto:	
  4243                           
  4244                           	psect	text16
  4245  0BE2                     __ptext16:	
  4246 ;; *************** function _DelayMs *****************
  4247 ;; Defined at:
  4248 ;;		line 87 in file "lcd4bit/lcd4bits.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  millis          2    5[COMMON] unsigned int 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         2       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0
  4264 ;;      Temps:          0       0       0       0       0
  4265 ;;      Totals:         2       0       0       0       0
  4266 ;;Total ram usage:        2 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_lcd_clear
  4273 ;;		_lcd_goto
  4274 ;;		_lcd_init
  4275 ;;		_main
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _DelayMs
  4281  0BE2                     _DelayMs:	
  4282  0BE2                     l1799:	
  4283                           ;lcd4bits.c: 88: while (millis != 0) {
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  4287                           
  4288  0BE2  0875               	movf	DelayMs@millis,w
  4289  0BE3  0476               	iorwf	DelayMs@millis+1,w
  4290  0BE4  1903               	btfsc	3,2
  4291  0BE5  0008               	return
  4292                           
  4293                           ;lcd4bits.c: 89: TMR0 = 9;
  4294  0BE6  3009               	movlw	9
  4295  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  4297  0BE9  0081               	movwf	1	;volatile
  4298                           
  4299                           ;lcd4bits.c: 90: T0IF = 0;
  4300  0BEA  110B               	bcf	11,2	;volatile
  4301  0BEB                     l32:	
  4302                           ;lcd4bits.c: 91: while(T0IF == 0);
  4303                           
  4304  0BEB  1D0B               	btfss	11,2	;volatile
  4305  0BEC  2BEB               	goto	l32
  4306                           
  4307                           ;lcd4bits.c: 92: millis--;
  4308  0BED  3001               	movlw	1
  4309  0BEE  02F5               	subwf	DelayMs@millis,f
  4310  0BEF  3000               	movlw	0
  4311  0BF0  1C03               	skipc
  4312  0BF1  03F6               	decf	DelayMs@millis+1,f
  4313  0BF2  02F6               	subwf	DelayMs@millis+1,f
  4314  0BF3  2BE2               	goto	l1799
  4315  0BF4                     __end_of_DelayMs:	
  4316                           
  4317                           	psect	text17
  4318  0CB2                     __ptext17:	
  4319 ;; *************** function _getKeypadPressed *****************
  4320 ;; Defined at:
  4321 ;;		line 285 in file "Othello.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;		None
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  temp            1    1[BANK0 ] unsigned char 
  4326 ;;  temp2           1    0[BANK0 ] unsigned char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      unsigned char 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2, status,0
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4336 ;;      Params:         0       0       0       0       0
  4337 ;;      Locals:         0       2       0       0       0
  4338 ;;      Temps:          2       0       0       0       0
  4339 ;;      Totals:         2       2       0       0       0
  4340 ;;Total ram usage:        4 bytes
  4341 ;; Hardware stack levels used:    1
  4342 ;; Hardware stack levels required when called:    1
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_main
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           
  4351                           ;psect for function _getKeypadPressed
  4352  0CB2                     _getKeypadPressed:	
  4353                           
  4354                           ;Othello.c: 286: unsigned char temp = 0b11100000;
  4355                           
  4356                           ;incstack = 0
  4357                           ; Regs used in _getKeypadPressed: [wreg+status,2+status,0]
  4358  0CB2  30E0               	movlw	224
  4359  0CB3  00F5               	movwf	??_getKeypadPressed
  4360  0CB4  0875               	movf	??_getKeypadPressed,w
  4361  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  4362  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  4363  0CB7  00A1               	movwf	getKeypadPressed@temp
  4364                           
  4365                           ;Othello.c: 287: unsigned char temp2 = 0;
  4366  0CB8  01A0               	clrf	getKeypadPressed@temp2
  4367  0CB9                     l238:	
  4368                           ;Othello.c: 290: while((temp & 0xF0) != 0xF0) {
  4369                           
  4370  0CB9  30F0               	movlw	240
  4371  0CBA  0521               	andwf	getKeypadPressed@temp,w
  4372  0CBB  00F5               	movwf	??_getKeypadPressed
  4373  0CBC  30F0               	movlw	240
  4374  0CBD  0675               	xorwf	??_getKeypadPressed,w
  4375  0CBE  1903               	btfsc	3,2
  4376  0CBF  2CD6               	goto	l2919
  4377                           
  4378                           ;Othello.c: 291: PORTB = temp;
  4379  0CC0  0821               	movf	getKeypadPressed@temp,w
  4380  0CC1  0086               	movwf	6	;volatile
  4381                           
  4382                           ;Othello.c: 292: temp2 = PORTB & 0x0F;
  4383  0CC2  0806               	movf	6,w	;volatile
  4384  0CC3  390F               	andlw	15
  4385  0CC4  00F5               	movwf	??_getKeypadPressed
  4386  0CC5  0875               	movf	??_getKeypadPressed,w
  4387  0CC6  00A0               	movwf	getKeypadPressed@temp2
  4388                           
  4389                           ;Othello.c: 293: if(temp2 != 0x0F) {
  4390  0CC7  300F               	movlw	15
  4391  0CC8  0620               	xorwf	getKeypadPressed@temp2,w
  4392  0CC9  1903               	btfsc	3,2
  4393  0CCA  2CCD               	goto	l2917
  4394                           
  4395                           ;Othello.c: 294: return 1;
  4396  0CCB  3001               	movlw	1
  4397  0CCC  0008               	return
  4398  0CCD                     l2917:	
  4399                           
  4400                           ;Othello.c: 295: }
  4401                           ;Othello.c: 296: temp = ((temp & 0xF0) << 1) | 0x10;
  4402  0CCD  0821               	movf	getKeypadPressed@temp,w
  4403  0CCE  39F0               	andlw	240
  4404  0CCF  00F5               	movwf	??_getKeypadPressed
  4405  0CD0  0775               	addwf	??_getKeypadPressed,w
  4406  0CD1  3810               	iorlw	16
  4407  0CD2  00F6               	movwf	??_getKeypadPressed+1
  4408  0CD3  0876               	movf	??_getKeypadPressed+1,w
  4409  0CD4  00A1               	movwf	getKeypadPressed@temp
  4410  0CD5  2CB9               	goto	l238
  4411  0CD6                     l2919:	
  4412                           
  4413                           ;Othello.c: 297: }
  4414                           ;Othello.c: 298: return 0;
  4415  0CD6  3000               	movlw	0
  4416  0CD7  0008               	return
  4417  0CD8                     __end_of_getKeypadPressed:	
  4418                           
  4419                           	psect	text18
  4420  0F9B                     __ptext18:	
  4421 ;; *************** function _getKeypadKey *****************
  4422 ;; Defined at:
  4423 ;;		line 256 in file "Othello.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;  col             1    2[BANK0 ] unsigned char 
  4428 ;;  temp            1    1[BANK0 ] unsigned char 
  4429 ;;  temp2           1    0[BANK0 ] unsigned char 
  4430 ;; Return value:  Size  Location     Type
  4431 ;;                  1    wreg      unsigned char 
  4432 ;; Registers used:
  4433 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4434 ;; Tracked objects:
  4435 ;;		On entry : 0/0
  4436 ;;		On exit  : 0/0
  4437 ;;		Unchanged: 0/0
  4438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4439 ;;      Params:         0       0       0       0       0
  4440 ;;      Locals:         0       3       0       0       0
  4441 ;;      Temps:          2       0       0       0       0
  4442 ;;      Totals:         2       3       0       0       0
  4443 ;;Total ram usage:        5 bytes
  4444 ;; Hardware stack levels used:    2
  4445 ;; Hardware stack levels required when called:    1
  4446 ;; This function calls:
  4447 ;;		Nothing
  4448 ;; This function is called by:
  4449 ;;		_main
  4450 ;; This function uses a non-reentrant model
  4451 ;;
  4452                           
  4453                           
  4454                           ;psect for function _getKeypadKey
  4455  0F9B                     _getKeypadKey:	
  4456                           
  4457                           ;Othello.c: 257: unsigned char temp = 0xE0;
  4458                           
  4459                           ;incstack = 0
  4460                           ; Regs used in _getKeypadKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4461  0F9B  30E0               	movlw	224
  4462  0F9C  00F5               	movwf	??_getKeypadKey
  4463  0F9D  0875               	movf	??_getKeypadKey,w
  4464  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  4465  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  4466  0FA0  00A1               	movwf	getKeypadKey@temp
  4467                           
  4468                           ;Othello.c: 258: unsigned char temp2 = 0;
  4469  0FA1  01A0               	clrf	getKeypadKey@temp2
  4470                           
  4471                           ;Othello.c: 259: unsigned char col = 0;
  4472  0FA2  01A2               	clrf	getKeypadKey@col
  4473  0FA3                     l225:	
  4474                           ;Othello.c: 260: while(temp != 0xF0) {
  4475                           
  4476  0FA3  30F0               	movlw	240
  4477  0FA4  0621               	xorwf	getKeypadKey@temp,w
  4478  0FA5  1903               	btfsc	3,2
  4479  0FA6  2FFE               	goto	l2161
  4480                           
  4481                           ;Othello.c: 261: PORTB = temp;
  4482  0FA7  0821               	movf	getKeypadKey@temp,w
  4483  0FA8  0086               	movwf	6	;volatile
  4484                           
  4485                           ;Othello.c: 262: temp2 = PORTB & 0x0F;
  4486  0FA9  0806               	movf	6,w	;volatile
  4487  0FAA  390F               	andlw	15
  4488  0FAB  00F5               	movwf	??_getKeypadKey
  4489  0FAC  0875               	movf	??_getKeypadKey,w
  4490  0FAD  00A0               	movwf	getKeypadKey@temp2
  4491                           
  4492                           ;Othello.c: 263: switch(temp2) {
  4493  0FAE  2FE3               	goto	l2157
  4494  0FAF                     l2139:	
  4495                           ;Othello.c: 264: case 0b00001110:
  4496                           
  4497                           
  4498                           ;Othello.c: 265: return KEYS[3][3-col];
  4499  0FAF  0322               	decf	getKeypadKey@col,w
  4500  0FB0  3AFF               	xorlw	255
  4501  0FB1  3E03               	addlw	3
  4502  0FB2  3E1E               	addlw	low ((_KEYS| (0+32768)+12))
  4503  0FB3  0084               	movwf	4
  4504  0FB4  3084               	movlw	high ((_KEYS| (0+32768)+12))
  4505  0FB5  1803               	skipnc
  4506  0FB6  3E01               	addlw	1
  4507  0FB7  00FF               	movwf	127
  4508  0FB8  120A  118A  2400   	fcall	stringtab
  4509  0FBB  0008               	return
  4510  0FBC                     l2143:	
  4511                           ;Othello.c: 266: case 0b00001101:
  4512                           
  4513                           
  4514                           ;Othello.c: 267: return KEYS[2][3-col];
  4515  0FBC  0322               	decf	getKeypadKey@col,w
  4516  0FBD  3AFF               	xorlw	255
  4517  0FBE  3E03               	addlw	3
  4518  0FBF  3E1A               	addlw	low ((_KEYS| (0+32768)+8))
  4519  0FC0  0084               	movwf	4
  4520  0FC1  3084               	movlw	high ((_KEYS| (0+32768)+8))
  4521  0FC2  1803               	skipnc
  4522  0FC3  3E01               	addlw	1
  4523  0FC4  00FF               	movwf	127
  4524  0FC5  120A  118A  2400   	fcall	stringtab
  4525  0FC8  0008               	return
  4526  0FC9                     l2147:	
  4527                           ;Othello.c: 268: case 0b00001011:
  4528                           
  4529                           
  4530                           ;Othello.c: 269: return KEYS[1][3-col];
  4531  0FC9  0322               	decf	getKeypadKey@col,w
  4532  0FCA  3AFF               	xorlw	255
  4533  0FCB  3E03               	addlw	3
  4534  0FCC  3E16               	addlw	low ((_KEYS| (0+32768)+4))
  4535  0FCD  0084               	movwf	4
  4536  0FCE  3084               	movlw	high ((_KEYS| (0+32768)+4))
  4537  0FCF  1803               	skipnc
  4538  0FD0  3E01               	addlw	1
  4539  0FD1  00FF               	movwf	127
  4540  0FD2  120A  118A  2400   	fcall	stringtab
  4541  0FD5  0008               	return
  4542  0FD6                     l2151:	
  4543                           ;Othello.c: 270: case 0b00000111:
  4544                           
  4545                           
  4546                           ;Othello.c: 271: return KEYS[0][3-col];
  4547  0FD6  0322               	decf	getKeypadKey@col,w
  4548  0FD7  3AFF               	xorlw	255
  4549  0FD8  3E03               	addlw	3
  4550  0FD9  3E12               	addlw	low (_KEYS| (0+32768))
  4551  0FDA  0084               	movwf	4
  4552  0FDB  3084               	movlw	high (_KEYS| (0+32768))
  4553  0FDC  1803               	skipnc
  4554  0FDD  3E01               	addlw	1
  4555  0FDE  00FF               	movwf	127
  4556  0FDF  120A  118A  2400   	fcall	stringtab
  4557  0FE2  0008               	return
  4558  0FE3                     l2157:	
  4559                           ;Othello.c: 274: }
  4560                           
  4561                           ;Othello.c: 273: break;
  4562                           
  4563                           ;Othello.c: 272: default:
  4564                           
  4565  0FE3  0820               	movf	getKeypadKey@temp2,w
  4566                           
  4567                           ; Switch size 1, requested type "space"
  4568                           ; Number of cases is 4, Range of values is 7 to 14
  4569                           ; switch strategies available:
  4570                           ; Name         Instructions Cycles
  4571                           ; simple_byte           13     7 (average)
  4572                           ; direct_byte           35    11 (fixed)
  4573                           ; jumptable            263     9 (fixed)
  4574                           ;	Chosen strategy is simple_byte
  4575  0FE4  3A07               	xorlw	7	; case 7
  4576  0FE5  1903               	skipnz
  4577  0FE6  2FD6               	goto	l2151
  4578  0FE7  3A0C               	xorlw	12	; case 11
  4579  0FE8  1903               	skipnz
  4580  0FE9  2FC9               	goto	l2147
  4581  0FEA  3A06               	xorlw	6	; case 13
  4582  0FEB  1903               	skipnz
  4583  0FEC  2FBC               	goto	l2143
  4584  0FED  3A03               	xorlw	3	; case 14
  4585  0FEE  1903               	skipnz
  4586  0FEF  2FAF               	goto	l2139
  4587  0FF0  2FF1               	goto	l2159
  4588  0FF1                     l2159:	
  4589                           
  4590                           ;Othello.c: 275: col++;
  4591  0FF1  3001               	movlw	1
  4592  0FF2  00F5               	movwf	??_getKeypadKey
  4593  0FF3  0875               	movf	??_getKeypadKey,w
  4594  0FF4  07A2               	addwf	getKeypadKey@col,f
  4595                           
  4596                           ;Othello.c: 276: temp = ((temp & 0xF0) << 1) | 0x10;
  4597  0FF5  0821               	movf	getKeypadKey@temp,w
  4598  0FF6  39F0               	andlw	240
  4599  0FF7  00F5               	movwf	??_getKeypadKey
  4600  0FF8  0775               	addwf	??_getKeypadKey,w
  4601  0FF9  3810               	iorlw	16
  4602  0FFA  00F6               	movwf	??_getKeypadKey+1
  4603  0FFB  0876               	movf	??_getKeypadKey+1,w
  4604  0FFC  00A1               	movwf	getKeypadKey@temp
  4605  0FFD  2FA3               	goto	l225
  4606  0FFE                     l2161:	
  4607                           
  4608                           ;Othello.c: 277: }
  4609                           ;Othello.c: 278: return 0;
  4610  0FFE  3000               	movlw	0
  4611  0FFF  0008               	return
  4612  1000                     __end_of_getKeypadKey:	
  4613                           
  4614                           	psect	text19
  4615  0E18                     __ptext19:	
  4616 ;; *************** function _drawMatrix *****************
  4617 ;; Defined at:
  4618 ;;		line 207 in file "Othello.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  temp            1    9[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4632 ;;      Params:         0       0       0       0       0
  4633 ;;      Locals:         0       1       0       0       0
  4634 ;;      Temps:          0       1       0       0       0
  4635 ;;      Totals:         0       2       0       0       0
  4636 ;;Total ram usage:        2 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    3
  4639 ;; This function calls:
  4640 ;;		_I2C_SendAddress
  4641 ;;		_I2C_SendByte
  4642 ;;		_I2C_Start
  4643 ;;		_I2C_Stop
  4644 ;; This function is called by:
  4645 ;;		_main
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           
  4650                           ;psect for function _drawMatrix
  4651  0E18                     _drawMatrix:	
  4652                           
  4653                           ;Othello.c: 208: I2C_Start();
  4654                           
  4655                           ;incstack = 0
  4656                           ; Regs used in _drawMatrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4657  0E18  120A  158A  23B2  120A  158A  	fcall	_I2C_Start
  4658                           
  4659                           ;Othello.c: 209: RD1 = 1;
  4660  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  4662  0E1F  1488               	bsf	8,1	;volatile
  4663                           
  4664                           ;Othello.c: 210: I2C_SendAddress((0x70), 0x00);
  4665  0E20  01A0               	clrf	I2C_SendAddress@rw
  4666  0E21  3070               	movlw	112
  4667  0E22  120A  158A  23A4  120A  158A  	fcall	_I2C_SendAddress
  4668                           
  4669                           ;Othello.c: 211: I2C_SendByte(0x00);
  4670  0E27  3000               	movlw	0
  4671  0E28  120A  158A  2419  120A  158A  	fcall	_I2C_SendByte
  4672                           
  4673                           ;Othello.c: 212: for(char temp = 0; temp < 8; temp++) {
  4674  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  4675  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  4676  0E2F  01A9               	clrf	drawMatrix@temp
  4677  0E30  3008               	movlw	8
  4678  0E31  0229               	subwf	drawMatrix@temp,w
  4679  0E32  1803               	btfsc	3,0
  4680  0E33  2E54               	goto	l206
  4681  0E34                     l2843:	
  4682                           
  4683                           ;Othello.c: 213: I2C_SendByte(GreenPos[temp]);
  4684  0E34  0829               	movf	drawMatrix@temp,w
  4685  0E35  3E4E               	addlw	(low (_GreenPos| 0))& (0+255)
  4686  0E36  0084               	movwf	4
  4687  0E37  1383               	bcf	3,7	;select IRP bank0
  4688  0E38  0800               	movf	0,w
  4689  0E39  120A  158A  2419  120A  158A  	fcall	_I2C_SendByte
  4690                           
  4691                           ;Othello.c: 214: I2C_SendByte(RedPos[temp]);
  4692  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  4693  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  4694  0E40  0829               	movf	drawMatrix@temp,w
  4695  0E41  3E56               	addlw	(low (_RedPos| 0))& (0+255)
  4696  0E42  0084               	movwf	4
  4697  0E43  1383               	bcf	3,7	;select IRP bank0
  4698  0E44  0800               	movf	0,w
  4699  0E45  120A  158A  2419  120A  158A  	fcall	_I2C_SendByte
  4700  0E4A  3001               	movlw	1
  4701  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  4702  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  4703  0E4D  00A8               	movwf	??_drawMatrix
  4704  0E4E  0828               	movf	??_drawMatrix,w
  4705  0E4F  07A9               	addwf	drawMatrix@temp,f
  4706  0E50  3008               	movlw	8
  4707  0E51  0229               	subwf	drawMatrix@temp,w
  4708  0E52  1C03               	skipc
  4709  0E53  2E34               	goto	l2843
  4710  0E54                     l206:	
  4711                           
  4712                           ;Othello.c: 215: }
  4713                           ;Othello.c: 216: RD1 = 0;
  4714  0E54  1088               	bcf	8,1	;volatile
  4715                           
  4716                           ;Othello.c: 217: I2C_Stop();
  4717  0E55  120A  158A  23C0   	fcall	_I2C_Stop
  4718  0E58  0008               	return
  4719  0E59                     __end_of_drawMatrix:	
  4720                           
  4721                           	psect	text20
  4722  0BC0                     __ptext20:	
  4723 ;; *************** function _I2C_Stop *****************
  4724 ;; Defined at:
  4725 ;;		line 137 in file "i2c/i2c.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;		None
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;		None
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  1    wreg      void 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0, pclath, cstack
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4739 ;;      Params:         0       0       0       0       0
  4740 ;;      Locals:         0       0       0       0       0
  4741 ;;      Temps:          0       0       0       0       0
  4742 ;;      Totals:         0       0       0       0       0
  4743 ;;Total ram usage:        0 bytes
  4744 ;; Hardware stack levels used:    1
  4745 ;; Hardware stack levels required when called:    2
  4746 ;; This function calls:
  4747 ;;		_I2C_Idle_Status
  4748 ;; This function is called by:
  4749 ;;		_matrixSetup
  4750 ;;		_drawMatrix
  4751 ;; This function uses a non-reentrant model
  4752 ;;
  4753                           
  4754                           
  4755                           ;psect for function _I2C_Stop
  4756  0BC0                     _I2C_Stop:	
  4757  0BC0                     l1845:	
  4758                           ;i2c.c: 139: while(I2C_Idle_Status());
  4759                           
  4760                           ;incstack = 0
  4761                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  4762                           
  4763  0BC0  120A  158A  2537  120A  158A  	fcall	_I2C_Idle_Status
  4764  0BC5  3A00               	xorlw	0
  4765  0BC6  1D03               	skipz
  4766  0BC7  2BC0               	goto	l1845
  4767                           
  4768                           ;i2c.c: 140: SSPCON2bits.PEN = 1;
  4769  0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  4770  0BC9  1303               	bcf	3,6	;RP1=0, select bank1
  4771  0BCA  1511               	bsf	17,2	;volatile
  4772  0BCB                     l423:	
  4773                           ;i2c.c: 141: while(SSPCON2bits.PEN);
  4774                           
  4775  0BCB  1911               	btfsc	17,2	;volatile
  4776  0BCC  2BCB               	goto	l423
  4777                           
  4778                           ;i2c.c: 142: SSPIF = 0;
  4779  0BCD  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0BCE  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0BCF  118C               	bcf	12,3	;volatile
  4782  0BD0  0008               	return
  4783  0BD1                     __end_of_I2C_Stop:	
  4784                           
  4785                           	psect	text21
  4786  0BB2                     __ptext21:	
  4787 ;; *************** function _I2C_Start *****************
  4788 ;; Defined at:
  4789 ;;		line 112 in file "i2c/i2c.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;		None
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;		None
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  1    wreg      void 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0, pclath, cstack
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4803 ;;      Params:         0       0       0       0       0
  4804 ;;      Locals:         0       0       0       0       0
  4805 ;;      Temps:          0       0       0       0       0
  4806 ;;      Totals:         0       0       0       0       0
  4807 ;;Total ram usage:        0 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; Hardware stack levels required when called:    2
  4810 ;; This function calls:
  4811 ;;		_I2C_Idle_Status
  4812 ;; This function is called by:
  4813 ;;		_matrixSetup
  4814 ;;		_drawMatrix
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function _I2C_Start
  4820  0BB2                     _I2C_Start:	
  4821  0BB2                     l1837:	
  4822                           ;i2c.c: 114: while(I2C_Idle_Status());
  4823                           
  4824                           ;incstack = 0
  4825                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  4826                           
  4827  0BB2  120A  158A  2537  120A  158A  	fcall	_I2C_Idle_Status
  4828  0BB7  3A00               	xorlw	0
  4829  0BB8  1D03               	skipz
  4830  0BB9  2BB2               	goto	l1837
  4831                           
  4832                           ;i2c.c: 116: SSPCON2bits.SEN = 1;
  4833  0BBA  1683               	bsf	3,5	;RP0=1, select bank1
  4834  0BBB  1303               	bcf	3,6	;RP1=0, select bank1
  4835  0BBC  1411               	bsf	17,0	;volatile
  4836  0BBD                     l405:	
  4837                           ;i2c.c: 117: while(SSPCON2bits.SEN);
  4838                           
  4839  0BBD  1C11               	btfss	17,0	;volatile
  4840  0BBE  0008               	return
  4841  0BBF  2BBD               	goto	l405
  4842  0BC0                     __end_of_I2C_Start:	
  4843                           
  4844                           	psect	text22
  4845  0D37                     __ptext22:	
  4846 ;; *************** function _I2C_Idle_Status *****************
  4847 ;; Defined at:
  4848 ;;		line 101 in file "i2c/i2c.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      unsigned char 
  4855 ;; Registers used:
  4856 ;;		wreg, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4862 ;;      Params:         0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0
  4864 ;;      Temps:          0       8       0       0       0
  4865 ;;      Totals:         0       8       0       0       0
  4866 ;;Total ram usage:        8 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    1
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_I2C_Start
  4873 ;;		_I2C_Stop
  4874 ;;		_I2C_Restart
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           
  4879                           ;psect for function _I2C_Idle_Status
  4880  0D37                     _I2C_Idle_Status:	
  4881                           
  4882                           ;i2c.c: 103: return (SSPSTATbits.R_nW | SSPCON2bits.SEN |
  4883                           ;i2c.c: 104: SSPCON2bits.RSEN | SSPCON2bits.PEN |
  4884                           ;i2c.c: 105: SSPCON2bits.RCEN | SSPCON2bits.ACKEN);
  4885                           
  4886                           ;incstack = 0
  4887                           ; Regs used in _I2C_Idle_Status: [wreg+status,2+status,0]
  4888  0D37  1683               	bsf	3,5	;RP0=1, select bank1
  4889  0D38  1303               	bcf	3,6	;RP1=0, select bank1
  4890  0D39  0E11               	swapf	17,w	;volatile
  4891  0D3A  3901               	andlw	1
  4892  0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  4893  0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  4894  0D3D  00A0               	movwf	??_I2C_Idle_Status
  4895  0D3E  1683               	bsf	3,5	;RP0=1, select bank1
  4896  0D3F  1303               	bcf	3,6	;RP1=0, select bank1
  4897  0D40  0C11               	rrf	17,w	;volatile
  4898  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4899  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4900  0D43  00A1               	movwf	??_I2C_Idle_Status+1
  4901  0D44  0CA1               	rrf	??_I2C_Idle_Status+1,f
  4902  0D45  0C21               	rrf	??_I2C_Idle_Status+1,w
  4903  0D46  3901               	andlw	1
  4904  0D47  00A2               	movwf	??_I2C_Idle_Status+2
  4905  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  4906  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  4907  0D4A  0C11               	rrf	17,w	;volatile
  4908  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  4909  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  4910  0D4D  00A3               	movwf	??_I2C_Idle_Status+3
  4911  0D4E  0C23               	rrf	??_I2C_Idle_Status+3,w
  4912  0D4F  3901               	andlw	1
  4913  0D50  00A4               	movwf	??_I2C_Idle_Status+4
  4914  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  4915  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  4916  0D53  0C11               	rrf	17,w	;volatile
  4917  0D54  3901               	andlw	1
  4918  0D55  1283               	bcf	3,5	;RP0=0, select bank0
  4919  0D56  1303               	bcf	3,6	;RP1=0, select bank0
  4920  0D57  00A5               	movwf	??_I2C_Idle_Status+5
  4921  0D58  1683               	bsf	3,5	;RP0=1, select bank1
  4922  0D59  1303               	bcf	3,6	;RP1=0, select bank1
  4923  0D5A  0811               	movf	17,w	;volatile
  4924  0D5B  3901               	andlw	1
  4925  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  4926  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  4927  0D5E  00A6               	movwf	??_I2C_Idle_Status+6
  4928  0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  4929  0D60  1303               	bcf	3,6	;RP1=0, select bank1
  4930  0D61  0C14               	rrf	20,w	;volatile
  4931  0D62  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0D63  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0D64  00A7               	movwf	??_I2C_Idle_Status+7
  4934  0D65  0C27               	rrf	??_I2C_Idle_Status+7,w
  4935  0D66  3901               	andlw	1
  4936  0D67  0426               	iorwf	??_I2C_Idle_Status+6,w
  4937  0D68  0425               	iorwf	??_I2C_Idle_Status+5,w
  4938  0D69  0424               	iorwf	??_I2C_Idle_Status+4,w
  4939  0D6A  0422               	iorwf	??_I2C_Idle_Status+2,w
  4940  0D6B  0420               	iorwf	??_I2C_Idle_Status,w
  4941  0D6C  0008               	return
  4942  0D6D                     __end_of_I2C_Idle_Status:	
  4943                           
  4944                           	psect	text23
  4945  0BA4                     __ptext23:	
  4946 ;; *************** function _I2C_SendAddress *****************
  4947 ;; Defined at:
  4948 ;;		line 172 in file "i2c/i2c.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  address         1    wreg     unsigned char 
  4951 ;;  rw              1    0[BANK0 ] unsigned char 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  address         1    1[BANK0 ] unsigned char 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  1    wreg      unsigned char 
  4956 ;; Registers used:
  4957 ;;		wreg, status,2, status,0, pclath, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4963 ;;      Params:         0       1       0       0       0
  4964 ;;      Locals:         0       1       0       0       0
  4965 ;;      Temps:          0       0       0       0       0
  4966 ;;      Totals:         0       2       0       0       0
  4967 ;;Total ram usage:        2 bytes
  4968 ;; Hardware stack levels used:    1
  4969 ;; Hardware stack levels required when called:    2
  4970 ;; This function calls:
  4971 ;;		_I2C_SendByte
  4972 ;; This function is called by:
  4973 ;;		_matrixSetup
  4974 ;;		_drawMatrix
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           
  4979                           ;psect for function _I2C_SendAddress
  4980  0BA4                     _I2C_SendAddress:	
  4981                           
  4982                           ;incstack = 0
  4983                           ; Regs used in _I2C_SendAddress: [wreg+status,2+status,0+pclath+cstack]
  4984                           ;I2C_SendAddress@address stored from wreg
  4985  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  4986  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  4987  0BA6  00A1               	movwf	I2C_SendAddress@address
  4988                           
  4989                           ;i2c.c: 174: return I2C_SendByte(address | (rw?1:0));
  4990                           ;	Return value of _I2C_SendAddress is never used
  4991  0BA7  0820               	movf	I2C_SendAddress@rw,w
  4992  0BA8  1903               	btfsc	3,2
  4993  0BA9  2BAC               	goto	u2710
  4994  0BAA  3001               	movlw	1
  4995  0BAB  2BAD               	goto	u2720
  4996  0BAC                     u2710:	
  4997  0BAC  3000               	movlw	0
  4998  0BAD                     u2720:	
  4999  0BAD  0421               	iorwf	I2C_SendAddress@address,w
  5000  0BAE  120A  158A  2419   	fcall	_I2C_SendByte
  5001  0BB1  0008               	return
  5002  0BB2                     __end_of_I2C_SendAddress:	
  5003                           
  5004                           	psect	text24
  5005  0C19                     __ptext24:	
  5006 ;; *************** function _I2C_SendByte *****************
  5007 ;; Defined at:
  5008 ;;		line 158 in file "i2c/i2c.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;  data            1    wreg     unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  data            1    6[COMMON] unsigned char 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      unsigned char 
  5015 ;; Registers used:
  5016 ;;		wreg, status,2, status,0
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5022 ;;      Params:         0       0       0       0       0
  5023 ;;      Locals:         1       0       0       0       0
  5024 ;;      Temps:          1       0       0       0       0
  5025 ;;      Totals:         2       0       0       0       0
  5026 ;;Total ram usage:        2 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_matrixSetup
  5033 ;;		_drawMatrix
  5034 ;;		_I2C_SendAddress
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           
  5039                           ;psect for function _I2C_SendByte
  5040  0C19                     _I2C_SendByte:	
  5041                           
  5042                           ;incstack = 0
  5043                           ; Regs used in _I2C_SendByte: [wreg+status,2+status,0]
  5044                           ;I2C_SendByte@data stored from wreg
  5045  0C19  00F6               	movwf	I2C_SendByte@data
  5046                           
  5047                           ;i2c.c: 161: SSPBUF = data;
  5048  0C1A  0876               	movf	I2C_SendByte@data,w
  5049  0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  5050  0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  5051  0C1D  0093               	movwf	19	;volatile
  5052                           
  5053                           ;i2c.c: 162: SSPIF = 0;
  5054  0C1E  118C               	bcf	12,3	;volatile
  5055  0C1F                     l435:	
  5056                           ;i2c.c: 163: while(SSPSTATbits.R_nW);
  5057                           
  5058  0C1F  1683               	bsf	3,5	;RP0=1, select bank1
  5059  0C20  1303               	bcf	3,6	;RP1=0, select bank1
  5060  0C21  1914               	btfsc	20,2	;volatile
  5061  0C22  2C1F               	goto	l435
  5062                           
  5063                           ;i2c.c: 164: SSPIF = 0;
  5064  0C23  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0C24  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0C25  118C               	bcf	12,3	;volatile
  5067                           
  5068                           ;i2c.c: 165: return SSPCON2bits.ACKSTAT;
  5069  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  5070  0C27  1303               	bcf	3,6	;RP1=0, select bank1
  5071  0C28  0E11               	swapf	17,w	;volatile
  5072  0C29  00F5               	movwf	??_I2C_SendByte
  5073  0C2A  0CF5               	rrf	??_I2C_SendByte,f
  5074  0C2B  0C75               	rrf	??_I2C_SendByte,w
  5075  0C2C  3901               	andlw	1
  5076  0C2D  0008               	return
  5077  0C2E                     __end_of_I2C_SendByte:	
  5078                           
  5079                           	psect	text25
  5080  0D01                     __ptext25:	
  5081 ;; *************** function _displayNuber *****************
  5082 ;; Defined at:
  5083 ;;		line 409 in file "Othello.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  num             1    wreg     unsigned char 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  num             1   10[BANK0 ] unsigned char 
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      void 
  5090 ;; Registers used:
  5091 ;;		wreg, status,2, status,0, pclath, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5097 ;;      Params:         0       0       0       0       0
  5098 ;;      Locals:         0       1       0       0       0
  5099 ;;      Temps:          0       2       0       0       0
  5100 ;;      Totals:         0       3       0       0       0
  5101 ;;Total ram usage:        3 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    5
  5104 ;; This function calls:
  5105 ;;		___awdiv
  5106 ;;		___awmod
  5107 ;;		_lcd_putch
  5108 ;; This function is called by:
  5109 ;;		_main
  5110 ;; This function uses a non-reentrant model
  5111 ;;
  5112                           
  5113                           
  5114                           ;psect for function _displayNuber
  5115  0D01                     _displayNuber:	
  5116                           
  5117                           ;incstack = 0
  5118                           ; Regs used in _displayNuber: [wreg+status,2+status,0+pclath+cstack]
  5119                           ;displayNuber@num stored from wreg
  5120  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0D03  00AA               	movwf	displayNuber@num
  5123                           
  5124                           ;Othello.c: 410: lcd_putch(0x30 + num/10);
  5125  0D04  300A               	movlw	10
  5126  0D05  00A0               	movwf	___awdiv@divisor
  5127  0D06  3000               	movlw	0
  5128  0D07  00A1               	movwf	___awdiv@divisor+1
  5129  0D08  082A               	movf	displayNuber@num,w
  5130  0D09  00A8               	movwf	??_displayNuber
  5131  0D0A  01A9               	clrf	??_displayNuber+1
  5132  0D0B  0828               	movf	??_displayNuber,w
  5133  0D0C  00A2               	movwf	___awdiv@dividend
  5134  0D0D  0829               	movf	??_displayNuber+1,w
  5135  0D0E  00A3               	movwf	___awdiv@dividend+1
  5136  0D0F  120A  118A  27A4  120A  158A  	fcall	___awdiv
  5137  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  5138  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  5139  0D16  0820               	movf	?___awdiv,w
  5140  0D17  3E30               	addlw	48
  5141  0D18  120A  158A  2398  120A  158A  	fcall	_lcd_putch
  5142                           
  5143                           ;Othello.c: 411: lcd_putch(0x30 + num%10);
  5144  0D1D  300A               	movlw	10
  5145  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  5146  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  5147  0D20  00A0               	movwf	___awmod@divisor
  5148  0D21  3000               	movlw	0
  5149  0D22  00A1               	movwf	___awmod@divisor+1
  5150  0D23  082A               	movf	displayNuber@num,w
  5151  0D24  00A8               	movwf	??_displayNuber
  5152  0D25  01A9               	clrf	??_displayNuber+1
  5153  0D26  0828               	movf	??_displayNuber,w
  5154  0D27  00A2               	movwf	___awmod@dividend
  5155  0D28  0829               	movf	??_displayNuber+1,w
  5156  0D29  00A3               	movwf	___awmod@dividend+1
  5157  0D2A  120A  158A  26A3  120A  158A  	fcall	___awmod
  5158  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  5160  0D31  0820               	movf	?___awmod,w
  5161  0D32  3E30               	addlw	48
  5162  0D33  120A  158A  2398   	fcall	_lcd_putch
  5163  0D36  0008               	return
  5164  0D37                     __end_of_displayNuber:	
  5165                           
  5166                           	psect	text26
  5167  0B98                     __ptext26:	
  5168 ;; *************** function _lcd_putch *****************
  5169 ;; Defined at:
  5170 ;;		line 157 in file "lcd4bit/lcd4bits.c"
  5171 ;; Parameters:    Size  Location     Type
  5172 ;;  character       1    wreg     unsigned char 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;  character       1    4[BANK0 ] unsigned char 
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  1    wreg      void 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0, pclath, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5184 ;;      Params:         0       0       0       0       0
  5185 ;;      Locals:         0       1       0       0       0
  5186 ;;      Temps:          0       1       0       0       0
  5187 ;;      Totals:         0       2       0       0       0
  5188 ;;Total ram usage:        2 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    4
  5191 ;; This function calls:
  5192 ;;		_lcd_write
  5193 ;; This function is called by:
  5194 ;;		_displayNuber
  5195 ;;		_main
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function _lcd_putch
  5201  0B98                     _lcd_putch:	
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  5205                           ;lcd_putch@character stored from wreg
  5206  0B98  1283               	bcf	3,5	;RP0=0, select bank0
  5207  0B99  1303               	bcf	3,6	;RP1=0, select bank0
  5208  0B9A  00A4               	movwf	lcd_putch@character
  5209                           
  5210                           ;lcd4bits.c: 158: lcd_write(1, character);
  5211  0B9B  0824               	movf	lcd_putch@character,w
  5212  0B9C  00A3               	movwf	??_lcd_putch
  5213  0B9D  0823               	movf	??_lcd_putch,w
  5214  0B9E  00A0               	movwf	lcd_write@CmdChar
  5215  0B9F  3001               	movlw	1
  5216  0BA0  120A  158A  256D   	fcall	_lcd_write
  5217  0BA3  0008               	return
  5218  0BA4                     __end_of_lcd_putch:	
  5219                           
  5220                           	psect	text27
  5221  0D6D                     __ptext27:	
  5222 ;; *************** function _lcd_write *****************
  5223 ;; Defined at:
  5224 ;;		line 126 in file "lcd4bit/lcd4bits.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  mode            1    wreg     unsigned char 
  5227 ;;  CmdChar         1    0[BANK0 ] unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  mode            1    2[BANK0 ] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, pclath, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5239 ;;      Params:         0       1       0       0       0
  5240 ;;      Locals:         0       1       0       0       0
  5241 ;;      Temps:          0       1       0       0       0
  5242 ;;      Totals:         0       3       0       0       0
  5243 ;;Total ram usage:        3 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    3
  5246 ;; This function calls:
  5247 ;;		_Delay20us
  5248 ;;		_LCD_strobe
  5249 ;; This function is called by:
  5250 ;;		_lcd_clear
  5251 ;;		_lcd_puts
  5252 ;;		_lcd_putch
  5253 ;;		_lcd_goto
  5254 ;;		_lcd_init
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           
  5259                           ;psect for function _lcd_write
  5260  0D6D                     _lcd_write:	
  5261                           
  5262                           ;incstack = 0
  5263                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  5264                           ;lcd_write@mode stored from wreg
  5265  0D6D  1283               	bcf	3,5	;RP0=0, select bank0
  5266  0D6E  1303               	bcf	3,6	;RP1=0, select bank0
  5267  0D6F  00A2               	movwf	lcd_write@mode
  5268                           
  5269                           ;lcd4bits.c: 128: PORTA = (CmdChar & 0xF0)>>4;
  5270  0D70  0820               	movf	lcd_write@CmdChar,w
  5271  0D71  00A1               	movwf	??_lcd_write
  5272  0D72  3004               	movlw	4
  5273  0D73                     u2655:	
  5274  0D73  1003               	clrc
  5275  0D74  0CA1               	rrf	??_lcd_write,f
  5276  0D75  3EFF               	addlw	-1
  5277  0D76  1D03               	skipz
  5278  0D77  2D73               	goto	u2655
  5279  0D78  0821               	movf	??_lcd_write,w
  5280  0D79  390F               	andlw	15
  5281  0D7A  0085               	movwf	5	;volatile
  5282                           
  5283                           ;lcd4bits.c: 130: RA5 = mode;
  5284  0D7B  1C22               	btfss	lcd_write@mode,0
  5285  0D7C  2D81               	goto	u2660
  5286  0D7D  1283               	bcf	3,5	;RP0=0, select bank0
  5287  0D7E  1303               	bcf	3,6	;RP1=0, select bank0
  5288  0D7F  1685               	bsf	5,5	;volatile
  5289  0D80  2D84               	goto	l2611
  5290  0D81                     u2660:	
  5291  0D81  1283               	bcf	3,5	;RP0=0, select bank0
  5292  0D82  1303               	bcf	3,6	;RP1=0, select bank0
  5293  0D83  1285               	bcf	5,5	;volatile
  5294  0D84                     l2611:	
  5295                           
  5296                           ;lcd4bits.c: 131: LCD_strobe();
  5297  0D84  120A  158A  238E  120A  158A  	fcall	_LCD_strobe
  5298                           
  5299                           ;lcd4bits.c: 133: Delay20us();
  5300  0D89  120A  158A  2384  120A  158A  	fcall	_Delay20us
  5301                           
  5302                           ;lcd4bits.c: 134: PORTA = (CmdChar & 0x0F);
  5303  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  5304  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  5305  0D90  0820               	movf	lcd_write@CmdChar,w
  5306  0D91  390F               	andlw	15
  5307  0D92  0085               	movwf	5	;volatile
  5308                           
  5309                           ;lcd4bits.c: 136: RA5 = mode;
  5310  0D93  1C22               	btfss	lcd_write@mode,0
  5311  0D94  2D99               	goto	u2680
  5312  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  5313  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  5314  0D97  1685               	bsf	5,5	;volatile
  5315  0D98  2D9C               	goto	l2619
  5316  0D99                     u2680:	
  5317  0D99  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0D9B  1285               	bcf	5,5	;volatile
  5320  0D9C                     l2619:	
  5321                           
  5322                           ;lcd4bits.c: 137: LCD_strobe();
  5323  0D9C  120A  158A  238E  120A  158A  	fcall	_LCD_strobe
  5324                           
  5325                           ;lcd4bits.c: 139: Delay20us();
  5326  0DA1  120A  158A  2384   	fcall	_Delay20us
  5327  0DA4  0008               	return
  5328  0DA5                     __end_of_lcd_write:	
  5329                           
  5330                           	psect	text28
  5331  0B8E                     __ptext28:	
  5332 ;; *************** function _LCD_strobe *****************
  5333 ;; Defined at:
  5334 ;;		line 109 in file "lcd4bit/lcd4bits.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;		None
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;		None
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0, pclath, cstack
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5348 ;;      Params:         0       0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0
  5351 ;;      Totals:         0       0       0       0       0
  5352 ;;Total ram usage:        0 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:    2
  5355 ;; This function calls:
  5356 ;;		_Delay20us
  5357 ;; This function is called by:
  5358 ;;		_lcd_write
  5359 ;; This function uses a non-reentrant model
  5360 ;;
  5361                           
  5362                           
  5363                           ;psect for function _LCD_strobe
  5364  0B8E                     _LCD_strobe:	
  5365                           
  5366                           ;lcd4bits.c: 110: RA4 = 1;
  5367                           
  5368                           ;incstack = 0
  5369                           ; Regs used in _LCD_strobe: [wreg+status,2+status,0+pclath+cstack]
  5370  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  5372  0B90  1605               	bsf	5,4	;volatile
  5373                           
  5374                           ;lcd4bits.c: 111: Delay20us();
  5375  0B91  120A  158A  2384   	fcall	_Delay20us
  5376                           
  5377                           ;lcd4bits.c: 112: RA4 = 0;
  5378  0B94  1283               	bcf	3,5	;RP0=0, select bank0
  5379  0B95  1303               	bcf	3,6	;RP1=0, select bank0
  5380  0B96  1205               	bcf	5,4	;volatile
  5381  0B97  0008               	return
  5382  0B98                     __end_of_LCD_strobe:	
  5383                           
  5384                           	psect	text29
  5385  0B84                     __ptext29:	
  5386 ;; *************** function _Delay20us *****************
  5387 ;; Defined at:
  5388 ;;		line 100 in file "lcd4bit/lcd4bits.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  next            1    6[COMMON] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		wreg, status,2, status,0
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5402 ;;      Params:         0       0       0       0       0
  5403 ;;      Locals:         1       0       0       0       0
  5404 ;;      Temps:          1       0       0       0       0
  5405 ;;      Totals:         2       0       0       0       0
  5406 ;;Total ram usage:        2 bytes
  5407 ;; Hardware stack levels used:    1
  5408 ;; Hardware stack levels required when called:    1
  5409 ;; This function calls:
  5410 ;;		Nothing
  5411 ;; This function is called by:
  5412 ;;		_LCD_strobe
  5413 ;;		_lcd_write
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           
  5418                           ;psect for function _Delay20us
  5419  0B84                     _Delay20us:	
  5420                           
  5421                           ;lcd4bits.c: 101: unsigned char next;
  5422                           ;lcd4bits.c: 102: for (next = 0; next < 3; next++);
  5423                           
  5424                           ;incstack = 0
  5425                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  5426  0B84  01F6               	clrf	Delay20us@next
  5427  0B85                     L6:	
  5428  0B85  3003               	movlw	3
  5429  0B86  0276               	subwf	Delay20us@next,w
  5430  0B87  1803               	btfsc	3,0
  5431  0B88  0008               	return
  5432  0B89  3001               	movlw	1
  5433  0B8A  00F5               	movwf	??_Delay20us
  5434  0B8B  0875               	movf	??_Delay20us,w
  5435  0B8C  07F6               	addwf	Delay20us@next,f
  5436  0B8D  2B85               	goto	L6
  5437  0B8E                     __end_of_Delay20us:	
  5438                           
  5439                           	psect	text30
  5440  0EA3                     __ptext30:	
  5441 ;; *************** function ___awmod *****************
  5442 ;; Defined at:
  5443 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  divisor         2    0[BANK0 ] int 
  5446 ;;  dividend        2    2[BANK0 ] int 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  sign            1    5[BANK0 ] unsigned char 
  5449 ;;  counter         1    4[BANK0 ] unsigned char 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  2    0[BANK0 ] int 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5459 ;;      Params:         0       4       0       0       0
  5460 ;;      Locals:         0       2       0       0       0
  5461 ;;      Temps:          1       0       0       0       0
  5462 ;;      Totals:         1       6       0       0       0
  5463 ;;Total ram usage:        7 bytes
  5464 ;; Hardware stack levels used:    1
  5465 ;; Hardware stack levels required when called:    1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_displayNuber
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function ___awmod
  5475  0EA3                     ___awmod:	
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5479  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  5480  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  5481  0EA5  01A5               	clrf	___awmod@sign
  5482  0EA6  1FA3               	btfss	___awmod@dividend+1,7
  5483  0EA7  2EAF               	goto	l2747
  5484  0EA8  09A2               	comf	___awmod@dividend,f
  5485  0EA9  09A3               	comf	___awmod@dividend+1,f
  5486  0EAA  0AA2               	incf	___awmod@dividend,f
  5487  0EAB  1903               	skipnz
  5488  0EAC  0AA3               	incf	___awmod@dividend+1,f
  5489  0EAD  01A5               	clrf	___awmod@sign
  5490  0EAE  0AA5               	incf	___awmod@sign,f
  5491  0EAF                     l2747:	
  5492  0EAF  1FA1               	btfss	___awmod@divisor+1,7
  5493  0EB0  2EB6               	goto	l2751
  5494  0EB1  09A0               	comf	___awmod@divisor,f
  5495  0EB2  09A1               	comf	___awmod@divisor+1,f
  5496  0EB3  0AA0               	incf	___awmod@divisor,f
  5497  0EB4  1903               	skipnz
  5498  0EB5  0AA1               	incf	___awmod@divisor+1,f
  5499  0EB6                     l2751:	
  5500  0EB6  0820               	movf	___awmod@divisor,w
  5501  0EB7  0421               	iorwf	___awmod@divisor+1,w
  5502  0EB8  1903               	btfsc	3,2
  5503  0EB9  2EE3               	goto	l2769
  5504  0EBA  01A4               	clrf	___awmod@counter
  5505  0EBB  0AA4               	incf	___awmod@counter,f
  5506  0EBC                     l2759:	
  5507  0EBC  1BA1               	btfsc	___awmod@divisor+1,7
  5508  0EBD  2ECA               	goto	l2761
  5509  0EBE  3001               	movlw	1
  5510  0EBF                     u2935:	
  5511  0EBF  1003               	clrc
  5512  0EC0  0DA0               	rlf	___awmod@divisor,f
  5513  0EC1  0DA1               	rlf	___awmod@divisor+1,f
  5514  0EC2  3EFF               	addlw	-1
  5515  0EC3  1D03               	skipz
  5516  0EC4  2EBF               	goto	u2935
  5517  0EC5  3001               	movlw	1
  5518  0EC6  00F5               	movwf	??___awmod
  5519  0EC7  0875               	movf	??___awmod,w
  5520  0EC8  07A4               	addwf	___awmod@counter,f
  5521  0EC9  2EBC               	goto	l2759
  5522  0ECA                     l2761:	
  5523  0ECA  0821               	movf	___awmod@divisor+1,w
  5524  0ECB  0223               	subwf	___awmod@dividend+1,w
  5525  0ECC  1D03               	skipz
  5526  0ECD  2ED0               	goto	u2955
  5527  0ECE  0820               	movf	___awmod@divisor,w
  5528  0ECF  0222               	subwf	___awmod@dividend,w
  5529  0ED0                     u2955:	
  5530  0ED0  1C03               	skipc
  5531  0ED1  2ED8               	goto	l2765
  5532  0ED2  0820               	movf	___awmod@divisor,w
  5533  0ED3  02A2               	subwf	___awmod@dividend,f
  5534  0ED4  0821               	movf	___awmod@divisor+1,w
  5535  0ED5  1C03               	skipc
  5536  0ED6  03A3               	decf	___awmod@dividend+1,f
  5537  0ED7  02A3               	subwf	___awmod@dividend+1,f
  5538  0ED8                     l2765:	
  5539  0ED8  3001               	movlw	1
  5540  0ED9                     u2965:	
  5541  0ED9  1003               	clrc
  5542  0EDA  0CA1               	rrf	___awmod@divisor+1,f
  5543  0EDB  0CA0               	rrf	___awmod@divisor,f
  5544  0EDC  3EFF               	addlw	-1
  5545  0EDD  1D03               	skipz
  5546  0EDE  2ED9               	goto	u2965
  5547  0EDF  3001               	movlw	1
  5548  0EE0  02A4               	subwf	___awmod@counter,f
  5549  0EE1  1D03               	btfss	3,2
  5550  0EE2  2ECA               	goto	l2761
  5551  0EE3                     l2769:	
  5552  0EE3  0825               	movf	___awmod@sign,w
  5553  0EE4  1903               	btfsc	3,2
  5554  0EE5  2EEB               	goto	l2773
  5555  0EE6  09A2               	comf	___awmod@dividend,f
  5556  0EE7  09A3               	comf	___awmod@dividend+1,f
  5557  0EE8  0AA2               	incf	___awmod@dividend,f
  5558  0EE9  1903               	skipnz
  5559  0EEA  0AA3               	incf	___awmod@dividend+1,f
  5560  0EEB                     l2773:	
  5561  0EEB  0823               	movf	___awmod@dividend+1,w
  5562  0EEC  00A1               	movwf	?___awmod+1
  5563  0EED  0822               	movf	___awmod@dividend,w
  5564  0EEE  00A0               	movwf	?___awmod
  5565  0EEF  0008               	return
  5566  0EF0                     __end_of___awmod:	
  5567                           
  5568                           	psect	text31
  5569  07A4                     __ptext31:	
  5570 ;; *************** function ___awdiv *****************
  5571 ;; Defined at:
  5572 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  divisor         2    0[BANK0 ] int 
  5575 ;;  dividend        2    2[BANK0 ] int 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  quotient        2    6[BANK0 ] int 
  5578 ;;  sign            1    5[BANK0 ] unsigned char 
  5579 ;;  counter         1    4[BANK0 ] unsigned char 
  5580 ;; Return value:  Size  Location     Type
  5581 ;;                  2    0[BANK0 ] int 
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0
  5584 ;; Tracked objects:
  5585 ;;		On entry : 0/0
  5586 ;;		On exit  : 0/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5589 ;;      Params:         0       4       0       0       0
  5590 ;;      Locals:         0       4       0       0       0
  5591 ;;      Temps:          1       0       0       0       0
  5592 ;;      Totals:         1       8       0       0       0
  5593 ;;Total ram usage:        9 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    1
  5596 ;; This function calls:
  5597 ;;		Nothing
  5598 ;; This function is called by:
  5599 ;;		_displayNuber
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           
  5604                           ;psect for function ___awdiv
  5605  07A4                     ___awdiv:	
  5606                           
  5607                           ;incstack = 0
  5608                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5609  07A4  1283               	bcf	3,5	;RP0=0, select bank0
  5610  07A5  1303               	bcf	3,6	;RP1=0, select bank0
  5611  07A6  01A5               	clrf	___awdiv@sign
  5612  07A7  1FA1               	btfss	___awdiv@divisor+1,7
  5613  07A8  2FB0               	goto	l2703
  5614  07A9  09A0               	comf	___awdiv@divisor,f
  5615  07AA  09A1               	comf	___awdiv@divisor+1,f
  5616  07AB  0AA0               	incf	___awdiv@divisor,f
  5617  07AC  1903               	skipnz
  5618  07AD  0AA1               	incf	___awdiv@divisor+1,f
  5619  07AE  01A5               	clrf	___awdiv@sign
  5620  07AF  0AA5               	incf	___awdiv@sign,f
  5621  07B0                     l2703:	
  5622  07B0  1FA3               	btfss	___awdiv@dividend+1,7
  5623  07B1  2FBB               	goto	l2709
  5624  07B2  09A2               	comf	___awdiv@dividend,f
  5625  07B3  09A3               	comf	___awdiv@dividend+1,f
  5626  07B4  0AA2               	incf	___awdiv@dividend,f
  5627  07B5  1903               	skipnz
  5628  07B6  0AA3               	incf	___awdiv@dividend+1,f
  5629  07B7  3001               	movlw	1
  5630  07B8  00F5               	movwf	??___awdiv
  5631  07B9  0875               	movf	??___awdiv,w
  5632  07BA  06A5               	xorwf	___awdiv@sign,f
  5633  07BB                     l2709:	
  5634  07BB  01A6               	clrf	___awdiv@quotient
  5635  07BC  01A7               	clrf	___awdiv@quotient+1
  5636  07BD  0820               	movf	___awdiv@divisor,w
  5637  07BE  0421               	iorwf	___awdiv@divisor+1,w
  5638  07BF  1903               	btfsc	3,2
  5639  07C0  2FF2               	goto	l2731
  5640  07C1  01A4               	clrf	___awdiv@counter
  5641  07C2  0AA4               	incf	___awdiv@counter,f
  5642  07C3                     l2719:	
  5643  07C3  1BA1               	btfsc	___awdiv@divisor+1,7
  5644  07C4  2FD1               	goto	l2721
  5645  07C5  3001               	movlw	1
  5646  07C6                     u2835:	
  5647  07C6  1003               	clrc
  5648  07C7  0DA0               	rlf	___awdiv@divisor,f
  5649  07C8  0DA1               	rlf	___awdiv@divisor+1,f
  5650  07C9  3EFF               	addlw	-1
  5651  07CA  1D03               	skipz
  5652  07CB  2FC6               	goto	u2835
  5653  07CC  3001               	movlw	1
  5654  07CD  00F5               	movwf	??___awdiv
  5655  07CE  0875               	movf	??___awdiv,w
  5656  07CF  07A4               	addwf	___awdiv@counter,f
  5657  07D0  2FC3               	goto	l2719
  5658  07D1                     l2721:	
  5659  07D1  3001               	movlw	1
  5660  07D2                     u2855:	
  5661  07D2  1003               	clrc
  5662  07D3  0DA6               	rlf	___awdiv@quotient,f
  5663  07D4  0DA7               	rlf	___awdiv@quotient+1,f
  5664  07D5  3EFF               	addlw	-1
  5665  07D6  1D03               	skipz
  5666  07D7  2FD2               	goto	u2855
  5667  07D8  0821               	movf	___awdiv@divisor+1,w
  5668  07D9  0223               	subwf	___awdiv@dividend+1,w
  5669  07DA  1D03               	skipz
  5670  07DB  2FDE               	goto	u2865
  5671  07DC  0820               	movf	___awdiv@divisor,w
  5672  07DD  0222               	subwf	___awdiv@dividend,w
  5673  07DE                     u2865:	
  5674  07DE  1C03               	skipc
  5675  07DF  2FE7               	goto	l2727
  5676  07E0  0820               	movf	___awdiv@divisor,w
  5677  07E1  02A2               	subwf	___awdiv@dividend,f
  5678  07E2  0821               	movf	___awdiv@divisor+1,w
  5679  07E3  1C03               	skipc
  5680  07E4  03A3               	decf	___awdiv@dividend+1,f
  5681  07E5  02A3               	subwf	___awdiv@dividend+1,f
  5682  07E6  1426               	bsf	___awdiv@quotient,0
  5683  07E7                     l2727:	
  5684  07E7  3001               	movlw	1
  5685  07E8                     u2875:	
  5686  07E8  1003               	clrc
  5687  07E9  0CA1               	rrf	___awdiv@divisor+1,f
  5688  07EA  0CA0               	rrf	___awdiv@divisor,f
  5689  07EB  3EFF               	addlw	-1
  5690  07EC  1D03               	skipz
  5691  07ED  2FE8               	goto	u2875
  5692  07EE  3001               	movlw	1
  5693  07EF  02A4               	subwf	___awdiv@counter,f
  5694  07F0  1D03               	btfss	3,2
  5695  07F1  2FD1               	goto	l2721
  5696  07F2                     l2731:	
  5697  07F2  0825               	movf	___awdiv@sign,w
  5698  07F3  1903               	btfsc	3,2
  5699  07F4  2FFA               	goto	l2735
  5700  07F5  09A6               	comf	___awdiv@quotient,f
  5701  07F6  09A7               	comf	___awdiv@quotient+1,f
  5702  07F7  0AA6               	incf	___awdiv@quotient,f
  5703  07F8  1903               	skipnz
  5704  07F9  0AA7               	incf	___awdiv@quotient+1,f
  5705  07FA                     l2735:	
  5706  07FA  0827               	movf	___awdiv@quotient+1,w
  5707  07FB  00A1               	movwf	?___awdiv+1
  5708  07FC  0826               	movf	___awdiv@quotient,w
  5709  07FD  00A0               	movwf	?___awdiv
  5710  07FE  0008               	return
  5711  07FF                     __end_of___awdiv:	
  5712                           
  5713                           	psect	text32
  5714  03CE                     __ptext32:	
  5715 ;; *************** function _countColor *****************
  5716 ;; Defined at:
  5717 ;;		line 396 in file "Othello.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  color           1    wreg     PTR unsigned char 
  5720 ;;		 -> RedPos(8), GreenPos(8), AllPos(8), 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  color           1    3[BANK0 ] PTR unsigned char 
  5723 ;;		 -> RedPos(8), GreenPos(8), AllPos(8), 
  5724 ;;  i               1    1[BANK0 ] unsigned char 
  5725 ;;  temp            1    2[BANK0 ] unsigned char 
  5726 ;;  count           1    0[BANK0 ] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      unsigned char 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5736 ;;      Params:         0       0       0       0       0
  5737 ;;      Locals:         0       4       0       0       0
  5738 ;;      Temps:          2       0       0       0       0
  5739 ;;      Totals:         2       4       0       0       0
  5740 ;;Total ram usage:        6 bytes
  5741 ;; Hardware stack levels used:    1
  5742 ;; Hardware stack levels required when called:    1
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_main
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           
  5751                           ;psect for function _countColor
  5752  03CE                     _countColor:	
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in _countColor: [wreg-fsr0h+status,2+status,0]
  5756                           ;countColor@color stored from wreg
  5757  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  5758  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  5759  03D0  00A3               	movwf	countColor@color
  5760                           
  5761                           ;Othello.c: 397: unsigned char count = 0;
  5762  03D1  01A0               	clrf	countColor@count
  5763                           
  5764                           ;Othello.c: 398: unsigned char temp = 0;
  5765  03D2  01A2               	clrf	countColor@temp
  5766                           
  5767                           ;Othello.c: 399: for(unsigned char i = 0; i < 8; i++) {
  5768  03D3  01A1               	clrf	countColor@i
  5769  03D4  3008               	movlw	8
  5770  03D5  0221               	subwf	countColor@i,w
  5771  03D6  1803               	btfsc	3,0
  5772  03D7  2BF7               	goto	l2323
  5773  03D8                     l2315:	
  5774                           
  5775                           ;Othello.c: 400: temp = color[i];
  5776  03D8  0821               	movf	countColor@i,w
  5777  03D9  0723               	addwf	countColor@color,w
  5778  03DA  00F5               	movwf	??_countColor
  5779  03DB  0875               	movf	??_countColor,w
  5780  03DC  0084               	movwf	4
  5781  03DD  1383               	bcf	3,7	;select IRP bank0
  5782  03DE  0800               	movf	0,w
  5783  03DF                     L7:	
  5784  03DF  00F6               	movwf	??_countColor+1
  5785  03E0  0876               	movf	??_countColor+1,w
  5786  03E1  00A2               	movwf	countColor@temp
  5787  03E2  0822               	movf	countColor@temp,w
  5788  03E3  1903               	btfsc	3,2
  5789  03E4  2BEF               	goto	l2319
  5790                           
  5791                           ;Othello.c: 402: count += temp & 0x01;
  5792                           
  5793                           ;Othello.c: 401: while(temp != 0) {
  5794  03E5  0822               	movf	countColor@temp,w
  5795  03E6  3901               	andlw	1
  5796  03E7  00F5               	movwf	??_countColor
  5797  03E8  0875               	movf	??_countColor,w
  5798  03E9  07A0               	addwf	countColor@count,f
  5799                           
  5800                           ;Othello.c: 403: temp = temp >> 1;
  5801  03EA  0822               	movf	countColor@temp,w
  5802  03EB  00F5               	movwf	??_countColor
  5803  03EC  1003               	clrc
  5804  03ED  0C75               	rrf	??_countColor,w
  5805  03EE  2BDF               	goto	L7
  5806  03EF                     l2319:	
  5807  03EF  3001               	movlw	1
  5808  03F0  00F5               	movwf	??_countColor
  5809  03F1  0875               	movf	??_countColor,w
  5810  03F2  07A1               	addwf	countColor@i,f
  5811  03F3  3008               	movlw	8
  5812  03F4  0221               	subwf	countColor@i,w
  5813  03F5  1C03               	skipc
  5814  03F6  2BD8               	goto	l2315
  5815  03F7                     l2323:	
  5816                           
  5817                           ;Othello.c: 404: }
  5818                           ;Othello.c: 405: }
  5819                           ;Othello.c: 406: return count;
  5820  03F7  0820               	movf	countColor@count,w
  5821  03F8  0008               	return
  5822  03F9                     __end_of_countColor:	
  5823                           
  5824                           	psect	text33
  5825  0C44                     __ptext33:	
  5826 ;; *************** function _checkFullBoard *****************
  5827 ;; Defined at:
  5828 ;;		line 388 in file "Othello.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;  i               1    6[COMMON] unsigned char 
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1    wreg      unsigned char 
  5835 ;; Registers used:
  5836 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5842 ;;      Params:         0       0       0       0       0
  5843 ;;      Locals:         1       0       0       0       0
  5844 ;;      Temps:          1       0       0       0       0
  5845 ;;      Totals:         2       0       0       0       0
  5846 ;;Total ram usage:        2 bytes
  5847 ;; Hardware stack levels used:    1
  5848 ;; Hardware stack levels required when called:    1
  5849 ;; This function calls:
  5850 ;;		Nothing
  5851 ;; This function is called by:
  5852 ;;		_main
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _checkFullBoard
  5858  0C44                     _checkFullBoard:	
  5859                           
  5860                           ;Othello.c: 389: for(unsigned char i = 0; i < 8; i++) {
  5861                           
  5862                           ;incstack = 0
  5863                           ; Regs used in _checkFullBoard: [wreg-fsr0h+status,2+status,0]
  5864  0C44  01F6               	clrf	checkFullBoard@i
  5865  0C45  3008               	movlw	8
  5866  0C46  0276               	subwf	checkFullBoard@i,w
  5867  0C47  1803               	btfsc	3,0
  5868  0C48  2C5A               	goto	l2305
  5869  0C49                     l2295:	
  5870                           
  5871                           ;Othello.c: 390: if(AllPos[i] != 0xFF)
  5872  0C49  0876               	movf	checkFullBoard@i,w
  5873  0C4A  3E46               	addlw	(low (_AllPos| 0))& (0+255)
  5874  0C4B  0084               	movwf	4
  5875  0C4C  1383               	bcf	3,7	;select IRP bank0
  5876  0C4D  0A00               	incf	0,w
  5877  0C4E  1903               	btfsc	3,2
  5878  0C4F  2C52               	goto	l2301
  5879                           
  5880                           ;Othello.c: 391: return 0;
  5881  0C50  3000               	movlw	0
  5882  0C51  0008               	return
  5883  0C52                     l2301:	
  5884  0C52  3001               	movlw	1
  5885  0C53  00F5               	movwf	??_checkFullBoard
  5886  0C54  0875               	movf	??_checkFullBoard,w
  5887  0C55  07F6               	addwf	checkFullBoard@i,f
  5888  0C56  3008               	movlw	8
  5889  0C57  0276               	subwf	checkFullBoard@i,w
  5890  0C58  1C03               	skipc
  5891  0C59  2C49               	goto	l2295
  5892  0C5A                     l2305:	
  5893                           
  5894                           ;Othello.c: 392: }
  5895                           ;Othello.c: 393: return 1;
  5896  0C5A  3001               	movlw	1
  5897  0C5B  0008               	return
  5898  0C5C                     __end_of_checkFullBoard:	
  5899                           
  5900                           	psect	text34
  5901  0C74                     __ptext34:	
  5902 ;; *************** function _interrupt_handler *****************
  5903 ;; Defined at:
  5904 ;;		line 66 in file "Othello.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;		None
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;		None
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  1    wreg      void 
  5911 ;; Registers used:
  5912 ;;		wreg, status,2, status,0
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5918 ;;      Params:         0       0       0       0       0
  5919 ;;      Locals:         0       0       0       0       0
  5920 ;;      Temps:          5       0       0       0       0
  5921 ;;      Totals:         5       0       0       0       0
  5922 ;;Total ram usage:        5 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		Interrupt level 1
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _interrupt_handler
  5933  0C74                     _interrupt_handler:	
  5934                           
  5935                           ;Othello.c: 67: if(TMR1IF == 1) {
  5936  0C74  1C0C               	btfss	12,0	;volatile
  5937  0C75  2C82               	goto	i1l169
  5938                           
  5939                           ;Othello.c: 68: TMR1IF = 0;
  5940  0C76  100C               	bcf	12,0	;volatile
  5941                           
  5942                           ;Othello.c: 70: if(LCDStateCount > 8) {
  5943  0C77  3009               	movlw	9
  5944  0C78  0277               	subwf	_LCDStateCount,w
  5945  0C79  1C03               	skipc
  5946  0C7A  2C7E               	goto	i1l2339
  5947                           
  5948                           ;Othello.c: 71: LCDNextState = 1;
  5949  0C7B  01DE               	clrf	_LCDNextState
  5950  0C7C  0ADE               	incf	_LCDNextState,f
  5951                           
  5952                           ;Othello.c: 72: LCDStateCount = 0;
  5953  0C7D  01F7               	clrf	_LCDStateCount
  5954  0C7E                     i1l2339:	
  5955                           
  5956                           ;Othello.c: 73: }
  5957                           ;Othello.c: 74: LCDStateCount++;
  5958  0C7E  3001               	movlw	1
  5959  0C7F  00F0               	movwf	??_interrupt_handler
  5960  0C80  0870               	movf	??_interrupt_handler,w
  5961  0C81  07F7               	addwf	_LCDStateCount,f
  5962  0C82                     i1l169:	
  5963  0C82  0874               	movf	??_interrupt_handler+4,w
  5964  0C83  00FF               	movwf	127
  5965  0C84  0873               	movf	??_interrupt_handler+3,w
  5966  0C85  008A               	movwf	10
  5967  0C86  0872               	movf	??_interrupt_handler+2,w
  5968  0C87  0084               	movwf	4
  5969  0C88  0E71               	swapf	(??_interrupt_handler+1)^(0+-128),w
  5970  0C89  0083               	movwf	3
  5971  0C8A  0EFE               	swapf	126,f
  5972  0C8B  0E7E               	swapf	126,w
  5973  0C8C  0009               	retfie
  5974  0C8D                     __end_of_interrupt_handler:	
  5975  007E                     btemp	set	126	;btemp
  5976  007E                     wtemp	set	126
  5977  007E                     wtemp0	set	126
  5978  0080                     wtemp1	set	128
  5979  0082                     wtemp2	set	130
  5980  0084                     wtemp3	set	132
  5981  0086                     wtemp4	set	134
  5982  0088                     wtemp5	set	136
  5983  007F                     wtemp6	set	127
  5984  007E                     ttemp	set	126
  5985  007E                     ttemp0	set	126
  5986  0081                     ttemp1	set	129
  5987  0084                     ttemp2	set	132
  5988  0087                     ttemp3	set	135
  5989  007F                     ttemp4	set	127
  5990  007E                     ltemp	set	126
  5991  007E                     ltemp0	set	126
  5992  0082                     ltemp1	set	130
  5993  0086                     ltemp2	set	134
  5994  0080                     ltemp3	set	128
  5995                           
  5996                           	psect	intentry
  5997  0004                     __pintentry:	
  5998                           ;incstack = 0
  5999                           ; Regs used in _interrupt_handler: [wreg+status,2+status,0]
  6000                           
  6001  0004                     interrupt_function:	
  6002  007E                     saved_w	set	btemp
  6003  0004  00FE               	movwf	btemp
  6004  0005  0E03               	swapf	3,w
  6005  0006  00F1               	movwf	??_interrupt_handler+1
  6006  0007  0804               	movf	4,w
  6007  0008  00F2               	movwf	??_interrupt_handler+2
  6008  0009  080A               	movf	10,w
  6009  000A  00F3               	movwf	??_interrupt_handler+3
  6010  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6011  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6012  000D  087F               	movf	btemp+1,w
  6013  000E  00F4               	movwf	??_interrupt_handler+4
  6014  000F  120A  158A  2C74   	ljmp	_interrupt_handler


Data Sizes:
    Strings     332
    Constant    16
    Data        24
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     38      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    countColor@color	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), AllPos(BANK0[8]), 

    playPeice@otherColor	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), 

    playPeice@ownColor	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), 

    drawFrom@otherColor	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), 

    drawFrom@ownColor	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), 

    legalPlay@ownColor	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), 

    legalPlay@otherColor	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), 

    checkPositionFree@colorArray	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), AllPos(BANK0[8]), 

    OutCharMsg@string	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_26(CODE[51]), STR_6(CODE[51]), STR_1(CODE[10]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_33(CODE[17]), STR_32(CODE[5]), STR_31(CODE[12]), STR_30(CODE[10]), 
		 -> STR_29(CODE[8]), STR_28(CODE[6]), STR_27(CODE[10]), STR_25(CODE[13]), 
		 -> STR_24(CODE[13]), STR_23(CODE[9]), STR_22(CODE[14]), STR_21(CODE[6]), 
		 -> STR_20(CODE[6]), STR_19(CODE[9]), STR_18(CODE[14]), STR_17(CODE[11]), 
		 -> STR_16(CODE[10]), STR_15(CODE[12]), STR_14(CODE[11]), STR_13(CODE[14]), 
		 -> STR_12(CODE[8]), STR_11(CODE[6]), STR_10(CODE[14]), STR_9(CODE[14]), 
		 -> STR_8(CODE[13]), STR_7(CODE[11]), STR_5(CODE[10]), STR_4(CODE[14]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_DelayMs
    _main->_checkFullBoard
    _main->_countColor
    _main->_getKeypadKey
    _main->_getKeypadPressed
    _matrixSetup->_I2C_SendByte
    _lcd_init->_DelayMs
    _lcd_clear->_DelayMs
    _sendMatrix->_checkPositionFree
    _OutCharMsg->_OutChar
    _playPeice->_checkPositionFree
    _drawFrom->_checkPositionFree
    _legalPlay->_checkPositionFree
    _lcd_goto->_DelayMs
    _drawMatrix->_I2C_SendByte
    _I2C_SendAddress->_I2C_SendByte
    _lcd_write->_Delay20us
    _LCD_strobe->_Delay20us

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_playPeice
    _lcd_init->_lcd_write
    _lcd_clear->_lcd_write
    _sendMatrix->_checkPositionFree
    _playPeice->_drawFrom
    _drawFrom->_checkPositionFree
    _legalPlay->_checkPositionFree
    _lcd_puts->_lcd_write
    _lcd_goto->_lcd_write
    _I2C_Stop->_I2C_Idle_Status
    _I2C_Start->_I2C_Idle_Status
    _displayNuber->___awdiv
    _lcd_putch->_lcd_write

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   29167
                                             31 BANK0      7     7      0
                            _DelayMs
                            _OutChar
                         _OutCharMsg
                     _checkFullBoard
                         _countColor
                       _displayNuber
                         _drawMatrix
                       _getKeypadKey
                   _getKeypadPressed
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
                          _legalPlay
                          _playPeice
                         _sendMatrix
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3422
                     _I2C_Initialize
                           _lcd_init
                        _matrixSetup
 ---------------------------------------------------------------------------------
 (2) _matrixSetup                                          0     0      0     432
                    _I2C_SendAddress
                       _I2C_SendByte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0    2990
                                              3 BANK0      1     1      0
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (3) _tmr0_init                                            1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            0     0      0    1495
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           6     5      1    3341
                                              6 BANK0      6     5      1
                            _OutChar
                         _OutCharMsg
                  _checkPositionFree
 ---------------------------------------------------------------------------------
 (2) _OutCharMsg                                           2     0      2     318
                                              0 BANK0      2     0      2
                            _OutChar
 ---------------------------------------------------------------------------------
 (3) _OutChar                                              1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _playPeice                                           14    11      3    6742
                                             17 BANK0     14    11      3
                  _checkPositionFree
                           _drawFrom
 ---------------------------------------------------------------------------------
 (2) _drawFrom                                            11     6      5    2871
                                              6 BANK0     11     6      5
                  _checkPositionFree
 ---------------------------------------------------------------------------------
 (1) _legalPlay                                           11     8      3    3468
                                              6 BANK0     11     8      3
                  _checkPositionFree
 ---------------------------------------------------------------------------------
 (2) _checkPositionFree                                    8     6      2    2139
                                              5 COMMON     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     1      2    3207
                                              3 BANK0      3     1      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0    1526
                                              3 BANK0      2     2      0
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     663
                                              5 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getKeypadPressed                                     4     4      0     136
                                              5 COMMON     2     2      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _getKeypadKey                                         5     5      0     182
                                              5 COMMON     2     2      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _drawMatrix                                           2     2      0     562
                                              8 BANK0      2     2      0
                    _I2C_SendAddress
                       _I2C_SendByte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                    _I2C_Idle_Status
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                    _I2C_Idle_Status
 ---------------------------------------------------------------------------------
 (4) _I2C_Idle_Status                                      8     8      0       0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) _I2C_SendAddress                                      2     1      1     401
                                              0 BANK0      2     1      1
                       _I2C_SendByte
 ---------------------------------------------------------------------------------
 (3) _I2C_SendByte                                         2     2      0      31
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _displayNuber                                         3     3      0    2111
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (1) _lcd_putch                                            2     2      0     863
                                              3 BANK0      2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            3     2      1     832
                                              0 BANK0      3     2      1
                          _Delay20us
                         _LCD_strobe
 ---------------------------------------------------------------------------------
 (4) _LCD_strobe                                           0     0      0      46
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      46
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     599
                                              5 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _countColor                                           6     6      0     453
                                              5 COMMON     2     2      0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _checkFullBoard                                       2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _OutChar
   _OutCharMsg
     _OutChar
   _checkFullBoard
   _countColor
   _displayNuber
     ___awdiv
     ___awmod
     _lcd_putch
       _lcd_write
         _Delay20us
         _LCD_strobe
           _Delay20us
   _drawMatrix
     _I2C_SendAddress
       _I2C_SendByte
     _I2C_SendByte
     _I2C_Start
       _I2C_Idle_Status
     _I2C_Stop
       _I2C_Idle_Status
   _getKeypadKey
   _getKeypadPressed
   _lcd_clear
     _DelayMs
     _lcd_write
       _Delay20us
       _LCD_strobe
         _Delay20us
   _lcd_goto
     _DelayMs
     _lcd_write
       _Delay20us
       _LCD_strobe
         _Delay20us
   _lcd_putch
     _lcd_write
       _Delay20us
       _LCD_strobe
         _Delay20us
   _lcd_puts
     _lcd_write
       _Delay20us
       _LCD_strobe
         _Delay20us
   _legalPlay
     _checkPositionFree
   _playPeice
     _checkPositionFree
     _drawFrom
       _checkPositionFree
   _sendMatrix
     _OutChar
     _OutCharMsg
       _OutChar
     _checkPositionFree
   _setup
     _I2C_Initialize
     _lcd_init
       _DelayMs
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
           _LCD_strobe
             _Delay20us
       _lcd_write
         _Delay20us
         _LCD_strobe
           _Delay20us
       _tmr0_init
     _matrixSetup
       _I2C_SendAddress
         _I2C_SendByte
       _I2C_SendByte
       _I2C_Start
         _I2C_Idle_Status
       _I2C_Stop
         _I2C_Idle_Status

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     26      41       5       81.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4A      12        0.0%
ABS                  0      0      4A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri May 20 02:15:31 2016

                          pc 0002           __size_of_I2C_Start 000E                  __CFG_CP$OFF 0000  
                _SSPSTATbits 0094                           l32 0BEB                 ___awdiv@sign 0025  
                         fsr 0004                  drawFrom@col 0026                ?_displayNuber 0070  
                drawFrom@row 0030                          l206 0E54                          l225 0FA3  
                        l405 0BBD                          l238 0CB9                          l246 0726  
                        l423 0BCB                          l263 0EF3                          l178 0B75  
                        l435 0C1F                          l269 05AB                          _GIE 005F  
                        _RA0 0028                          _RA1 0029                          _RA2 002A  
                        _RA3 002B                          _RA4 002C                          _RA5 002D  
                        _RD1 0041                 __CFG_CPD$OFF 0000                          fsr0 0004  
                        indf 0000                 ___awmod@sign 0025                 __CFG_FOSC$HS 0000  
                ?_LCD_strobe 0070                 __CFG_LVP$OFF 0000                         l3003 05D8  
                       l2301 0C52                         l3013 0622                         l3021 063A  
                       l2151 0FD6                         l2143 0FBC                         l3015 05BD  
                       l2305 0C5A                         l2161 0FFE                         l3017 062F  
                       l3009 0601                         l3025 0643                         l3121 0177  
                       l3113 0162                         l3105 0144                         l2323 03F7  
                       l2315 03D8                         l2147 0FC9                         l2139 0FAF  
                       l3131 019A                         l3035 0037                         l2157 0FE3  
                       l3133 01B0                         l3053 0091                         l3037 0044  
                       l2319 03EF                         l2159 0FF1                         l3215 030F  
                       l3207 02D6                         l3127 0191                         l3241 0329  
                       l3153 0203                         l3145 01D8                         l3129 0198  
                       l3081 00F8                         l3233 00DB                         l3057 00A2  
                       l2611 0D84                         l3235 03B2                         l3219 031F  
                       l3163 022D                         l3139 01C7                         l3261 037A  
                       l3245 032F                         l3093 0113                         l3085 00FE  
                       l3077 00EF                         l2295 0C49                         l2703 07B0  
                       l3183 0285                         l3175 025A                         l2721 07D1  
                       l3273 03B1                         l3265 0394                         l3257 0360  
                       l3185 028E                         l3169 0249                         l2731 07F2  
                       l2619 0D9C                         l3267 039F                         l3187 0296  
                       l2709 07BB                         l1837 0BB2                         l1845 0BC0  
                       l2901 06F6                         l3269 03A6                         l2735 07FA  
                       l2727 07E7                         l2719 07C3                         l2751 0EB6  
                       l2761 0ECA                         l2747 0EAF                         l2843 0E34  
                       l2773 0EEB                         l2765 0ED8                         l2917 0CCD  
                       l2685 0C8D                         l2759 0EBC                         l2919 0CD6  
                       l1799 0BE2                         l2783 0CD8                         l2871 0687  
                       l2863 0679                         l2769 0EE3                         l2953 077C  
                       l2961 0783                         l2881 06A6                         l2947 0753  
                       l2963 0738                         l2939 072D                         l2965 078E  
                       l2973 07A2                         l2877 0691                         l2887 06CE  
                       l2895 06E0                         l2969 0799                         l2889 06D0  
                       l2995 05B2                         STR_1 051F                         STR_2 04C6  
                       STR_3 053D                         STR_4 049E                         STR_5 0515  
                       STR_6 0422                         STR_7 04F5                         STR_8 04AC  
                       STR_9 0466                         _BRGH 04C2                         _T0IF 005A  
                       _CREN 00C4                         u3404 064D                         u3405 064A  
                       u2710 0BAC                         u2720 0BAD                         u2660 0D81  
                       u2740 0DD8                         u2750 0DD9                         u2734 0DB2  
                       u3294 0596                         u2655 0D73                         u2735 0DAF  
                       u3295 0593                         u2680 0D99                         u2835 07C6  
                       _PEIE 005E                         u2774 0EFF                         u2855 07D2  
                       u2935 0EBF                         u2775 0EFC                         u2784 0F17  
                       u2865 07DE                         u2785 0F14                         _KEYS 0412  
                       u2875 07E8                         u2955 0ED0                         _RCIF 0065  
                       u2965 0ED9                         _TMR0 0001                         _SPEN 00C7  
                       _TXEN 04C5                         _TXIF 0064                         _SYNC 04C4  
               __CFG_WRT$OFF 0000                _LCDStateCount 0077                         _main 002A  
                       btemp 007E             __end_of_I2C_Stop 0BD1                         ltemp 007E  
                       start 0012                         ttemp 007E                         wtemp 007E  
              __CFG_IESO$OFF 0000        __size_of_I2C_SendByte 0015              __end_of_DelayMs 0BF4  
            ?_checkFullBoard 0070                __CFG_MCLRE$ON 0000         checkPositionFree@col 0075  
       checkPositionFree@row 0024              __end_of_OutChar 0B7C               ??_displayNuber 0028  
                      ?_main 0070                        _BCLIF 006B              __end_of___awdiv 07FF  
                      STR_10 0482                        STR_11 0557                        STR_20 0563  
                      STR_12 054F                        STR_21 055D                        STR_13 0474  
                      STR_22 0490                        STR_30 050B                        STR_14 0500  
                      STR_23 0546                        STR_15 04DE                        STR_31 04D2  
                      STR_32 0569                        STR_16 0533                        STR_24 04B9  
                      _BRG16 0C3B                        STR_25 04B9                        STR_17 04EA  
                      STR_33 0455                __CFG_WDTE$OFF 0000                        STR_26 0422  
                      STR_18 0490                        STR_19 0546                        STR_27 0529  
                      STR_28 0557              __end_of___awmod 0EF0                        STR_29 054F  
                      _ANSEL 0188              ___awdiv@divisor 0020                        i1l169 0C82  
            ___awdiv@counter 0024                        _RCREG 001A                        _SPBRG 0099  
                      _PORTA 0005                        _PORTB 0006                        _TRISA 0085  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
                      _SSPIF 0063             _getKeypadPressed 0CB2                        _TXREG 0019  
 __size_of_checkPositionFree 0039               __CFG_FCMEN$OFF 0000                        _nRBPU 040F  
               ?_matrixSetup 0070                        _color 0060                        _setup 0DDE  
               _I2C_SendByte 0C19            __end_of_I2C_Start 0BC0               __CFG_BOREN$OFF 0000  
                      pclath 000A                        ltemp0 007E                        ltemp1 0082  
                      ltemp2 0086                        ltemp3 0080                  countColor@i 0021  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F                DelayMs@millis 0075             ?_I2C_SendAddress 0020  
      getKeypadPressed@temp2 0020                 __end_of_KEYS 0422              __initialization 0015  
        __size_of_LCD_strobe 000A                 __end_of_main 03CE           __size_of_Delay20us 000A  
               legalPlay@col 0026                 legalPlay@row 002C         __end_of_getKeypadKey 1000  
                     ??_main 003F        checkPositionFree@temp 0025              getKeypadKey@col 0022  
           ___awdiv@dividend 0022                       ?_setup 0070                       _ANSELH 0189  
                     i1l2339 0C7E                    ??_DelayMs 0077                       _TMR1GE 0086  
                     _TMR1IE 0460                       _TMR1IF 0060                       _TMR1CS 0081  
                     _TMR1ON 0080                       _SSPADD 0093                       _TRISC3 043B  
                     _TRISC4 043C                       _SSPCON 0014                       _SSPBUF 0013  
                     _AllPos 0046               __CFG_PWRTE$OFF 0000               drawMatrix@temp 0029  
                 _OutCharMsg 0C8D                       _RedPos 0056                    ??_OutChar 0075  
           __end_of_drawFrom 0F41             __end_of_lcd_init 0F9B             __end_of_lcd_goto 0C44  
           __end_of_lcd_puts 0D01                    ??___awdiv 0075                    ??___awmod 0075  
           ___awdiv@quotient 0026                       _played 0078              ___awmod@divisor 0020  
            ___awmod@counter 0024      __size_of_I2C_Initialize 0013                    ?_I2C_Stop 0070  
                     saved_w 007E            __end_of_Delay20us 0B8E      __end_of__initialization 0026  
       __end_of_displayNuber 0D37             OutCharMsg@string 0020                lcd_write@mode 0022  
             __pcstackCOMMON 0070                 __pidataBANK0 0C5C            I2C_SendAddress@rw 0020  
              __end_of_setup 0E18                legalPlay@line 002B                   ??_I2C_Stop 0075  
               ??_LCD_strobe 0077           __size_of_lcd_clear 0012           __size_of_lcd_putch 000C  
         __size_of_lcd_write 0038           __size_of_legalPlay 00A3                      ??_setup 0077  
                 __pbssBANK0 005E         __size_of_matrixSetup 004A     __size_of_I2C_Idle_Status 0036  
           ??_checkFullBoard 0075             getKeypadKey@temp 0021     __end_of_getKeypadPressed 0CD8  
                ?_OutCharMsg 0020        __size_of_getKeypadKey 0065                   __pmaintext 002A  
         __size_of_playPeice 00EC           __end_of_LCD_strobe 0B98                  sendMatrix@c 002A  
                sendMatrix@r 002B                playPeice@line 0039                   __pintentry 0004  
         __size_of_tmr0_init 0008                      _T1CKPS0 0084                      _T1CKPS1 0085  
                 _drawMatrix 0E18          legalPlay@otherColor 0028                      _SSPCON2 0091  
                  ?_drawFrom 0026                    ?_lcd_init 0070                    ?_lcd_goto 0070  
                    _SSPSTAT 0094                    ?_lcd_puts 0023                   __stringtab 0400  
               _getKeypadKey 0F9B                      _DelayMs 0BE2                   _countColor 03CE  
                  _I2C_Start 0BB2                      _OutChar 0B74                OutChar@outchr 0075  
          __end_of_lcd_clear 0C06            __end_of_lcd_putch 0BA4                      ___awdiv 07A4  
                    ___awmod 0EA3            __end_of_lcd_write 0DA5            __end_of_legalPlay 07A4  
             _I2C_Initialize 0C06                      __ptext1 0DDE                      __ptext2 0E59  
                    __ptext3 0F41                      __ptext4 0B7C                      __ptext5 0BF4  
                    __ptext6 0C06                      __ptext7 065A                      __ptext8 0C8D  
                    __ptext9 0B74             ___awmod@dividend 0022  checkPositionFree@colorArray 0076  
        __size_of_OutCharMsg 0025        __size_of_displayNuber 0036                      main@col 0045  
                 ??_drawFrom 002B                   ??_lcd_init 0023                      main@row 0044  
                 ??_lcd_goto 0023            __end_of_playPeice 065A                   ??_lcd_puts 0025  
       end_of_initialization 0026                   _sendMatrix 065A            __end_of_tmr0_init 0B84  
         drawFrom@otherColor 002A               lcd_puts@string 0023                   ?_I2C_Start 0070  
          ??_I2C_Idle_Status 0020       __end_of_I2C_Initialize 0C19     __size_of_I2C_SendAddress 000E  
               __pstringtext 0400            playPeice@ownColor 0032                 _displayNuber 0D01  
                ?_drawMatrix 0070                 _LCDNextState 005E            __size_of_I2C_Stop 0011  
                  _Delay20us 0B84                  ?_countColor 0070                   legalPlay@c 002E  
                 legalPlay@r 002D              ?_I2C_Initialize 0070          start_initialization 0015  
       getKeypadPressed@temp 0021               legalPlay@nextC 0030               legalPlay@nextR 002F  
                ?_sendMatrix 0026                   ?_Delay20us 0070                  ??_I2C_Start 0075  
          legalPlay@ownColor 0027                 ??_OutCharMsg 0076            ?_getKeypadPressed 0070  
        __size_of_drawMatrix 0041           ??_getKeypadPressed 0075                   init_fetch0 0BD1  
                __pdataBANK0 0046             drawFrom@ownColor 0029            ??_I2C_SendAddress 0077  
        __size_of_countColor 002B                  __pbssCOMMON 0077                    ___latbits 0002  
              __pcstackBANK0 0020                ??_matrixSetup 0077           __end_of_OutCharMsg 0CB2  
              ?_I2C_SendByte 0070            getKeypadKey@temp2 0020                     ?_DelayMs 0075  
          __size_of_drawFrom 0051            __size_of_lcd_init 005A            __size_of_lcd_goto 0016  
          __size_of_lcd_puts 0029                     ?_OutChar 0070                   playPeice@c 003E  
                 playPeice@r 003D                 playPeice@col 0031                 playPeice@row 003C  
                   ?___awdiv 0020                     ?___awmod 0020                    _lcd_clear 0BF4  
        __size_of_sendMatrix 00A7             I2C_SendByte@data 0076               playPeice@nextC 003B  
             playPeice@nextR 003A                    _lcd_putch 0B98                    _lcd_write 0D6D  
                  _legalPlay 0701            _interrupt_handler 0C74           sendMatrix@PointerC 0026  
         sendMatrix@PointerR 0029                     _I2C_Stop 0BC0           ?_interrupt_handler 0070  
             ??_I2C_SendByte 0075               __size_of_setup 003A              _I2C_Idle_Status 0D37  
        ??_interrupt_handler 0070            interrupt_function 0004                  ??_Delay20us 0075  
                   _LCDState 005F                    _playPeice 056E          __end_of_matrixSetup 0EA3  
                  _tmr0_init 0B7C       I2C_SendAddress@address 0021      __size_of_checkFullBoard 0018  
                 ?_lcd_clear 0070    __end_of_interrupt_handler 0C8D                   ?_lcd_putch 0070  
                __stringbase 0412                   ?_lcd_write 0020                    drawFrom@c 0028  
                  drawFrom@r 0027                   ?_legalPlay 0026                 ??_drawMatrix 0028  
                   _GreenPos 004E                 ??_countColor 0075             __size_of_DelayMs 0012  
                 ?_playPeice 0031                   ?_tmr0_init 0070             ??_I2C_Initialize 0075  
           __size_of_OutChar 0008           __end_of_drawMatrix 0E59             __size_of___awdiv 005B  
           __size_of___awmod 004D           __end_of__stringtab 0412      __end_of_I2C_Idle_Status 0D6D  
         __end_of_countColor 03F9                     __ptext10 056E                     __ptext11 0EF0  
                   __ptext20 0BC0                     __ptext12 0701                     __ptext21 0BB2  
                   __ptext13 0DA5                     __ptext30 0EA3                     __ptext22 0D37  
                   __ptext14 0CD8                     __ptext31 07A4                     __ptext23 0BA4  
                   __ptext15 0C2E                     __ptext32 03CE                     __ptext24 0C19  
                   __ptext16 0BE2                     __ptext33 0C44                     __ptext25 0D01  
                   __ptext17 0CB2                     __ptext34 0C74                     __ptext26 0B98  
                   __ptext18 0F9B                     __ptext27 0D6D                     __ptext19 0E18  
                   __ptext28 0B8E                     __ptext29 0B84            __CFG_BOR4V$BOR21V 0000  
                _matrixSetup 0E59              checkFullBoard@i 0076                     _drawFrom 0EF0  
                   _lcd_init 0F41                     _lcd_goto 0C2E                 ??_sendMatrix 0027  
                   _lcd_puts 0CD8                __size_of_main 03A4           lcd_putch@character 0024  
            _I2C_SendAddress 0BA4              displayNuber@num 002A         __end_of_I2C_SendByte 0C2E  
                ??_lcd_clear 0077   __size_of_interrupt_handler 0019                     main@temp 0042  
            countColor@color 0023           __end_of_sendMatrix 0701              countColor@count 0020  
                ??_lcd_putch 0023                  ??_lcd_write 0021                  ??_legalPlay 0029  
  __size_of_getKeypadPressed 0026                   _LCD_strobe 0B8E                     init_ram0 0BD5  
          _checkPositionFree 0DA5                ?_getKeypadKey 0070                     intlevel1 0000  
              Delay20us@next 0076           ?_checkPositionFree 0075                  ??_playPeice 0034  
                ??_tmr0_init 0075                    stringcode 040A          ??_checkPositionFree 0020  
             _checkFullBoard 0C44               countColor@temp 0022          playPeice@otherColor 0033  
                 _OPTION_REG 0081             lcd_goto@position 0024             ?_I2C_Idle_Status 0070  
                   stringtab 0400    __end_of_checkPositionFree 0DDE                  _SSPCON2bits 0091  
             ??_getKeypadKey 0075      __end_of_I2C_SendAddress 0BB2             lcd_write@CmdChar 0020  
     __end_of_checkFullBoard 0C5C  
