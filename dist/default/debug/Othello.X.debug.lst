

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri May 20 01:32:49 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281                           
   282                           	psect	idataBANK0
   283  0108                     __pidataBANK0:	
   284                           
   285                           ;initializer for _AllPos
   286  0108  3400               	retlw	0
   287  0109  3400               	retlw	0
   288  010A  3400               	retlw	0
   289  010B  3418               	retlw	24
   290  010C  3418               	retlw	24
   291  010D  3400               	retlw	0
   292  010E  3400               	retlw	0
   293  010F  3400               	retlw	0
   294                           
   295                           ;initializer for _GreenPos
   296  0110  3400               	retlw	0
   297  0111  3400               	retlw	0
   298  0112  3400               	retlw	0
   299  0113  3408               	retlw	8
   300  0114  3410               	retlw	16
   301  0115  3400               	retlw	0
   302  0116  3400               	retlw	0
   303  0117  3400               	retlw	0
   304                           
   305                           ;initializer for _RedPos
   306  0118  3400               	retlw	0
   307  0119  3400               	retlw	0
   308  011A  3400               	retlw	0
   309  011B  3410               	retlw	16
   310  011C  3408               	retlw	8
   311  011D  3400               	retlw	0
   312  011E  3400               	retlw	0
   313  011F  3400               	retlw	0
   314                           
   315                           	psect	stringtext
   316  0800                     __pstringtext:	
   317  0800                     stringtab:	
   318  0800                     __stringtab:	
   319                           
   320                           ;	String table - string pointers are 2 bytes each
   321  0800  1BFF               	btfsc	btemp+1,7
   322  0801  280A               	ljmp	stringcode
   323  0802  1383               	bcf	3,7
   324  0803  187F               	btfsc	btemp+1,0
   325  0804  1783               	bsf	3,7
   326  0805  0800               	movf	0,w
   327  0806  0A84               	incf	4,f
   328  0807  1903               	skipnz
   329  0808  0AFF               	incf	btemp+1,f
   330  0809  0008               	return
   331  080A                     stringcode:	
   332  080A  087F               	movf	btemp+1,w
   333  080B  397F               	andlw	127
   334  080C  008A               	movwf	10
   335  080D  0804               	movf	4,w
   336  080E  0A84               	incf	4,f
   337  080F  1903               	skipnz
   338  0810  0AFF               	incf	btemp+1,f
   339  0811  0082               	movwf	2
   340  0812                     __stringbase:	
   341  0812                     __end_of__stringtab:	
   342  0812                     _KEYS:	
   343  0812  3431               	retlw	49
   344  0813  3432               	retlw	50
   345  0814  3433               	retlw	51
   346  0815  3441               	retlw	65
   347  0816  3434               	retlw	52
   348  0817  3435               	retlw	53
   349  0818  3436               	retlw	54
   350  0819  3442               	retlw	66
   351  081A  3437               	retlw	55
   352  081B  3438               	retlw	56
   353  081C  3439               	retlw	57
   354  081D  3443               	retlw	67
   355  081E  342A               	retlw	42
   356  081F  3430               	retlw	48
   357  0820  3423               	retlw	35
   358  0821  3444               	retlw	68
   359  0822                     __end_of_KEYS:	
   360  0005                     _PORTA	set	5
   361  0006                     _PORTB	set	6
   362  001A                     _RCREG	set	26
   363  0013                     _SSPBUF	set	19
   364  0014                     _SSPCON	set	20
   365  0001                     _TMR0	set	1
   366  0019                     _TXREG	set	25
   367  006B                     _BCLIF	set	107
   368  00C4                     _CREN	set	196
   369  005F                     _GIE	set	95
   370  005E                     _PEIE	set	94
   371  0028                     _RA0	set	40
   372  0029                     _RA1	set	41
   373  002A                     _RA2	set	42
   374  002B                     _RA3	set	43
   375  002C                     _RA4	set	44
   376  002D                     _RA5	set	45
   377  0065                     _RCIF	set	101
   378  0041                     _RD1	set	65
   379  00C7                     _SPEN	set	199
   380  0063                     _SSPIF	set	99
   381  005A                     _T0IF	set	90
   382  0084                     _T1CKPS0	set	132
   383  0085                     _T1CKPS1	set	133
   384  0081                     _TMR1CS	set	129
   385  0086                     _TMR1GE	set	134
   386  0060                     _TMR1IF	set	96
   387  0080                     _TMR1ON	set	128
   388  0064                     _TXIF	set	100
   389  0081                     _OPTION_REG	set	129
   390  0099                     _SPBRG	set	153
   391  0093                     _SSPADD	set	147
   392  0091                     _SSPCON2	set	145
   393  0091                     _SSPCON2bits	set	145
   394  0094                     _SSPSTAT	set	148
   395  0094                     _SSPSTATbits	set	148
   396  0085                     _TRISA	set	133
   397  0086                     _TRISB	set	134
   398  0087                     _TRISC	set	135
   399  0088                     _TRISD	set	136
   400  04C2                     _BRGH	set	1218
   401  04C4                     _SYNC	set	1220
   402  0460                     _TMR1IE	set	1120
   403  043B                     _TRISC3	set	1083
   404  043C                     _TRISC4	set	1084
   405  04C5                     _TXEN	set	1221
   406  040F                     _nRBPU	set	1039
   407  0188                     _ANSEL	set	392
   408  0189                     _ANSELH	set	393
   409  0C3B                     _BRG16	set	3131
   410  0822                     STR_5:	
   411  0822  3421               	retlw	33	;'!'
   412  0823  3420               	retlw	32	;' '
   413  0824  3469               	retlw	105	;'i'
   414  0825  3473               	retlw	115	;'s'
   415  0826  3420               	retlw	32	;' '
   416  0827  3470               	retlw	112	;'p'
   417  0828  346F               	retlw	111	;'o'
   418  0829  3469               	retlw	105	;'i'
   419  082A  346E               	retlw	110	;'n'
   420  082B  3474               	retlw	116	;'t'
   421  082C  3465               	retlw	101	;'e'
   422  082D  3472               	retlw	114	;'r'
   423  082E  342C               	retlw	44	;','
   424  082F  3420               	retlw	32	;' '
   425  0830  342E               	retlw	46	;'.'
   426  0831  3420               	retlw	32	;' '
   427  0832  3469               	retlw	105	;'i'
   428  0833  3473               	retlw	115	;'s'
   429  0834  3420               	retlw	32	;' '
   430  0835  3465               	retlw	101	;'e'
   431  0836  346D               	retlw	109	;'m'
   432  0837  3470               	retlw	112	;'p'
   433  0838  3474               	retlw	116	;'t'
   434  0839  3479               	retlw	121	;'y'
   435  083A  342C               	retlw	44	;','
   436  083B  3420               	retlw	32	;' '
   437  083C  3467               	retlw	103	;'g'
   438  083D  3472               	retlw	114	;'r'
   439  083E  3465               	retlw	101	;'e'
   440  083F  3465               	retlw	101	;'e'
   441  0840  346E               	retlw	110	;'n'
   442  0841  3420               	retlw	32	;' '
   443  0842  3469               	retlw	105	;'i'
   444  0843  3473               	retlw	115	;'s'
   445  0844  3420               	retlw	32	;' '
   446  0845  3427               	retlw	39	;'''
   447  0846  344F               	retlw	79	;'O'
   448  0847  3427               	retlw	39	;'''
   449  0848  342C               	retlw	44	;','
   450  0849  3420               	retlw	32	;' '
   451  084A  3472               	retlw	114	;'r'
   452  084B  3465               	retlw	101	;'e'
   453  084C  3464               	retlw	100	;'d'
   454  084D  3420               	retlw	32	;' '
   455  084E  3469               	retlw	105	;'i'
   456  084F  3473               	retlw	115	;'s'
   457  0850  3420               	retlw	32	;' '
   458  0851  3427               	retlw	39	;'''
   459  0852  3458               	retlw	88	;'X'
   460  0853  3427               	retlw	39	;'''
   461  0854  3400               	retlw	0
   462  0855                     STR_8:	
   463  0855  3450               	retlw	80	;'P'
   464  0856  3472               	retlw	114	;'r'
   465  0857  3465               	retlw	101	;'e'
   466  0858  3473               	retlw	115	;'s'
   467  0859  3473               	retlw	115	;'s'
   468  085A  3420               	retlw	32	;' '
   469  085B  346B               	retlw	107	;'k'
   470  085C  3465               	retlw	101	;'e'
   471  085D  3479               	retlw	121	;'y'
   472  085E  3420               	retlw	32	;' '
   473  085F  3431               	retlw	49	;'1'
   474  0860  342D               	retlw	45	;'-'
   475  0861  3438               	retlw	56	;'8'
   476  0862  3400               	retlw	0
   477  0863                     STR_12:	
   478  0863  3454               	retlw	84	;'T'
   479  0864  346F               	retlw	111	;'o'
   480  0865  3474               	retlw	116	;'t'
   481  0866  3461               	retlw	97	;'a'
   482  0867  346C               	retlw	108	;'l'
   483  0868  3420               	retlw	32	;' '
   484  0869  3450               	retlw	80	;'P'
   485  086A  346C               	retlw	108	;'l'
   486  086B  3461               	retlw	97	;'a'
   487  086C  3479               	retlw	121	;'y'
   488  086D  3465               	retlw	101	;'e'
   489  086E  3464               	retlw	100	;'d'
   490  086F  343A               	retlw	58	;':'
   491  0870  3400               	retlw	0
   492  0871                     STR_9:	
   493  0871  3474               	retlw	116	;'t'
   494  0872  346F               	retlw	111	;'o'
   495  0873  3420               	retlw	32	;' '
   496  0874  3465               	retlw	101	;'e'
   497  0875  346E               	retlw	110	;'n'
   498  0876  3474               	retlw	116	;'t'
   499  0877  3465               	retlw	101	;'e'
   500  0878  3472               	retlw	114	;'r'
   501  0879  3420               	retlw	32	;' '
   502  087A  346D               	retlw	109	;'m'
   503  087B  346F               	retlw	111	;'o'
   504  087C  3476               	retlw	118	;'v'
   505  087D  3465               	retlw	101	;'e'
   506  087E  3400               	retlw	0
   507  087F                     STR_15:	
   508  087F  3450               	retlw	80	;'P'
   509  0880  346C               	retlw	108	;'l'
   510  0881  3465               	retlw	101	;'e'
   511  0882  3461               	retlw	97	;'a'
   512  0883  3473               	retlw	115	;'s'
   513  0884  3465               	retlw	101	;'e'
   514  0885  3420               	retlw	32	;' '
   515  0886  3473               	retlw	115	;'s'
   516  0887  3465               	retlw	101	;'e'
   517  0888  346C               	retlw	108	;'l'
   518  0889  3465               	retlw	101	;'e'
   519  088A  3463               	retlw	99	;'c'
   520  088B  3474               	retlw	116	;'t'
   521  088C  3400               	retlw	0
   522  088D                     STR_3:	
   523  088D  3450               	retlw	80	;'P'
   524  088E  3472               	retlw	114	;'r'
   525  088F  3465               	retlw	101	;'e'
   526  0890  3473               	retlw	115	;'s'
   527  0891  3473               	retlw	115	;'s'
   528  0892  3420               	retlw	32	;' '
   529  0893  3461               	retlw	97	;'a'
   530  0894  346E               	retlw	110	;'n'
   531  0895  3479               	retlw	121	;'y'
   532  0896  3420               	retlw	32	;' '
   533  0897  346B               	retlw	107	;'k'
   534  0898  3465               	retlw	101	;'e'
   535  0899  3479               	retlw	121	;'y'
   536  089A  3400               	retlw	0
   537  089B                     STR_7:	
   538  089B  3447               	retlw	71	;'G'
   539  089C  3472               	retlw	114	;'r'
   540  089D  3465               	retlw	101	;'e'
   541  089E  3465               	retlw	101	;'e'
   542  089F  346E               	retlw	110	;'n'
   543  08A0  3427               	retlw	39	;'''
   544  08A1  3473               	retlw	115	;'s'
   545  08A2  3420               	retlw	32	;' '
   546  08A3  3454               	retlw	84	;'T'
   547  08A4  3475               	retlw	117	;'u'
   548  08A5  3472               	retlw	114	;'r'
   549  08A6  346E               	retlw	110	;'n'
   550  08A7  3400               	retlw	0
   551  08A8                     STR_1:	
   552  08A8  3457               	retlw	87	;'W'
   553  08A9  3465               	retlw	101	;'e'
   554  08AA  346C               	retlw	108	;'l'
   555  08AB  3463               	retlw	99	;'c'
   556  08AC  346F               	retlw	111	;'o'
   557  08AD  346D               	retlw	109	;'m'
   558  08AE  3465               	retlw	101	;'e'
   559  08AF  3420               	retlw	32	;' '
   560  08B0  3474               	retlw	116	;'t'
   561  08B1  346F               	retlw	111	;'o'
   562  08B2  3420               	retlw	32	;' '
   563  08B3  3400               	retlw	0
   564  08B4                     STR_14:	
   565  08B4  3473               	retlw	115	;'s'
   566  08B5  3465               	retlw	101	;'e'
   567  08B6  346C               	retlw	108	;'l'
   568  08B7  3465               	retlw	101	;'e'
   569  08B8  3463               	retlw	99	;'c'
   570  08B9  3474               	retlw	116	;'t'
   571  08BA  3420               	retlw	32	;' '
   572  08BB  346D               	retlw	109	;'m'
   573  08BC  346F               	retlw	111	;'o'
   574  08BD  3476               	retlw	118	;'v'
   575  08BE  3465               	retlw	101	;'e'
   576  08BF  3400               	retlw	0
   577  08C0                     STR_6:	
   578  08C0  3452               	retlw	82	;'R'
   579  08C1  3465               	retlw	101	;'e'
   580  08C2  3464               	retlw	100	;'d'
   581  08C3  3427               	retlw	39	;'''
   582  08C4  3473               	retlw	115	;'s'
   583  08C5  3420               	retlw	32	;' '
   584  08C6  3454               	retlw	84	;'T'
   585  08C7  3475               	retlw	117	;'u'
   586  08C8  3472               	retlw	114	;'r'
   587  08C9  346E               	retlw	110	;'n'
   588  08CA  3400               	retlw	0
   589  08CB                     STR_13:	
   590  08CB  3450               	retlw	80	;'P'
   591  08CC  3472               	retlw	114	;'r'
   592  08CD  3465               	retlw	101	;'e'
   593  08CE  3473               	retlw	115	;'s'
   594  08CF  3473               	retlw	115	;'s'
   595  08D0  3420               	retlw	32	;' '
   596  08D1  342A               	retlw	42	;'*'
   597  08D2  3420               	retlw	32	;' '
   598  08D3  3474               	retlw	116	;'t'
   599  08D4  346F               	retlw	111	;'o'
   600  08D5  3400               	retlw	0
   601  08D6                     STR_4:	
   602  08D6  3474               	retlw	116	;'t'
   603  08D7  346F               	retlw	111	;'o'
   604  08D8  3420               	retlw	32	;' '
   605  08D9  3473               	retlw	115	;'s'
   606  08DA  3474               	retlw	116	;'t'
   607  08DB  3461               	retlw	97	;'a'
   608  08DC  3472               	retlw	114	;'r'
   609  08DD  3474               	retlw	116	;'t'
   610  08DE  3421               	retlw	33	;'!'
   611  08DF  3400               	retlw	0
   612  08E0                     STR_2:	
   613  08E0  344F               	retlw	79	;'O'
   614  08E1  3474               	retlw	116	;'t'
   615  08E2  3468               	retlw	104	;'h'
   616  08E3  3465               	retlw	101	;'e'
   617  08E4  346C               	retlw	108	;'l'
   618  08E5  346C               	retlw	108	;'l'
   619  08E6  346F               	retlw	111	;'o'
   620  08E7  3421               	retlw	33	;'!'
   621  08E8  3400               	retlw	0
   622  08E9                     STR_16:	
   623  08E9  346B               	retlw	107	;'k'
   624  08EA  3465               	retlw	101	;'e'
   625  08EB  3479               	retlw	121	;'y'
   626  08EC  3473               	retlw	115	;'s'
   627  08ED  3420               	retlw	32	;' '
   628  08EE  3431               	retlw	49	;'1'
   629  08EF  342D               	retlw	45	;'-'
   630  08F0  3438               	retlw	56	;'8'
   631  08F1  3400               	retlw	0
   632  08F2                     STR_11:	
   633  08F2  3447               	retlw	71	;'G'
   634  08F3  3472               	retlw	114	;'r'
   635  08F4  3465               	retlw	101	;'e'
   636  08F5  3465               	retlw	101	;'e'
   637  08F6  346E               	retlw	110	;'n'
   638  08F7  343A               	retlw	58	;':'
   639  08F8  3420               	retlw	32	;' '
   640  08F9  3400               	retlw	0
   641  08FA                     STR_10:	
   642  08FA  3452               	retlw	82	;'R'
   643  08FB  3465               	retlw	101	;'e'
   644  08FC  3464               	retlw	100	;'d'
   645  08FD  343A               	retlw	58	;':'
   646  08FE  3420               	retlw	32	;' '
   647  08FF  3400               	retlw	0
   648  0900                     STR_18:	
   649  0900  3443               	retlw	67	;'C'
   650  0901  346F               	retlw	111	;'o'
   651  0902  346C               	retlw	108	;'l'
   652  0903  343A               	retlw	58	;':'
   653  0904  3420               	retlw	32	;' '
   654  0905  3400               	retlw	0
   655  0906                     STR_17:	
   656  0906  3452               	retlw	82	;'R'
   657  0907  346F               	retlw	111	;'o'
   658  0908  3477               	retlw	119	;'w'
   659  0909  343A               	retlw	58	;':'
   660  090A  3420               	retlw	32	;' '
   661  090B  3400               	retlw	0
   662  08E9                     
   663                           ; #config settings
   664  0000                     
   665                           	psect	cinit
   666  07EB                     start_initialization:	
   667  07EB                     __initialization:	
   668                           
   669                           ; Clear objects allocated to COMMON
   670  07EB  01F7               	clrf	__pbssCOMMON& (0+127)
   671  07EC  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   672                           
   673                           ; Clear objects allocated to BANK0
   674  07ED  01CB               	clrf	__pbssBANK0& (0+127)
   675  07EE  01CC               	clrf	(__pbssBANK0+1)& (0+127)
   676  07EF  01CD               	clrf	(__pbssBANK0+2)& (0+127)
   677                           
   678                           ; Initialize objects allocated to BANK0
   679  07F0  1383               	bcf	3,7	;select IRP bank0
   680  07F1  3038               	movlw	low (__pdataBANK0+24)
   681  07F2  00FD               	movwf	btemp+-1
   682  07F3  3001               	movlw	high __pidataBANK0
   683  07F4  00FE               	movwf	btemp
   684  07F5  3008               	movlw	low __pidataBANK0
   685  07F6  00FF               	movwf	btemp+1
   686  07F7  3020               	movlw	low __pdataBANK0
   687  07F8  0084               	movwf	4
   688  07F9  120A  118A  2091   	fcall	init_ram0
   689  07FC                     end_of_initialization:	
   690                           ;End of C runtime variable initialization code
   691                           
   692  07FC                     __end_of__initialization:	
   693  07FC  0183               	clrf	3
   694  07FD  120A  118A  2D84   	ljmp	_main	;jump to C main() function
   695                           
   696                           	psect	bssCOMMON
   697  0077                     __pbssCOMMON:	
   698  0077                     _LCDStateCount:	
   699  0077                     	ds	1
   700  0078                     _played:	
   701  0078                     	ds	1
   702                           
   703                           	psect	bssBANK0
   704  004B                     __pbssBANK0:	
   705  004B                     _LCDNextState:	
   706  004B                     	ds	1
   707  004C                     _LCDState:	
   708  004C                     	ds	1
   709  004D                     _color:	
   710  004D                     	ds	1
   711                           
   712                           	psect	dataBANK0
   713  0020                     __pdataBANK0:	
   714  0020                     _AllPos:	
   715  0020                     	ds	8
   716  0028                     _GreenPos:	
   717  0028                     	ds	8
   718  0030                     _RedPos:	
   719  0030                     	ds	8
   720                           
   721                           	psect	inittext
   722  008D                     init_fetch0:	
   723                           ;	Called with low address in FSR and high address in W
   724                           
   725  008D  087E               	movf	126,w
   726  008E  008A               	movwf	10
   727  008F  087F               	movf	127,w
   728  0090  0082               	movwf	2
   729  0091                     init_ram0:	
   730                           ;Called with:
   731                           ;	high address of idata address in btemp 
   732                           ;	low address of idata address in btemp+1 
   733                           ;	low address of data in FSR
   734                           ;	high address + 1 of data in btemp-1
   735                           
   736  0091  208D  120A  118A   	fcall	init_fetch0
   737  0094  0080               	movwf	0
   738  0095  0A84               	incf	4,f
   739  0096  0804               	movf	4,w
   740  0097  067D               	xorwf	125,w
   741  0098  1903               	btfsc	3,2
   742  0099  3400               	retlw	0
   743  009A  0AFF               	incf	127,f
   744  009B  1903               	btfsc	3,2
   745  009C  0AFE               	incf	126,f
   746  009D  2891               	goto	init_ram0
   747                           
   748                           	psect	cstackCOMMON
   749  0071                     __pcstackCOMMON:	
   750  0071                     ?_I2C_Start:	
   751  0071                     ?_I2C_SendByte:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0071                     ?_I2C_Stop:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0071                     ?_I2C_Initialize:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0071                     ?_tmr0_init:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0071                     ?_Delay20us:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0071                     ?_LCD_strobe:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0071                     ?_lcd_clear:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0071                     ?_lcd_putch:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0071                     ?_lcd_goto:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0071                     ?_lcd_init:	
   779                           ; 1 bytes @ 0x0
   780                           
   781  0071                     ?_interrupt_handler:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  0071                     ??_interrupt_handler:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  0071                     ?_matrixSetup:	
   788                           ; 1 bytes @ 0x0
   789                           
   790  0071                     ?_setup:	
   791                           ; 1 bytes @ 0x0
   792                           
   793  0071                     ?_OutChar:	
   794                           ; 1 bytes @ 0x0
   795                           
   796  0071                     ?_drawMatrix:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0071                     ?_getKeypadKey:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0071                     ?_getKeypadPressed:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0071                     ?_checkFullBoard:	
   806                           ; 1 bytes @ 0x0
   807                           
   808  0071                     ?_countColor:	
   809                           ; 1 bytes @ 0x0
   810                           
   811  0071                     ?_displayNuber:	
   812                           ; 1 bytes @ 0x0
   813                           
   814  0071                     ?_main:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0071                     ?_I2C_Idle_Status:	
   818                           ; 1 bytes @ 0x0
   819                           
   820                           
   821                           ; 1 bytes @ 0x0
   822  0071                     	ds	5
   823  0076                     ??_I2C_Start:	
   824  0076                     ??_I2C_SendByte:	
   825                           ; 1 bytes @ 0x5
   826                           
   827  0076                     ??_I2C_Stop:	
   828                           ; 1 bytes @ 0x5
   829                           
   830  0076                     ??_I2C_Initialize:	
   831                           ; 1 bytes @ 0x5
   832                           
   833  0076                     ??_tmr0_init:	
   834                           ; 1 bytes @ 0x5
   835                           
   836  0076                     ??_DelayMs:	
   837                           ; 1 bytes @ 0x5
   838                           
   839  0076                     ??_Delay20us:	
   840                           ; 1 bytes @ 0x5
   841                           
   842  0076                     ??_OutChar:	
   843                           ; 1 bytes @ 0x5
   844                           
   845  0076                     ??_checkFullBoard:	
   846                           ; 1 bytes @ 0x5
   847                           
   848  0076                     ??___awdiv:	
   849                           ; 1 bytes @ 0x5
   850                           
   851  0076                     ??___awmod:	
   852                           ; 1 bytes @ 0x5
   853                           
   854  0076                     OutChar@outchr:	
   855                           ; 1 bytes @ 0x5
   856                           
   857                           
   858                           ; 1 bytes @ 0x5
   859  0076                     	ds	1
   860  0077                     ??_I2C_SendAddress:	
   861  0077                     ??_LCD_strobe:	
   862                           ; 1 bytes @ 0x6
   863                           
   864  0077                     ??_lcd_clear:	
   865                           ; 1 bytes @ 0x6
   866                           
   867  0077                     ??_matrixSetup:	
   868                           ; 1 bytes @ 0x6
   869                           
   870  0077                     ??_setup:	
   871                           ; 1 bytes @ 0x6
   872                           
   873  0077                     ??_OutCharMsg:	
   874                           ; 1 bytes @ 0x6
   875                           
   876                           
   877                           	psect	cstackBANK0
   878  0038                     __pcstackBANK0:	
   879                           ; 1 bytes @ 0x6
   880                           
   881  0038                     ?_DelayMs:	
   882  0038                     ?_OutCharMsg:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0038                     ?_checkPositionFree:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0038                     ??_getKeypadKey:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0038                     ??_getKeypadPressed:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0038                     ??_countColor:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0038                     ??_I2C_Idle_Status:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0038                     ?___awdiv:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0038                     ?___awmod:	
   904                           ; 2 bytes @ 0x0
   905                           
   906  0038                     Delay20us@next:	
   907                           ; 2 bytes @ 0x0
   908                           
   909  0038                     checkPositionFree@col:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0038                     checkFullBoard@i:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0038                     I2C_SendByte@data:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0038                     DelayMs@millis:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0038                     OutCharMsg@string:	
   922                           ; 2 bytes @ 0x0
   923                           
   924  0038                     ___awdiv@divisor:	
   925                           ; 2 bytes @ 0x0
   926                           
   927  0038                     ___awmod@divisor:	
   928                           ; 2 bytes @ 0x0
   929                           
   930                           
   931                           ; 2 bytes @ 0x0
   932  0038                     	ds	1
   933  0039                     ?_I2C_SendAddress:	
   934  0039                     ?_lcd_write:	
   935                           ; 1 bytes @ 0x1
   936                           
   937  0039                     lcd_write@CmdChar:	
   938                           ; 1 bytes @ 0x1
   939                           
   940  0039                     checkPositionFree@colorArray:	
   941                           ; 1 bytes @ 0x1
   942                           
   943  0039                     I2C_SendAddress@rw:	
   944                           ; 1 bytes @ 0x1
   945                           
   946                           
   947                           ; 1 bytes @ 0x1
   948  0039                     	ds	1
   949  003A                     ??_lcd_write:	
   950  003A                     ??_checkPositionFree:	
   951                           ; 1 bytes @ 0x2
   952                           
   953  003A                     getKeypadKey@temp2:	
   954                           ; 1 bytes @ 0x2
   955                           
   956  003A                     getKeypadPressed@temp2:	
   957                           ; 1 bytes @ 0x2
   958                           
   959  003A                     countColor@count:	
   960                           ; 1 bytes @ 0x2
   961                           
   962  003A                     I2C_SendAddress@address:	
   963                           ; 1 bytes @ 0x2
   964                           
   965  003A                     ___awdiv@dividend:	
   966                           ; 1 bytes @ 0x2
   967                           
   968  003A                     ___awmod@dividend:	
   969                           ; 2 bytes @ 0x2
   970                           
   971                           
   972                           ; 2 bytes @ 0x2
   973  003A                     	ds	1
   974  003B                     lcd_write@mode:	
   975  003B                     getKeypadKey@temp:	
   976                           ; 1 bytes @ 0x3
   977                           
   978  003B                     getKeypadPressed@temp:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  003B                     countColor@color:	
   982                           ; 1 bytes @ 0x3
   983                           
   984                           
   985                           ; 1 bytes @ 0x3
   986  003B                     	ds	1
   987  003C                     ?_lcd_puts:	
   988  003C                     ??_lcd_putch:	
   989                           ; 1 bytes @ 0x4
   990                           
   991  003C                     ??_lcd_goto:	
   992                           ; 1 bytes @ 0x4
   993                           
   994  003C                     ??_lcd_init:	
   995                           ; 1 bytes @ 0x4
   996                           
   997  003C                     getKeypadKey@col:	
   998                           ; 1 bytes @ 0x4
   999                           
  1000  003C                     countColor@i:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  003C                     ___awdiv@counter:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006  003C                     ___awmod@counter:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  003C                     lcd_puts@string:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x4
  1014  003C                     	ds	1
  1015  003D                     lcd_putch@character:	
  1016  003D                     lcd_goto@position:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019  003D                     countColor@temp:	
  1020                           ; 1 bytes @ 0x5
  1021                           
  1022  003D                     ___awdiv@sign:	
  1023                           ; 1 bytes @ 0x5
  1024                           
  1025  003D                     ___awmod@sign:	
  1026                           ; 1 bytes @ 0x5
  1027                           
  1028                           
  1029                           ; 1 bytes @ 0x5
  1030  003D                     	ds	1
  1031  003E                     ??_lcd_puts:	
  1032  003E                     checkPositionFree@row:	
  1033                           ; 1 bytes @ 0x6
  1034                           
  1035  003E                     ___awdiv@quotient:	
  1036                           ; 1 bytes @ 0x6
  1037                           
  1038                           
  1039                           ; 2 bytes @ 0x6
  1040  003E                     	ds	1
  1041  003F                     checkPositionFree@temp:	
  1042                           
  1043                           ; 1 bytes @ 0x7
  1044  003F                     	ds	1
  1045  0040                     ??_drawMatrix:	
  1046  0040                     ?_sendMatrix:	
  1047                           ; 1 bytes @ 0x8
  1048                           
  1049  0040                     ??_displayNuber:	
  1050                           ; 1 bytes @ 0x8
  1051                           
  1052  0040                     sendMatrix@PointerC:	
  1053                           ; 1 bytes @ 0x8
  1054                           
  1055                           
  1056                           ; 1 bytes @ 0x8
  1057  0040                     	ds	1
  1058  0041                     ??_sendMatrix:	
  1059  0041                     drawMatrix@temp:	
  1060                           ; 1 bytes @ 0x9
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x9
  1064  0041                     	ds	1
  1065  0042                     displayNuber@num:	
  1066                           
  1067                           ; 1 bytes @ 0xA
  1068  0042                     	ds	1
  1069  0043                     sendMatrix@PointerR:	
  1070                           
  1071                           ; 1 bytes @ 0xB
  1072  0043                     	ds	1
  1073  0044                     sendMatrix@r:	
  1074                           
  1075                           ; 1 bytes @ 0xC
  1076  0044                     	ds	1
  1077  0045                     sendMatrix@c:	
  1078                           
  1079                           ; 1 bytes @ 0xD
  1080  0045                     	ds	1
  1081  0046                     ??_main:	
  1082                           
  1083                           ; 1 bytes @ 0xE
  1084  0046                     	ds	1
  1085  0047                     main@temp:	
  1086                           
  1087                           ; 2 bytes @ 0xF
  1088  0047                     	ds	2
  1089  0049                     main@col:	
  1090                           
  1091                           ; 1 bytes @ 0x11
  1092  0049                     	ds	1
  1093  004A                     main@row:	
  1094                           
  1095                           ; 1 bytes @ 0x12
  1096  004A                     	ds	1
  1097                           
  1098                           	psect	maintext
  1099  0584                     __pmaintext:	
  1100 ;;
  1101 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1102 ;;
  1103 ;; *************** function _main *****************
  1104 ;; Defined at:
  1105 ;;		line 409 in file "Othello.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  temp            2   15[BANK0 ] unsigned int 
  1110 ;;  row             1   18[BANK0 ] unsigned char 
  1111 ;;  col             1   17[BANK0 ] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : B00/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         0       0       0       0       0
  1122 ;;      Locals:         0       4       0       0       0
  1123 ;;      Temps:          0       1       0       0       0
  1124 ;;      Totals:         0       5       0       0       0
  1125 ;;Total ram usage:        5 bytes
  1126 ;; Hardware stack levels required when called:    7
  1127 ;; This function calls:
  1128 ;;		_DelayMs
  1129 ;;		_OutChar
  1130 ;;		_OutCharMsg
  1131 ;;		_checkFullBoard
  1132 ;;		_countColor
  1133 ;;		_displayNuber
  1134 ;;		_drawMatrix
  1135 ;;		_getKeypadKey
  1136 ;;		_getKeypadPressed
  1137 ;;		_lcd_clear
  1138 ;;		_lcd_goto
  1139 ;;		_lcd_putch
  1140 ;;		_lcd_puts
  1141 ;;		_sendMatrix
  1142 ;;		_setup
  1143 ;; This function is called by:
  1144 ;;		Startup code after reset
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _main
  1150  0584                     _main:	
  1151                           
  1152                           ;Othello.c: 410: unsigned char row = 0;
  1153                           
  1154                           ;incstack = 0
  1155                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1156  0584  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0585  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0586  01CA               	clrf	main@row
  1159                           
  1160                           ;Othello.c: 411: unsigned char col = 0;
  1161  0587  01C9               	clrf	main@col
  1162                           
  1163                           ;Othello.c: 412: for(unsigned int temp = 0; temp < 3000; temp++);
  1164  0588  01C7               	clrf	main@temp
  1165  0589  01C8               	clrf	main@temp+1
  1166  058A  300B               	movlw	11
  1167  058B  0248               	subwf	main@temp+1,w
  1168  058C  30B8               	movlw	184
  1169  058D  1903               	skipnz
  1170  058E  0247               	subwf	main@temp,w
  1171  058F  1803               	btfsc	3,0
  1172  0590  2D9E               	goto	l2832
  1173  0591                     l2830:	
  1174  0591  3001               	movlw	1
  1175  0592  07C7               	addwf	main@temp,f
  1176  0593  1803               	skipnc
  1177  0594  0AC8               	incf	main@temp+1,f
  1178  0595  3000               	movlw	0
  1179  0596  07C8               	addwf	main@temp+1,f
  1180  0597  300B               	movlw	11
  1181  0598  0248               	subwf	main@temp+1,w
  1182  0599  30B8               	movlw	184
  1183  059A  1903               	skipnz
  1184  059B  0247               	subwf	main@temp,w
  1185  059C  1C03               	skipc
  1186  059D  2D91               	goto	l2830
  1187  059E                     l2832:	
  1188                           
  1189                           ;Othello.c: 413: setup();
  1190  059E  120A  118A  22CF  120A  118A  	fcall	_setup
  1191                           
  1192                           ;Othello.c: 414: LCDNextState = 1;
  1193  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  1194  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  1195  05A5  01CB               	clrf	_LCDNextState
  1196  05A6  0ACB               	incf	_LCDNextState,f
  1197                           
  1198                           ;Othello.c: 416: lcd_puts("Welcome to ");
  1199  05A7  30A8               	movlw	low (STR_1| (0+32768))
  1200  05A8  00BC               	movwf	lcd_puts@string
  1201  05A9  3088               	movlw	high (STR_1| (0+32768))
  1202  05AA  00BD               	movwf	lcd_puts@string+1
  1203  05AB  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1204                           
  1205                           ;Othello.c: 417: lcd_goto(0x40);
  1206  05B0  3040               	movlw	64
  1207  05B1  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1208                           
  1209                           ;Othello.c: 418: lcd_puts("Othello!");
  1210  05B6  30E0               	movlw	low (STR_2| (0+32768))
  1211  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1212  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1213  05B9  00BC               	movwf	lcd_puts@string
  1214  05BA  3088               	movlw	high (STR_2| (0+32768))
  1215  05BB  00BD               	movwf	lcd_puts@string+1
  1216  05BC  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1217                           
  1218                           ;Othello.c: 419: DelayMs(5000);
  1219  05C1  3088               	movlw	136
  1220  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  1221  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  1222  05C4  00B8               	movwf	DelayMs@millis
  1223  05C5  3013               	movlw	19
  1224  05C6  00B9               	movwf	DelayMs@millis+1
  1225  05C7  120A  118A  20DA  120A  118A  	fcall	_DelayMs
  1226                           
  1227                           ;Othello.c: 420: lcd_clear();
  1228  05CC  120A  118A  20B1  120A  118A  	fcall	_lcd_clear
  1229                           
  1230                           ;Othello.c: 421: lcd_puts("Press any key");
  1231  05D1  308D               	movlw	low (STR_3| (0+32768))
  1232  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  1233  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  1234  05D4  00BC               	movwf	lcd_puts@string
  1235  05D5  3088               	movlw	high (STR_3| (0+32768))
  1236  05D6  00BD               	movwf	lcd_puts@string+1
  1237  05D7  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1238                           
  1239                           ;Othello.c: 422: lcd_goto(0x40);
  1240  05DC  3040               	movlw	64
  1241  05DD  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1242                           
  1243                           ;Othello.c: 423: lcd_puts("to start!");
  1244  05E2  30D6               	movlw	low (STR_4| (0+32768))
  1245  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1246  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1247  05E5  00BC               	movwf	lcd_puts@string
  1248  05E6  3088               	movlw	high (STR_4| (0+32768))
  1249  05E7  00BD               	movwf	lcd_puts@string+1
  1250  05E8  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1251  05ED                     l2848:	
  1252                           ;Othello.c: 424: while(!getKeypadPressed());
  1253                           
  1254  05ED  120A  118A  2178  120A  118A  	fcall	_getKeypadPressed
  1255  05F2  3A00               	xorlw	0
  1256  05F3  1903               	skipnz
  1257  05F4  2DED               	goto	l2848
  1258                           
  1259                           ;Othello.c: 425: DelayMs(10);
  1260  05F5  300A               	movlw	10
  1261  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  1262  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  1263  05F8  00B8               	movwf	DelayMs@millis
  1264  05F9  3000               	movlw	0
  1265  05FA  00B9               	movwf	DelayMs@millis+1
  1266  05FB  120A  118A  20DA  120A  118A  	fcall	_DelayMs
  1267  0600                     l2852:	
  1268                           ;Othello.c: 426: while(getKeypadPressed());
  1269                           
  1270  0600  120A  118A  2178  120A  118A  	fcall	_getKeypadPressed
  1271  0605  3A00               	xorlw	0
  1272  0606  1D03               	skipz
  1273  0607  2E00               	goto	l2852
  1274                           
  1275                           ;Othello.c: 427: OutChar(0x0C);
  1276  0608  300C               	movlw	12
  1277  0609  120A  118A  202E  120A  118A  	fcall	_OutChar
  1278                           
  1279                           ;Othello.c: 428: drawMatrix();
  1280  060E  120A  118A  2309  120A  118A  	fcall	_drawMatrix
  1281                           
  1282                           ;Othello.c: 429: OutCharMsg("! is pointer, . is empty, green is 'O', red is 'X'");
  1283  0613  3022               	movlw	low (STR_5| (0+32768))
  1284  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0616  00B8               	movwf	OutCharMsg@string
  1287  0617  3088               	movlw	high (STR_5| (0+32768))
  1288  0618  00B9               	movwf	OutCharMsg@string+1
  1289  0619  120A  118A  2153  120A  118A  	fcall	_OutCharMsg
  1290                           
  1291                           ;Othello.c: 430: OutChar(0x0A);
  1292  061E  300A               	movlw	10
  1293  061F  120A  118A  202E  120A  118A  	fcall	_OutChar
  1294                           
  1295                           ;Othello.c: 431: OutChar(0x0D);
  1296  0624  300D               	movlw	13
  1297  0625  120A  118A  202E  120A  118A  	fcall	_OutChar
  1298                           
  1299                           ;Othello.c: 432: sendMatrix(0,0);
  1300  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1301  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1302  062C  01C0               	clrf	sendMatrix@PointerC
  1303  062D  3000               	movlw	0
  1304  062E  120A  118A  24FD  120A  118A  	fcall	_sendMatrix
  1305                           
  1306                           ;Othello.c: 433: TMR1IE = 1;
  1307  0633  1683               	bsf	3,5	;RP0=1, select bank1
  1308  0634  1303               	bcf	3,6	;RP1=0, select bank1
  1309  0635  140C               	bsf	12,0	;volatile
  1310  0636                     l2964:	
  1311                           ;Othello.c: 434: while(!checkFullBoard()) {
  1312                           
  1313  0636  120A  118A  2139  120A  118A  	fcall	_checkFullBoard
  1314  063B  3A00               	xorlw	0
  1315  063C  1D03               	btfss	3,2
  1316  063D  2FE8               	goto	l346
  1317                           
  1318                           ;Othello.c: 435: if(LCDNextState == 1) {
  1319  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1320  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0640  034B               	decf	_LCDNextState,w
  1322  0641  1D03               	btfss	3,2
  1323  0642  2F0B               	goto	l2916
  1324                           
  1325                           ;Othello.c: 436: LCDNextState = 0;
  1326  0643  01CB               	clrf	_LCDNextState
  1327                           
  1328                           ;Othello.c: 437: lcd_clear();
  1329  0644  120A  118A  20B1  120A  118A  	fcall	_lcd_clear
  1330                           
  1331                           ;Othello.c: 438: switch(LCDState) {
  1332  0649  2EF2               	goto	l2912
  1333  064A                     l2874:	
  1334                           ;Othello.c: 439: case 0:
  1335                           
  1336                           
  1337                           ;Othello.c: 440: if(color == 0) {
  1338  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1339  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1340  064C  084D               	movf	_color,w
  1341  064D  1D03               	btfss	3,2
  1342  064E  2E59               	goto	l2878
  1343                           
  1344                           ;Othello.c: 441: lcd_puts("Red's Turn");
  1345  064F  30C0               	movlw	low (STR_6| (0+32768))
  1346  0650  00BC               	movwf	lcd_puts@string
  1347  0651  3088               	movlw	high (STR_6| (0+32768))
  1348  0652  00BD               	movwf	lcd_puts@string+1
  1349  0653  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1350                           
  1351                           ;Othello.c: 442: } else {
  1352  0658  2F05               	goto	l2914
  1353  0659                     l2878:	
  1354                           
  1355                           ;Othello.c: 443: lcd_puts("Green's Turn");
  1356  0659  309B               	movlw	low (STR_7| (0+32768))
  1357  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1358  065B  1303               	bcf	3,6	;RP1=0, select bank0
  1359  065C  00BC               	movwf	lcd_puts@string
  1360  065D  3088               	movlw	high (STR_7| (0+32768))
  1361  065E  00BD               	movwf	lcd_puts@string+1
  1362  065F  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1363                           
  1364                           ;Othello.c: 444: }
  1365                           ;Othello.c: 445: break;
  1366  0664  2F05               	goto	l2914
  1367  0665                     l2880:	
  1368                           ;Othello.c: 446: case 1:
  1369                           
  1370                           
  1371                           ;Othello.c: 447: lcd_puts("Press key 1-8");
  1372  0665  3055               	movlw	low (STR_8| (0+32768))
  1373  0666  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0667  1303               	bcf	3,6	;RP1=0, select bank0
  1375  0668  00BC               	movwf	lcd_puts@string
  1376  0669  3088               	movlw	high (STR_8| (0+32768))
  1377  066A  00BD               	movwf	lcd_puts@string+1
  1378  066B  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1379                           
  1380                           ;Othello.c: 448: lcd_goto(0x40);
  1381  0670  3040               	movlw	64
  1382  0671  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1383                           
  1384                           ;Othello.c: 449: lcd_puts("to enter move");
  1385  0676  3071               	movlw	low (STR_9| (0+32768))
  1386  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0678  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0679  00BC               	movwf	lcd_puts@string
  1389  067A  3088               	movlw	high (STR_9| (0+32768))
  1390  067B  00BD               	movwf	lcd_puts@string+1
  1391  067C  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1392                           
  1393                           ;Othello.c: 450: break;
  1394  0681  2F05               	goto	l2914
  1395  0682                     l2886:	
  1396                           ;Othello.c: 451: case 3:
  1397                           
  1398                           
  1399                           ;Othello.c: 452: lcd_puts("Red: ");
  1400  0682  30FA               	movlw	low (STR_10| (0+32768))
  1401  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0685  00BC               	movwf	lcd_puts@string
  1404  0686  3088               	movlw	high (STR_10| (0+32768))
  1405  0687  00BD               	movwf	lcd_puts@string+1
  1406  0688  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1407                           
  1408                           ;Othello.c: 453: displayNuber(countColor(RedPos));
  1409  068D  3030               	movlw	(low (_RedPos| 0))& (0+255)
  1410  068E  120A  118A  21C7  120A  118A  	fcall	_countColor
  1411  0693  120A  118A  21F2  120A  118A  	fcall	_displayNuber
  1412                           
  1413                           ;Othello.c: 454: lcd_goto(0x40);
  1414  0698  3040               	movlw	64
  1415  0699  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1416                           
  1417                           ;Othello.c: 455: lcd_puts("Green: ");
  1418  069E  30F2               	movlw	low (STR_11| (0+32768))
  1419  069F  1283               	bcf	3,5	;RP0=0, select bank0
  1420  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1421  06A1  00BC               	movwf	lcd_puts@string
  1422  06A2  3088               	movlw	high (STR_11| (0+32768))
  1423  06A3  00BD               	movwf	lcd_puts@string+1
  1424  06A4  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1425                           
  1426                           ;Othello.c: 456: displayNuber(countColor(GreenPos));
  1427  06A9  3028               	movlw	(low (_GreenPos| 0))& (0+255)
  1428  06AA  120A  118A  21C7  120A  118A  	fcall	_countColor
  1429  06AF  120A  118A  21F2  120A  118A  	fcall	_displayNuber
  1430                           
  1431                           ;Othello.c: 457: break;
  1432  06B4  2F05               	goto	l2914
  1433  06B5                     l2896:	
  1434                           ;Othello.c: 458: case 4:
  1435                           
  1436                           
  1437                           ;Othello.c: 459: lcd_puts("Total Played:");
  1438  06B5  3063               	movlw	low (STR_12| (0+32768))
  1439  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1440  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1441  06B8  00BC               	movwf	lcd_puts@string
  1442  06B9  3088               	movlw	high (STR_12| (0+32768))
  1443  06BA  00BD               	movwf	lcd_puts@string+1
  1444  06BB  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1445                           
  1446                           ;Othello.c: 460: lcd_goto(0x40);
  1447  06C0  3040               	movlw	64
  1448  06C1  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1449                           
  1450                           ;Othello.c: 461: displayNuber(countColor(AllPos) - 4);
  1451  06C6  3020               	movlw	(low (_AllPos| 0))& (0+255)
  1452  06C7  120A  118A  21C7  120A  118A  	fcall	_countColor
  1453  06CC  3EFC               	addlw	252
  1454  06CD  120A  118A  21F2  120A  118A  	fcall	_displayNuber
  1455  06D2  2EEE               	goto	l2910
  1456  06D3                     l2904:	
  1457                           ;Othello.c: 464: case 2:
  1458                           
  1459                           ;Othello.c: 463: break;
  1460                           
  1461                           ;Othello.c: 462: LCDState = 0;
  1462                           
  1463                           
  1464                           ;Othello.c: 465: lcd_puts("Press * to");
  1465  06D3  30CB               	movlw	low (STR_13| (0+32768))
  1466  06D4  00BC               	movwf	lcd_puts@string
  1467  06D5  3088               	movlw	high (STR_13| (0+32768))
  1468  06D6  00BD               	movwf	lcd_puts@string+1
  1469  06D7  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1470                           
  1471                           ;Othello.c: 466: lcd_goto(0x40);
  1472  06DC  3040               	movlw	64
  1473  06DD  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1474                           
  1475                           ;Othello.c: 467: lcd_puts("select move");
  1476  06E2  30B4               	movlw	low (STR_14| (0+32768))
  1477  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1478  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1479  06E5  00BC               	movwf	lcd_puts@string
  1480  06E6  3088               	movlw	high (STR_14| (0+32768))
  1481  06E7  00BD               	movwf	lcd_puts@string+1
  1482  06E8  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1483                           
  1484                           ;Othello.c: 468: break;
  1485  06ED  2F05               	goto	l2914
  1486  06EE                     l2910:	
  1487                           ;Othello.c: 469: default:
  1488                           
  1489                           
  1490                           ;Othello.c: 470: LCDState = 0;
  1491  06EE  1283               	bcf	3,5	;RP0=0, select bank0
  1492  06EF  1303               	bcf	3,6	;RP1=0, select bank0
  1493  06F0  01CC               	clrf	_LCDState
  1494                           
  1495                           ;Othello.c: 471: }
  1496  06F1  2F05               	goto	l2914
  1497  06F2                     l2912:	
  1498  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1499  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1500  06F4  084C               	movf	_LCDState,w
  1501                           
  1502                           ; Switch size 1, requested type "space"
  1503                           ; Number of cases is 5, Range of values is 0 to 4
  1504                           ; switch strategies available:
  1505                           ; Name         Instructions Cycles
  1506                           ; simple_byte           16     9 (average)
  1507                           ; direct_byte           23     8 (fixed)
  1508                           ; jumptable            260     6 (fixed)
  1509                           ;	Chosen strategy is simple_byte
  1510  06F5  3A00               	xorlw	0	; case 0
  1511  06F6  1903               	skipnz
  1512  06F7  2E4A               	goto	l2874
  1513  06F8  3A01               	xorlw	1	; case 1
  1514  06F9  1903               	skipnz
  1515  06FA  2E65               	goto	l2880
  1516  06FB  3A03               	xorlw	3	; case 2
  1517  06FC  1903               	skipnz
  1518  06FD  2ED3               	goto	l2904
  1519  06FE  3A01               	xorlw	1	; case 3
  1520  06FF  1903               	skipnz
  1521  0700  2E82               	goto	l2886
  1522  0701  3A07               	xorlw	7	; case 4
  1523  0702  1903               	skipnz
  1524  0703  2EB5               	goto	l2896
  1525  0704  2EEE               	goto	l2910
  1526  0705                     l2914:	
  1527                           
  1528                           ;Othello.c: 472: LCDState++;
  1529  0705  3001               	movlw	1
  1530  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0708  00C6               	movwf	??_main
  1533  0709  0846               	movf	??_main,w
  1534  070A  07CC               	addwf	_LCDState,f
  1535  070B                     l2916:	
  1536                           
  1537                           ;Othello.c: 473: }
  1538                           ;Othello.c: 474: if(getKeypadPressed()) {
  1539  070B  120A  118A  2178  120A  118A  	fcall	_getKeypadPressed
  1540  0710  3A00               	xorlw	0
  1541  0711  1903               	skipnz
  1542  0712  2E36               	goto	l2964
  1543                           
  1544                           ;Othello.c: 475: row = getKeypadKey() - 0x30;
  1545  0713  120A  118A  2498  120A  118A  	fcall	_getKeypadKey
  1546  0718  3ED0               	addlw	208
  1547  0719  1283               	bcf	3,5	;RP0=0, select bank0
  1548  071A  1303               	bcf	3,6	;RP1=0, select bank0
  1549  071B  00C6               	movwf	??_main
  1550  071C  0846               	movf	??_main,w
  1551  071D  00CA               	movwf	main@row
  1552  071E                     l2920:	
  1553                           ;Othello.c: 476: while(getKeypadPressed());
  1554                           
  1555  071E  120A  118A  2178  120A  118A  	fcall	_getKeypadPressed
  1556  0723  3A00               	xorlw	0
  1557  0724  1D03               	skipz
  1558  0725  2F1E               	goto	l2920
  1559                           
  1560                           ;Othello.c: 477: if(!(row >= 1 && row <= 8)) {
  1561  0726  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0727  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0728  084A               	movf	main@row,w
  1564  0729  1903               	btfsc	3,2
  1565  072A  2F2F               	goto	l2926
  1566  072B  3009               	movlw	9
  1567  072C  024A               	subwf	main@row,w
  1568  072D  1C03               	skipc
  1569  072E  2F5C               	goto	l2934
  1570  072F                     l2926:	
  1571                           
  1572                           ;Othello.c: 478: lcd_clear();
  1573  072F  120A  118A  20B1  120A  118A  	fcall	_lcd_clear
  1574                           
  1575                           ;Othello.c: 479: lcd_puts("Please select");
  1576  0734  307F               	movlw	low (STR_15| (0+32768))
  1577  0735  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0736  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0737  00BC               	movwf	lcd_puts@string
  1580  0738  3088               	movlw	high (STR_15| (0+32768))
  1581  0739  00BD               	movwf	lcd_puts@string+1
  1582  073A  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1583                           
  1584                           ;Othello.c: 480: lcd_goto(0x40);
  1585  073F  3040               	movlw	64
  1586  0740  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1587                           
  1588                           ;Othello.c: 481: lcd_puts("keys 1-8");
  1589  0745  30E9               	movlw	low (STR_16| (0+32768))
  1590  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0748  00BC               	movwf	lcd_puts@string
  1593  0749  3088               	movlw	high (STR_16| (0+32768))
  1594  074A  00BD               	movwf	lcd_puts@string+1
  1595  074B  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1596                           
  1597                           ;Othello.c: 482: DelayMs(2000);
  1598  0750  30D0               	movlw	208
  1599  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1600  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0753  00B8               	movwf	DelayMs@millis
  1602  0754  3007               	movlw	7
  1603  0755  00B9               	movwf	DelayMs@millis+1
  1604  0756  120A  118A  20DA  120A  118A  	fcall	_DelayMs
  1605                           
  1606                           ;Othello.c: 483: } else {
  1607  075B  2E36               	goto	l2964
  1608  075C                     l2934:	
  1609                           
  1610                           ;Othello.c: 484: lcd_clear();
  1611  075C  120A  118A  20B1  120A  118A  	fcall	_lcd_clear
  1612                           
  1613                           ;Othello.c: 485: lcd_puts("Row: ");
  1614  0761  3006               	movlw	low (STR_17| (0+32768))
  1615  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0764  00BC               	movwf	lcd_puts@string
  1618  0765  3089               	movlw	high (STR_17| (0+32768))
  1619  0766  00BD               	movwf	lcd_puts@string+1
  1620  0767  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1621                           
  1622                           ;Othello.c: 486: lcd_putch(row + 0x30);
  1623  076C  1283               	bcf	3,5	;RP0=0, select bank0
  1624  076D  1303               	bcf	3,6	;RP1=0, select bank0
  1625  076E  084A               	movf	main@row,w
  1626  076F  3E30               	addlw	48
  1627  0770  120A  118A  2054  120A  118A  	fcall	_lcd_putch
  1628                           
  1629                           ;Othello.c: 487: lcd_goto(0x40);
  1630  0775  3040               	movlw	64
  1631  0776  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1632                           
  1633                           ;Othello.c: 488: lcd_puts("Col: ");
  1634  077B  3000               	movlw	low (STR_18| (0+32768))
  1635  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1636  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1637  077E  00BC               	movwf	lcd_puts@string
  1638  077F  3089               	movlw	high (STR_18| (0+32768))
  1639  0780  00BD               	movwf	lcd_puts@string+1
  1640  0781  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1641  0786                     l2944:	
  1642                           ;Othello.c: 489: while(!getKeypadPressed());
  1643                           
  1644  0786  120A  118A  2178  120A  118A  	fcall	_getKeypadPressed
  1645  078B  3A00               	xorlw	0
  1646  078C  1903               	skipnz
  1647  078D  2F86               	goto	l2944
  1648                           
  1649                           ;Othello.c: 490: DelayMs(10);
  1650  078E  300A               	movlw	10
  1651  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0791  00B8               	movwf	DelayMs@millis
  1654  0792  3000               	movlw	0
  1655  0793  00B9               	movwf	DelayMs@millis+1
  1656  0794  120A  118A  20DA  120A  118A  	fcall	_DelayMs
  1657                           
  1658                           ;Othello.c: 491: col = getKeypadPressed();
  1659  0799  120A  118A  2178  120A  118A  	fcall	_getKeypadPressed
  1660  079E  1283               	bcf	3,5	;RP0=0, select bank0
  1661  079F  1303               	bcf	3,6	;RP1=0, select bank0
  1662  07A0  00C6               	movwf	??_main
  1663  07A1  0846               	movf	??_main,w
  1664  07A2  00C9               	movwf	main@col
  1665                           
  1666                           ;Othello.c: 492: if(!(col >= 1 && col <= 8)) {
  1667  07A3  0849               	movf	main@col,w
  1668  07A4  1903               	btfsc	3,2
  1669  07A5  2FAA               	goto	l2952
  1670  07A6  3009               	movlw	9
  1671  07A7  0249               	subwf	main@col,w
  1672  07A8  1C03               	skipc
  1673  07A9  2FD7               	goto	l2960
  1674  07AA                     l2952:	
  1675                           
  1676                           ;Othello.c: 493: lcd_clear();
  1677  07AA  120A  118A  20B1  120A  118A  	fcall	_lcd_clear
  1678                           
  1679                           ;Othello.c: 494: lcd_puts("Please select");
  1680  07AF  307F               	movlw	low (STR_15| (0+32768))
  1681  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1682  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1683  07B2  00BC               	movwf	lcd_puts@string
  1684  07B3  3088               	movlw	high (STR_15| (0+32768))
  1685  07B4  00BD               	movwf	lcd_puts@string+1
  1686  07B5  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1687                           
  1688                           ;Othello.c: 495: lcd_goto(0x40);
  1689  07BA  3040               	movlw	64
  1690  07BB  120A  118A  20F0  120A  118A  	fcall	_lcd_goto
  1691                           
  1692                           ;Othello.c: 496: lcd_puts("keys 1-8");
  1693  07C0  30E9               	movlw	low (STR_16| (0+32768))
  1694  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1695  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1696  07C3  00BC               	movwf	lcd_puts@string
  1697  07C4  3088               	movlw	high (STR_16| (0+32768))
  1698  07C5  00BD               	movwf	lcd_puts@string+1
  1699  07C6  120A  118A  219E  120A  118A  	fcall	_lcd_puts
  1700                           
  1701                           ;Othello.c: 497: DelayMs(2000);
  1702  07CB  30D0               	movlw	208
  1703  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1704  07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1705  07CE  00B8               	movwf	DelayMs@millis
  1706  07CF  3007               	movlw	7
  1707  07D0  00B9               	movwf	DelayMs@millis+1
  1708  07D1  120A  118A  20DA  120A  118A  	fcall	_DelayMs
  1709                           
  1710                           ;Othello.c: 498: } else {
  1711  07D6  2E36               	goto	l2964
  1712  07D7                     l2960:	
  1713                           ;Othello.c: 499: while(getKeypadKey() != '*');
  1714                           
  1715  07D7  120A  118A  2498  120A  118A  	fcall	_getKeypadKey
  1716  07DC  3A2A               	xorlw	42
  1717  07DD  1D03               	skipz
  1718  07DE  2FD7               	goto	l2960
  1719  07DF                     l2962:	
  1720                           ;Othello.c: 500: while(!getKeypadPressed());
  1721                           
  1722  07DF  120A  118A  2178  120A  118A  	fcall	_getKeypadPressed
  1723  07E4  3A00               	xorlw	0
  1724  07E5  1D03               	btfss	3,2
  1725  07E6  2E36               	goto	l2964
  1726  07E7  2FDF               	goto	l2962
  1727  07E8                     l346:	
  1728  07E8  120A  118A  2812   	ljmp	start
  1729  07EB                     __end_of_main:	
  1730                           
  1731                           	psect	text1
  1732  02CF                     __ptext1:	
  1733 ;; *************** function _setup *****************
  1734 ;; Defined at:
  1735 ;;		line 121 in file "Othello.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, pclath, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1749 ;;      Params:         0       0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0
  1752 ;;      Totals:         0       0       0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    6
  1756 ;; This function calls:
  1757 ;;		_I2C_Initialize
  1758 ;;		_lcd_init
  1759 ;;		_matrixSetup
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _setup
  1767  02CF                     _setup:	
  1768                           
  1769                           ;Othello.c: 122: lcd_init();
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1773  02CF  120A  118A  243C  120A  118A  	fcall	_lcd_init
  1774                           
  1775                           ;Othello.c: 123: I2C_Initialize();
  1776  02D4  120A  118A  209E  120A  118A  	fcall	_I2C_Initialize
  1777                           
  1778                           ;Othello.c: 125: matrixSetup();
  1779  02D9  120A  118A  234A  120A  118A  	fcall	_matrixSetup
  1780                           
  1781                           ;Othello.c: 127: ANSEL = 0;
  1782  02DE  1683               	bsf	3,5	;RP0=1, select bank3
  1783  02DF  1703               	bsf	3,6	;RP1=1, select bank3
  1784  02E0  0188               	clrf	8	;volatile
  1785                           
  1786                           ;Othello.c: 128: ANSELH = 0;
  1787  02E1  0189               	clrf	9	;volatile
  1788                           
  1789                           ;Othello.c: 130: TRISB = 0x0F;
  1790  02E2  300F               	movlw	15
  1791  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1792  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1793  02E5  0086               	movwf	6	;volatile
  1794                           
  1795                           ;Othello.c: 132: nRBPU = 0;
  1796  02E6  1381               	bcf	1,7	;volatile
  1797                           
  1798                           ;Othello.c: 136: TRISD = 0;
  1799  02E7  0188               	clrf	8	;volatile
  1800                           
  1801                           ;Othello.c: 137: TRISC = 0;
  1802  02E8  0187               	clrf	7	;volatile
  1803                           
  1804                           ;Othello.c: 140: TMR1ON = 1;
  1805  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  1806  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  1807  02EB  1410               	bsf	16,0	;volatile
  1808                           
  1809                           ;Othello.c: 141: TMR1GE = 0;
  1810  02EC  1310               	bcf	16,6	;volatile
  1811                           
  1812                           ;Othello.c: 142: T1CKPS1 = 1; T1CKPS0 = 1;
  1813  02ED  1690               	bsf	16,5	;volatile
  1814  02EE  1610               	bsf	16,4	;volatile
  1815                           
  1816                           ;Othello.c: 143: TMR1CS = 0;
  1817  02EF  1090               	bcf	16,1	;volatile
  1818                           
  1819                           ;Othello.c: 144: TMR1IE = 0;
  1820  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  1821  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  1822  02F2  100C               	bcf	12,0	;volatile
  1823                           
  1824                           ;Othello.c: 145: TMR1IF = 0;
  1825  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1826  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1827  02F5  100C               	bcf	12,0	;volatile
  1828                           
  1829                           ;Othello.c: 156: SPEN = 1;
  1830  02F6  1798               	bsf	24,7	;volatile
  1831                           
  1832                           ;Othello.c: 157: SYNC = 0;
  1833  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  1834  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  1835  02F9  1218               	bcf	24,4	;volatile
  1836                           
  1837                           ;Othello.c: 158: TXEN = 1;
  1838  02FA  1698               	bsf	24,5	;volatile
  1839                           
  1840                           ;Othello.c: 159: CREN = 1;
  1841  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1842  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1843  02FD  1618               	bsf	24,4	;volatile
  1844                           
  1845                           ;Othello.c: 160: BRG16 = 1;
  1846  02FE  1683               	bsf	3,5	;RP0=1, select bank3
  1847  02FF  1703               	bsf	3,6	;RP1=1, select bank3
  1848  0300  1587               	bsf	7,3	;volatile
  1849                           
  1850                           ;Othello.c: 161: BRGH = 1;
  1851  0301  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0302  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0303  1518               	bsf	24,2	;volatile
  1854                           
  1855                           ;Othello.c: 162: SPBRG = 207;
  1856  0304  30CF               	movlw	207
  1857  0305  0099               	movwf	25	;volatile
  1858                           
  1859                           ;Othello.c: 164: GIE = 1;
  1860  0306  178B               	bsf	11,7	;volatile
  1861                           
  1862                           ;Othello.c: 165: PEIE = 1;
  1863  0307  170B               	bsf	11,6	;volatile
  1864  0308  0008               	return
  1865  0309                     __end_of_setup:	
  1866                           
  1867                           	psect	text2
  1868  034A                     __ptext2:	
  1869 ;; *************** function _matrixSetup *****************
  1870 ;; Defined at:
  1871 ;;		line 92 in file "Othello.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         0       0       0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    3
  1892 ;; This function calls:
  1893 ;;		_I2C_SendAddress
  1894 ;;		_I2C_SendByte
  1895 ;;		_I2C_Start
  1896 ;;		_I2C_Stop
  1897 ;; This function is called by:
  1898 ;;		_setup
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _matrixSetup
  1904  034A                     _matrixSetup:	
  1905                           
  1906                           ;Othello.c: 93: I2C_Start();
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _matrixSetup: [wreg+status,2+status,0+pclath+cstack]
  1910  034A  120A  118A  206E  120A  118A  	fcall	_I2C_Start
  1911                           
  1912                           ;Othello.c: 94: I2C_SendAddress((0x70), 0x00);
  1913  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1914  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0351  01B9               	clrf	I2C_SendAddress@rw
  1916  0352  3070               	movlw	112
  1917  0353  120A  118A  2060  120A  118A  	fcall	_I2C_SendAddress
  1918                           
  1919                           ;Othello.c: 95: I2C_SendByte(0x21);
  1920  0358  3021               	movlw	33
  1921  0359  120A  118A  20C5  120A  118A  	fcall	_I2C_SendByte
  1922                           
  1923                           ;Othello.c: 96: I2C_Stop();
  1924  035E  120A  118A  207C  120A  118A  	fcall	_I2C_Stop
  1925                           
  1926                           ;Othello.c: 97: I2C_Start();
  1927  0363  120A  118A  206E  120A  118A  	fcall	_I2C_Start
  1928                           
  1929                           ;Othello.c: 98: I2C_SendAddress((0x70), 0x00);
  1930  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1932  036A  01B9               	clrf	I2C_SendAddress@rw
  1933  036B  3070               	movlw	112
  1934  036C  120A  118A  2060  120A  118A  	fcall	_I2C_SendAddress
  1935                           
  1936                           ;Othello.c: 99: I2C_SendByte(0xE0 | 0xf);
  1937  0371  30EF               	movlw	239
  1938  0372  120A  118A  20C5  120A  118A  	fcall	_I2C_SendByte
  1939                           
  1940                           ;Othello.c: 100: I2C_Stop();
  1941  0377  120A  118A  207C  120A  118A  	fcall	_I2C_Stop
  1942                           
  1943                           ;Othello.c: 101: I2C_Start();
  1944  037C  120A  118A  206E  120A  118A  	fcall	_I2C_Start
  1945                           
  1946                           ;Othello.c: 102: I2C_SendAddress((0x70), 0x00);
  1947  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0383  01B9               	clrf	I2C_SendAddress@rw
  1950  0384  3070               	movlw	112
  1951  0385  120A  118A  2060  120A  118A  	fcall	_I2C_SendAddress
  1952                           
  1953                           ;Othello.c: 103: I2C_SendByte(0x81);
  1954  038A  3081               	movlw	129
  1955  038B  120A  118A  20C5  120A  118A  	fcall	_I2C_SendByte
  1956                           
  1957                           ;Othello.c: 104: I2C_Stop();
  1958  0390  120A  118A  207C   	fcall	_I2C_Stop
  1959  0393  0008               	return
  1960  0394                     __end_of_matrixSetup:	
  1961                           
  1962                           	psect	text3
  1963  043C                     __ptext3:	
  1964 ;; *************** function _lcd_init *****************
  1965 ;; Defined at:
  1966 ;;		line 176 in file "lcd4bit/lcd4bits.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          0       1       0       0       0
  1983 ;;      Totals:         0       1       0       0       0
  1984 ;;Total ram usage:        1 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    5
  1987 ;; This function calls:
  1988 ;;		_DelayMs
  1989 ;;		_lcd_clear
  1990 ;;		_lcd_write
  1991 ;;		_tmr0_init
  1992 ;; This function is called by:
  1993 ;;		_setup
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _lcd_init
  1999  043C                     _lcd_init:	
  2000                           
  2001                           ;lcd4bits.c: 178: ANSEL = ANSEL & 0xE0;
  2002                           
  2003                           ;incstack = 0
  2004                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2005  043C  1683               	bsf	3,5	;RP0=1, select bank3
  2006  043D  1703               	bsf	3,6	;RP1=1, select bank3
  2007  043E  0808               	movf	8,w	;volatile
  2008  043F  39E0               	andlw	224
  2009  0440  0088               	movwf	8	;volatile
  2010                           
  2011                           ;lcd4bits.c: 179: TRISA = 0x00;
  2012  0441  1683               	bsf	3,5	;RP0=1, select bank1
  2013  0442  1303               	bcf	3,6	;RP1=0, select bank1
  2014  0443  0185               	clrf	5	;volatile
  2015                           
  2016                           ;lcd4bits.c: 180: PORTA = 0b00000000;
  2017  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0446  0185               	clrf	5	;volatile
  2020                           
  2021                           ;lcd4bits.c: 181: tmr0_init();
  2022  0447  120A  118A  2036  120A  118A  	fcall	_tmr0_init
  2023                           
  2024                           ;lcd4bits.c: 182: RA5 = 0;
  2025  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2026  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2027  044E  1285               	bcf	5,5	;volatile
  2028                           
  2029                           ;lcd4bits.c: 183: RA4 = 0;
  2030  044F  1205               	bcf	5,4	;volatile
  2031                           
  2032                           ;lcd4bits.c: 184: DelayMs(15);
  2033  0450  300F               	movlw	15
  2034  0451  00B8               	movwf	DelayMs@millis
  2035  0452  3000               	movlw	0
  2036  0453  00B9               	movwf	DelayMs@millis+1
  2037  0454  120A  118A  20DA  120A  118A  	fcall	_DelayMs
  2038                           
  2039                           ;lcd4bits.c: 185: lcd_write(0, 0x28);
  2040  0459  3028               	movlw	40
  2041  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2042  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2043  045C  00BC               	movwf	??_lcd_init
  2044  045D  083C               	movf	??_lcd_init,w
  2045  045E  00B9               	movwf	lcd_write@CmdChar
  2046  045F  3000               	movlw	0
  2047  0460  120A  118A  225E  120A  118A  	fcall	_lcd_write
  2048                           
  2049                           ;lcd4bits.c: 186: DelayMs(15);
  2050  0465  300F               	movlw	15
  2051  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0468  00B8               	movwf	DelayMs@millis
  2054  0469  3000               	movlw	0
  2055  046A  00B9               	movwf	DelayMs@millis+1
  2056  046B  120A  118A  20DA  120A  118A  	fcall	_DelayMs
  2057                           
  2058                           ;lcd4bits.c: 187: lcd_write(0, 0x28);
  2059  0470  3028               	movlw	40
  2060  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0473  00BC               	movwf	??_lcd_init
  2063  0474  083C               	movf	??_lcd_init,w
  2064  0475  00B9               	movwf	lcd_write@CmdChar
  2065  0476  3000               	movlw	0
  2066  0477  120A  118A  225E  120A  118A  	fcall	_lcd_write
  2067                           
  2068                           ;lcd4bits.c: 188: lcd_write(0, 0x0C);
  2069  047C  300C               	movlw	12
  2070  047D  1283               	bcf	3,5	;RP0=0, select bank0
  2071  047E  1303               	bcf	3,6	;RP1=0, select bank0
  2072  047F  00BC               	movwf	??_lcd_init
  2073  0480  083C               	movf	??_lcd_init,w
  2074  0481  00B9               	movwf	lcd_write@CmdChar
  2075  0482  3000               	movlw	0
  2076  0483  120A  118A  225E  120A  118A  	fcall	_lcd_write
  2077                           
  2078                           ;lcd4bits.c: 189: lcd_clear();
  2079  0488  120A  118A  20B1  120A  118A  	fcall	_lcd_clear
  2080                           
  2081                           ;lcd4bits.c: 190: lcd_write(0, 0x06);
  2082  048D  3006               	movlw	6
  2083  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2084  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0490  00BC               	movwf	??_lcd_init
  2086  0491  083C               	movf	??_lcd_init,w
  2087  0492  00B9               	movwf	lcd_write@CmdChar
  2088  0493  3000               	movlw	0
  2089  0494  120A  118A  225E   	fcall	_lcd_write
  2090  0497  0008               	return
  2091  0498                     __end_of_lcd_init:	
  2092                           
  2093                           	psect	text4
  2094  0036                     __ptext4:	
  2095 ;; *************** function _tmr0_init *****************
  2096 ;; Defined at:
  2097 ;;		line 73 in file "lcd4bit/lcd4bits.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;		None
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2111 ;;      Params:         0       0       0       0       0
  2112 ;;      Locals:         0       0       0       0       0
  2113 ;;      Temps:          1       0       0       0       0
  2114 ;;      Totals:         1       0       0       0       0
  2115 ;;Total ram usage:        1 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    1
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_lcd_init
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           
  2126                           ;psect for function _tmr0_init
  2127  0036                     _tmr0_init:	
  2128                           
  2129                           ;lcd4bits.c: 77: OPTION_REG &= 0xC0;
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _tmr0_init: [wreg+status,2+status,0]
  2133  0036  30C0               	movlw	192
  2134  0037  00F6               	movwf	??_tmr0_init
  2135  0038  0876               	movf	??_tmr0_init,w
  2136  0039  1683               	bsf	3,5	;RP0=1, select bank1
  2137  003A  1303               	bcf	3,6	;RP1=0, select bank1
  2138  003B  0581               	andwf	1,f	;volatile
  2139                           
  2140                           ;lcd4bits.c: 79: OPTION_REG |= 0x02;
  2141  003C  1481               	bsf	1,1	;volatile
  2142  003D  0008               	return
  2143  003E                     __end_of_tmr0_init:	
  2144                           
  2145                           	psect	text5
  2146  00B1                     __ptext5:	
  2147 ;; *************** function _lcd_clear *****************
  2148 ;; Defined at:
  2149 ;;		line 145 in file "lcd4bit/lcd4bits.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, pclath, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2163 ;;      Params:         0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    4
  2170 ;; This function calls:
  2171 ;;		_DelayMs
  2172 ;;		_lcd_write
  2173 ;; This function is called by:
  2174 ;;		_lcd_init
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _lcd_clear
  2181  00B1                     _lcd_clear:	
  2182                           
  2183                           ;lcd4bits.c: 146: lcd_write(0, 0x01);
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2187  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  2188  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  2189  00B3  01B9               	clrf	lcd_write@CmdChar
  2190  00B4  0AB9               	incf	lcd_write@CmdChar,f
  2191  00B5  3000               	movlw	0
  2192  00B6  120A  118A  225E  120A  118A  	fcall	_lcd_write
  2193                           
  2194                           ;lcd4bits.c: 147: DelayMs(2);
  2195  00BB  3002               	movlw	2
  2196  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  2197  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  2198  00BE  00B8               	movwf	DelayMs@millis
  2199  00BF  3000               	movlw	0
  2200  00C0  00B9               	movwf	DelayMs@millis+1
  2201  00C1  120A  118A  20DA   	fcall	_DelayMs
  2202  00C4  0008               	return
  2203  00C5                     __end_of_lcd_clear:	
  2204                           
  2205                           	psect	text6
  2206  009E                     __ptext6:	
  2207 ;; *************** function _I2C_Initialize *****************
  2208 ;; Defined at:
  2209 ;;		line 73 in file "i2c/i2c.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         0       0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0
  2226 ;;      Totals:         0       0       0       0       0
  2227 ;;Total ram usage:        0 bytes
  2228 ;; Hardware stack levels used:    1
  2229 ;; Hardware stack levels required when called:    1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_setup
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _I2C_Initialize
  2239  009E                     _I2C_Initialize:	
  2240                           
  2241                           ;i2c.c: 75: TRISC3=1;
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  2245  009E  1683               	bsf	3,5	;RP0=1, select bank1
  2246  009F  1303               	bcf	3,6	;RP1=0, select bank1
  2247  00A0  1587               	bsf	7,3	;volatile
  2248                           
  2249                           ;i2c.c: 76: TRISC4=1;
  2250  00A1  1607               	bsf	7,4	;volatile
  2251                           
  2252                           ;i2c.c: 79: SSPSTAT = 0x00;
  2253  00A2  0194               	clrf	20	;volatile
  2254                           
  2255                           ;i2c.c: 81: SSPCON = 0x28;
  2256  00A3  3028               	movlw	40
  2257  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  2258  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  2259  00A6  0094               	movwf	20	;volatile
  2260                           
  2261                           ;i2c.c: 83: SSPCON2 = 0x00;
  2262  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  2263  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  2264  00A9  0191               	clrf	17	;volatile
  2265                           
  2266                           ;i2c.c: 85: SSPADD = 99;
  2267  00AA  3063               	movlw	99
  2268  00AB  0093               	movwf	19	;volatile
  2269                           
  2270                           ;i2c.c: 89: BCLIF=0;
  2271  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  2272  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  2273  00AE  118D               	bcf	13,3	;volatile
  2274                           
  2275                           ;i2c.c: 91: SSPIF = 0;
  2276  00AF  118C               	bcf	12,3	;volatile
  2277  00B0  0008               	return
  2278  00B1                     __end_of_I2C_Initialize:	
  2279                           
  2280                           	psect	text7
  2281  04FD                     __ptext7:	
  2282 ;; *************** function _sendMatrix *****************
  2283 ;; Defined at:
  2284 ;;		line 219 in file "Othello.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  PointerR        1    wreg     unsigned char 
  2287 ;;  PointerC        1    8[BANK0 ] unsigned char 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  PointerR        1   11[BANK0 ] unsigned char 
  2290 ;;  c               1   13[BANK0 ] unsigned char 
  2291 ;;  r               1   12[BANK0 ] unsigned char 
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2301 ;;      Params:         0       1       0       0       0
  2302 ;;      Locals:         0       3       0       0       0
  2303 ;;      Temps:          0       2       0       0       0
  2304 ;;      Totals:         0       6       0       0       0
  2305 ;;Total ram usage:        6 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    2
  2308 ;; This function calls:
  2309 ;;		_OutChar
  2310 ;;		_checkPositionFree
  2311 ;; This function is called by:
  2312 ;;		_main
  2313 ;;		_legalPlay
  2314 ;;		_drawFrom
  2315 ;;		_playPeice
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _sendMatrix
  2321  04FD                     _sendMatrix:	
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _sendMatrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2325                           ;sendMatrix@PointerR stored from wreg
  2326  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2327  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2328  04FF  00C3               	movwf	sendMatrix@PointerR
  2329                           
  2330                           ;Othello.c: 220: for(char r = 0; r<8; r++) {
  2331  0500  01C4               	clrf	sendMatrix@r
  2332  0501  3008               	movlw	8
  2333  0502  0244               	subwf	sendMatrix@r,w
  2334  0503  1803               	btfsc	3,0
  2335  0504  2D79               	goto	l2614
  2336  0505                     l2578:	
  2337                           
  2338                           ;Othello.c: 221: for(char c = 0; c<8; c++) {
  2339  0505  01C5               	clrf	sendMatrix@c
  2340  0506  3008               	movlw	8
  2341  0507  0245               	subwf	sendMatrix@c,w
  2342  0508  1803               	btfsc	3,0
  2343  0509  2D63               	goto	l2608
  2344  050A                     l2584:	
  2345                           
  2346                           ;Othello.c: 222: if(r == PointerR && c == PointerC) {
  2347  050A  0844               	movf	sendMatrix@r,w
  2348  050B  0643               	xorwf	sendMatrix@PointerR,w
  2349  050C  1D03               	skipz
  2350  050D  2D14               	goto	l2590
  2351  050E  0845               	movf	sendMatrix@c,w
  2352  050F  0640               	xorwf	sendMatrix@PointerC,w
  2353  0510  1D03               	skipz
  2354  0511  2D14               	goto	l2590
  2355                           
  2356                           ;Othello.c: 223: OutChar('!');
  2357  0512  3021               	movlw	33
  2358  0513  2D54               	goto	L1
  2359  0514                     l2590:	
  2360                           ;Othello.c: 224: continue;
  2361                           
  2362                           
  2363                           ;Othello.c: 225: }
  2364                           ;Othello.c: 226: if(checkPositionFree(r,c,AllPos) == 1) {
  2365  0514  1283               	bcf	3,5	;RP0=0, select bank0
  2366  0515  1303               	bcf	3,6	;RP1=0, select bank0
  2367  0516  0845               	movf	sendMatrix@c,w
  2368  0517  00C1               	movwf	??_sendMatrix
  2369  0518  0841               	movf	??_sendMatrix,w
  2370  0519  00B8               	movwf	checkPositionFree@col
  2371  051A  3020               	movlw	(low (_AllPos| 0))& (0+255)
  2372  051B  00C2               	movwf	??_sendMatrix+1
  2373  051C  0842               	movf	??_sendMatrix+1,w
  2374  051D  00B9               	movwf	checkPositionFree@colorArray
  2375  051E  0844               	movf	sendMatrix@r,w
  2376  051F  120A  118A  2296  120A  118A  	fcall	_checkPositionFree
  2377  0524  3A01               	xorlw	1
  2378  0525  1D03               	skipz
  2379  0526  2D29               	goto	l2594
  2380                           
  2381                           ;Othello.c: 227: OutChar('.');
  2382  0527  302E               	movlw	46
  2383  0528  2D54               	goto	L1
  2384  0529                     l2594:	
  2385                           ;Othello.c: 228: } else {
  2386                           
  2387                           
  2388                           ;Othello.c: 229: if(checkPositionFree(r,c,GreenPos) == 1) {
  2389  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2390  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2391  052B  0845               	movf	sendMatrix@c,w
  2392  052C  00C1               	movwf	??_sendMatrix
  2393  052D  0841               	movf	??_sendMatrix,w
  2394  052E  00B8               	movwf	checkPositionFree@col
  2395  052F  3028               	movlw	(low (_GreenPos| 0))& (0+255)
  2396  0530  00C2               	movwf	??_sendMatrix+1
  2397  0531  0842               	movf	??_sendMatrix+1,w
  2398  0532  00B9               	movwf	checkPositionFree@colorArray
  2399  0533  0844               	movf	sendMatrix@r,w
  2400  0534  120A  118A  2296  120A  118A  	fcall	_checkPositionFree
  2401  0539  3A01               	xorlw	1
  2402  053A  1D03               	skipz
  2403  053B  2D53               	goto	l2602
  2404                           
  2405                           ;Othello.c: 230: if (checkPositionFree(r,c,RedPos)) {
  2406  053C  1283               	bcf	3,5	;RP0=0, select bank0
  2407  053D  1303               	bcf	3,6	;RP1=0, select bank0
  2408  053E  0845               	movf	sendMatrix@c,w
  2409  053F  00C1               	movwf	??_sendMatrix
  2410  0540  0841               	movf	??_sendMatrix,w
  2411  0541  00B8               	movwf	checkPositionFree@col
  2412  0542  3030               	movlw	(low (_RedPos| 0))& (0+255)
  2413  0543  00C2               	movwf	??_sendMatrix+1
  2414  0544  0842               	movf	??_sendMatrix+1,w
  2415  0545  00B9               	movwf	checkPositionFree@colorArray
  2416  0546  0844               	movf	sendMatrix@r,w
  2417  0547  120A  118A  2296  120A  118A  	fcall	_checkPositionFree
  2418  054C  3A00               	xorlw	0
  2419  054D  1903               	skipnz
  2420  054E  2D51               	goto	l2600
  2421                           
  2422                           ;Othello.c: 231: OutChar('?');
  2423  054F  303F               	movlw	63
  2424  0550  2D54               	goto	L1
  2425  0551                     l2600:	
  2426                           ;Othello.c: 232: } else {
  2427                           
  2428                           
  2429                           ;Othello.c: 233: OutChar('X');
  2430  0551  3058               	movlw	88
  2431  0552  2D54               	goto	L1
  2432  0553                     l2602:	
  2433                           ;Othello.c: 234: }
  2434                           ;Othello.c: 235: } else {
  2435                           
  2436                           
  2437                           ;Othello.c: 236: OutChar('O');
  2438  0553  304F               	movlw	79
  2439  0554                     L1:	
  2440  0554  120A  118A  202E  120A  118A  	fcall	_OutChar
  2441  0559  3001               	movlw	1
  2442  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2443  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2444  055C  00C1               	movwf	??_sendMatrix
  2445  055D  0841               	movf	??_sendMatrix,w
  2446  055E  07C5               	addwf	sendMatrix@c,f
  2447  055F  3008               	movlw	8
  2448  0560  0245               	subwf	sendMatrix@c,w
  2449  0561  1C03               	skipc
  2450  0562  2D0A               	goto	l2584
  2451  0563                     l2608:	
  2452                           
  2453                           ;Othello.c: 237: }
  2454                           ;Othello.c: 238: }
  2455                           ;Othello.c: 239: }
  2456                           ;Othello.c: 240: OutChar(0x0A);
  2457  0563  300A               	movlw	10
  2458  0564  120A  118A  202E  120A  118A  	fcall	_OutChar
  2459                           
  2460                           ;Othello.c: 241: OutChar(0x0D);
  2461  0569  300D               	movlw	13
  2462  056A  120A  118A  202E  120A  118A  	fcall	_OutChar
  2463  056F  3001               	movlw	1
  2464  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0572  00C1               	movwf	??_sendMatrix
  2467  0573  0841               	movf	??_sendMatrix,w
  2468  0574  07C4               	addwf	sendMatrix@r,f
  2469  0575  3008               	movlw	8
  2470  0576  0244               	subwf	sendMatrix@r,w
  2471  0577  1C03               	skipc
  2472  0578  2D05               	goto	l2578
  2473  0579                     l2614:	
  2474                           
  2475                           ;Othello.c: 242: }
  2476                           ;Othello.c: 243: OutChar(0x0A);
  2477  0579  300A               	movlw	10
  2478  057A  120A  118A  202E  120A  118A  	fcall	_OutChar
  2479                           
  2480                           ;Othello.c: 244: OutChar(0x0D);
  2481  057F  300D               	movlw	13
  2482  0580  120A  118A  202E   	fcall	_OutChar
  2483  0583  0008               	return
  2484  0584                     __end_of_sendMatrix:	
  2485                           
  2486                           	psect	text8
  2487  0296                     __ptext8:	
  2488 ;; *************** function _checkPositionFree *****************
  2489 ;; Defined at:
  2490 ;;		line 199 in file "Othello.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;  row             1    wreg     unsigned char 
  2493 ;;  col             1    0[BANK0 ] unsigned char 
  2494 ;;  colorArray      1    1[BANK0 ] PTR unsigned char 
  2495 ;;		 -> RedPos(8), GreenPos(8), AllPos(8), 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  row             1    6[BANK0 ] unsigned char 
  2498 ;;  temp            1    7[BANK0 ] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      unsigned char 
  2501 ;; Registers used:
  2502 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       2       0       0       0
  2509 ;;      Locals:         0       2       0       0       0
  2510 ;;      Temps:          0       4       0       0       0
  2511 ;;      Totals:         0       8       0       0       0
  2512 ;;Total ram usage:        8 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_sendMatrix
  2519 ;;		_legalPlay
  2520 ;;		_drawFrom
  2521 ;;		_playPeice
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _checkPositionFree
  2527  0296                     _checkPositionFree:	
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _checkPositionFree: [wreg-fsr0h+status,2+status,0]
  2531                           ;checkPositionFree@row stored from wreg
  2532  0296  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0297  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0298  00BE               	movwf	checkPositionFree@row
  2535                           
  2536                           ;Othello.c: 200: char temp = 0x80>>col;
  2537  0299  0A38               	incf	checkPositionFree@col,w
  2538  029A  00BA               	movwf	??_checkPositionFree
  2539  029B  3080               	movlw	128
  2540  029C  00BB               	movwf	??_checkPositionFree+1
  2541  029D  3000               	movlw	0
  2542  029E  00BC               	movwf	??_checkPositionFree+2
  2543  029F  2AA3               	goto	u2574
  2544  02A0                     u2575:	
  2545  02A0  0D3C               	rlf	??_checkPositionFree+2,w
  2546  02A1  0CBC               	rrf	??_checkPositionFree+2,f
  2547  02A2  0CBB               	rrf	??_checkPositionFree+1,f
  2548  02A3                     u2574:	
  2549  02A3  0BBA               	decfsz	??_checkPositionFree,f
  2550  02A4  2AA0               	goto	u2575
  2551  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  2552  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  2553  02A7  083B               	movf	??_checkPositionFree+1,w
  2554  02A8  00BD               	movwf	??_checkPositionFree+3
  2555  02A9  083D               	movf	??_checkPositionFree+3,w
  2556  02AA  00BF               	movwf	checkPositionFree@temp
  2557                           
  2558                           ;Othello.c: 201: temp ^= colorArray[row];
  2559  02AB  083E               	movf	checkPositionFree@row,w
  2560  02AC  0739               	addwf	checkPositionFree@colorArray,w
  2561  02AD  00BA               	movwf	??_checkPositionFree
  2562  02AE  083A               	movf	??_checkPositionFree,w
  2563  02AF  0084               	movwf	4
  2564  02B0  1383               	bcf	3,7	;select IRP bank0
  2565  02B1  0800               	movf	0,w
  2566  02B2  00BB               	movwf	??_checkPositionFree+1
  2567  02B3  083B               	movf	??_checkPositionFree+1,w
  2568  02B4  06BF               	xorwf	checkPositionFree@temp,f
  2569                           
  2570                           ;Othello.c: 202: temp &= colorArray[row];
  2571  02B5  083E               	movf	checkPositionFree@row,w
  2572  02B6  0739               	addwf	checkPositionFree@colorArray,w
  2573  02B7  00BA               	movwf	??_checkPositionFree
  2574  02B8  083A               	movf	??_checkPositionFree,w
  2575  02B9  0084               	movwf	4
  2576  02BA  0800               	movf	0,w
  2577  02BB  00BB               	movwf	??_checkPositionFree+1
  2578  02BC  083B               	movf	??_checkPositionFree+1,w
  2579  02BD  05BF               	andwf	checkPositionFree@temp,f
  2580                           
  2581                           ;Othello.c: 203: temp = temp == colorArray[row];
  2582  02BE  083E               	movf	checkPositionFree@row,w
  2583  02BF  0739               	addwf	checkPositionFree@colorArray,w
  2584  02C0  00BA               	movwf	??_checkPositionFree
  2585  02C1  083A               	movf	??_checkPositionFree,w
  2586  02C2  0084               	movwf	4
  2587  02C3  0800               	movf	0,w
  2588  02C4  063F               	xorwf	checkPositionFree@temp,w
  2589  02C5  1D03               	btfss	3,2
  2590  02C6  2AC9               	goto	u2580
  2591  02C7  3001               	movlw	1
  2592  02C8  2ACA               	goto	u2590
  2593  02C9                     u2580:	
  2594  02C9  3000               	movlw	0
  2595  02CA                     u2590:	
  2596  02CA  00BB               	movwf	??_checkPositionFree+1
  2597  02CB  083B               	movf	??_checkPositionFree+1,w
  2598  02CC  00BF               	movwf	checkPositionFree@temp
  2599                           
  2600                           ;Othello.c: 204: return temp;
  2601  02CD  083F               	movf	checkPositionFree@temp,w
  2602  02CE  0008               	return
  2603  02CF                     __end_of_checkPositionFree:	
  2604                           
  2605                           	psect	text9
  2606  019E                     __ptext9:	
  2607 ;; *************** function _lcd_puts *****************
  2608 ;; Defined at:
  2609 ;;		line 151 in file "lcd4bit/lcd4bits.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  string          2    4[BANK0 ] PTR const unsigned char 
  2612 ;;		 -> STR_20(9), STR_19(14), STR_18(6), STR_17(6), 
  2613 ;;		 -> STR_16(9), STR_15(14), STR_14(12), STR_13(11), 
  2614 ;;		 -> STR_12(14), STR_11(8), STR_10(6), STR_9(14), 
  2615 ;;		 -> STR_8(14), STR_7(13), STR_6(11), STR_4(10), 
  2616 ;;		 -> STR_3(14), STR_2(9), STR_1(12), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         0       2       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          0       1       0       0       0
  2631 ;;      Totals:         0       3       0       0       0
  2632 ;;Total ram usage:        3 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    4
  2635 ;; This function calls:
  2636 ;;		_lcd_write
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _lcd_puts
  2644  019E                     _lcd_puts:	
  2645  019E                     l2496:	
  2646                           ;lcd4bits.c: 152: while (*string != 0)
  2647                           
  2648                           ;incstack = 0
  2649                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2650                           
  2651  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2652  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2653  01A0  083D               	movf	lcd_puts@string+1,w
  2654  01A1  00FF               	movwf	127
  2655  01A2  083C               	movf	lcd_puts@string,w
  2656  01A3  0084               	movwf	4
  2657  01A4  120A  158A  2000  120A  118A  	fcall	stringtab
  2658  01A9  3A00               	xorlw	0
  2659  01AA  1903               	btfsc	3,2
  2660  01AB  0008               	return
  2661                           
  2662                           ;lcd4bits.c: 153: lcd_write(1, *string++);
  2663  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2664  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2665  01AE  083D               	movf	lcd_puts@string+1,w
  2666  01AF  00FF               	movwf	127
  2667  01B0  083C               	movf	lcd_puts@string,w
  2668  01B1  0084               	movwf	4
  2669  01B2  120A  158A  2000  120A  118A  	fcall	stringtab
  2670  01B7  00BE               	movwf	??_lcd_puts
  2671  01B8  083E               	movf	??_lcd_puts,w
  2672  01B9  00B9               	movwf	lcd_write@CmdChar
  2673  01BA  3001               	movlw	1
  2674  01BB  120A  118A  225E  120A  118A  	fcall	_lcd_write
  2675  01C0  3001               	movlw	1
  2676  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2677  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2678  01C3  07BC               	addwf	lcd_puts@string,f
  2679  01C4  1803               	skipnc
  2680  01C5  0ABD               	incf	lcd_puts@string+1,f
  2681  01C6  299E               	goto	l2496
  2682  01C7                     __end_of_lcd_puts:	
  2683                           
  2684                           	psect	text10
  2685  00F0                     __ptext10:	
  2686 ;; *************** function _lcd_goto *****************
  2687 ;; Defined at:
  2688 ;;		line 167 in file "lcd4bit/lcd4bits.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;  position        1    wreg     unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  position        1    5[BANK0 ] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0, pclath, cstack
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         0       0       0       0       0
  2703 ;;      Locals:         0       1       0       0       0
  2704 ;;      Temps:          0       1       0       0       0
  2705 ;;      Totals:         0       2       0       0       0
  2706 ;;Total ram usage:        2 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    4
  2709 ;; This function calls:
  2710 ;;		_DelayMs
  2711 ;;		_lcd_write
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           
  2718                           ;psect for function _lcd_goto
  2719  00F0                     _lcd_goto:	
  2720                           
  2721                           ;incstack = 0
  2722                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2723                           ;lcd_goto@position stored from wreg
  2724  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  2725  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  2726  00F2  00BD               	movwf	lcd_goto@position
  2727                           
  2728                           ;lcd4bits.c: 168: lcd_write(0, 0x80 + position);
  2729  00F3  083D               	movf	lcd_goto@position,w
  2730  00F4  3E80               	addlw	128
  2731  00F5  00BC               	movwf	??_lcd_goto
  2732  00F6  083C               	movf	??_lcd_goto,w
  2733  00F7  00B9               	movwf	lcd_write@CmdChar
  2734  00F8  3000               	movlw	0
  2735  00F9  120A  118A  225E  120A  118A  	fcall	_lcd_write
  2736                           
  2737                           ;lcd4bits.c: 170: DelayMs(2);
  2738  00FE  3002               	movlw	2
  2739  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2740  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2741  0101  00B8               	movwf	DelayMs@millis
  2742  0102  3000               	movlw	0
  2743  0103  00B9               	movwf	DelayMs@millis+1
  2744  0104  120A  118A  20DA   	fcall	_DelayMs
  2745  0107  0008               	return
  2746  0108                     __end_of_lcd_goto:	
  2747                           
  2748                           	psect	text11
  2749  00DA                     __ptext11:	
  2750 ;; *************** function _DelayMs *****************
  2751 ;; Defined at:
  2752 ;;		line 87 in file "lcd4bit/lcd4bits.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  millis          2    0[BANK0 ] unsigned int 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       2       0       0       0
  2767 ;;      Locals:         0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0
  2769 ;;      Totals:         0       2       0       0       0
  2770 ;;Total ram usage:        2 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    1
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_lcd_clear
  2777 ;;		_lcd_goto
  2778 ;;		_lcd_init
  2779 ;;		_main
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _DelayMs
  2785  00DA                     _DelayMs:	
  2786  00DA                     l2378:	
  2787                           ;lcd4bits.c: 88: while (millis != 0) {
  2788                           
  2789                           ;incstack = 0
  2790                           ; Regs used in _DelayMs: [wreg+status,2+status,0]
  2791                           
  2792  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2793  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2794  00DC  0838               	movf	DelayMs@millis,w
  2795  00DD  0439               	iorwf	DelayMs@millis+1,w
  2796  00DE  1903               	btfsc	3,2
  2797  00DF  0008               	return
  2798                           
  2799                           ;lcd4bits.c: 89: TMR0 = 9;
  2800  00E0  3009               	movlw	9
  2801  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2802  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2803  00E3  0081               	movwf	1	;volatile
  2804                           
  2805                           ;lcd4bits.c: 90: T0IF = 0;
  2806  00E4  110B               	bcf	11,2	;volatile
  2807  00E5                     l32:	
  2808                           ;lcd4bits.c: 91: while(T0IF == 0);
  2809                           
  2810  00E5  1D0B               	btfss	11,2	;volatile
  2811  00E6  28E5               	goto	l32
  2812                           
  2813                           ;lcd4bits.c: 92: millis--;
  2814  00E7  3001               	movlw	1
  2815  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2816  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2817  00EA  02B8               	subwf	DelayMs@millis,f
  2818  00EB  3000               	movlw	0
  2819  00EC  1C03               	skipc
  2820  00ED  03B9               	decf	DelayMs@millis+1,f
  2821  00EE  02B9               	subwf	DelayMs@millis+1,f
  2822  00EF  28DA               	goto	l2378
  2823  00F0                     __end_of_DelayMs:	
  2824                           
  2825                           	psect	text12
  2826  0178                     __ptext12:	
  2827 ;; *************** function _getKeypadPressed *****************
  2828 ;; Defined at:
  2829 ;;		line 280 in file "Othello.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  temp            1    3[BANK0 ] unsigned char 
  2834 ;;  temp2           1    2[BANK0 ] unsigned char 
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      unsigned char 
  2837 ;; Registers used:
  2838 ;;		wreg, status,2, status,0
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2844 ;;      Params:         0       0       0       0       0
  2845 ;;      Locals:         0       2       0       0       0
  2846 ;;      Temps:          0       2       0       0       0
  2847 ;;      Totals:         0       4       0       0       0
  2848 ;;Total ram usage:        4 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; Hardware stack levels required when called:    1
  2851 ;; This function calls:
  2852 ;;		Nothing
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           
  2859                           ;psect for function _getKeypadPressed
  2860  0178                     _getKeypadPressed:	
  2861                           
  2862                           ;Othello.c: 281: unsigned char temp = 0b11100000;
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in _getKeypadPressed: [wreg+status,2+status,0]
  2866  0178  30E0               	movlw	224
  2867  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2868  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2869  017B  00B8               	movwf	??_getKeypadPressed
  2870  017C  0838               	movf	??_getKeypadPressed,w
  2871  017D  00BB               	movwf	getKeypadPressed@temp
  2872                           
  2873                           ;Othello.c: 282: unsigned char temp2 = 0;
  2874  017E  01BA               	clrf	getKeypadPressed@temp2
  2875  017F                     l238:	
  2876                           ;Othello.c: 285: while((temp & 0xF0) != 0xF0) {
  2877                           
  2878  017F  30F0               	movlw	240
  2879  0180  053B               	andwf	getKeypadPressed@temp,w
  2880  0181  00B8               	movwf	??_getKeypadPressed
  2881  0182  30F0               	movlw	240
  2882  0183  0638               	xorwf	??_getKeypadPressed,w
  2883  0184  1903               	btfsc	3,2
  2884  0185  299C               	goto	l2668
  2885                           
  2886                           ;Othello.c: 286: PORTB = temp;
  2887  0186  083B               	movf	getKeypadPressed@temp,w
  2888  0187  0086               	movwf	6	;volatile
  2889                           
  2890                           ;Othello.c: 287: temp2 = PORTB & 0x0F;
  2891  0188  0806               	movf	6,w	;volatile
  2892  0189  390F               	andlw	15
  2893  018A  00B8               	movwf	??_getKeypadPressed
  2894  018B  0838               	movf	??_getKeypadPressed,w
  2895  018C  00BA               	movwf	getKeypadPressed@temp2
  2896                           
  2897                           ;Othello.c: 288: if(temp2 != 0x0F) {
  2898  018D  300F               	movlw	15
  2899  018E  063A               	xorwf	getKeypadPressed@temp2,w
  2900  018F  1903               	btfsc	3,2
  2901  0190  2993               	goto	l2666
  2902                           
  2903                           ;Othello.c: 289: return 1;
  2904  0191  3001               	movlw	1
  2905  0192  0008               	return
  2906  0193                     l2666:	
  2907                           
  2908                           ;Othello.c: 290: }
  2909                           ;Othello.c: 291: temp = ((temp & 0xF0) << 1) | 0x10;
  2910  0193  083B               	movf	getKeypadPressed@temp,w
  2911  0194  39F0               	andlw	240
  2912  0195  00B8               	movwf	??_getKeypadPressed
  2913  0196  0738               	addwf	??_getKeypadPressed,w
  2914  0197  3810               	iorlw	16
  2915  0198  00B9               	movwf	??_getKeypadPressed+1
  2916  0199  0839               	movf	??_getKeypadPressed+1,w
  2917  019A  00BB               	movwf	getKeypadPressed@temp
  2918  019B  297F               	goto	l238
  2919  019C                     l2668:	
  2920                           
  2921                           ;Othello.c: 292: }
  2922                           ;Othello.c: 293: return 0;
  2923  019C  3000               	movlw	0
  2924  019D  0008               	return
  2925  019E                     __end_of_getKeypadPressed:	
  2926                           
  2927                           	psect	text13
  2928  0498                     __ptext13:	
  2929 ;; *************** function _getKeypadKey *****************
  2930 ;; Defined at:
  2931 ;;		line 251 in file "Othello.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;		None
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  col             1    4[BANK0 ] unsigned char 
  2936 ;;  temp            1    3[BANK0 ] unsigned char 
  2937 ;;  temp2           1    2[BANK0 ] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      unsigned char 
  2940 ;; Registers used:
  2941 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         0       0       0       0       0
  2948 ;;      Locals:         0       3       0       0       0
  2949 ;;      Temps:          0       2       0       0       0
  2950 ;;      Totals:         0       5       0       0       0
  2951 ;;Total ram usage:        5 bytes
  2952 ;; Hardware stack levels used:    2
  2953 ;; Hardware stack levels required when called:    1
  2954 ;; This function calls:
  2955 ;;		Nothing
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           
  2962                           ;psect for function _getKeypadKey
  2963  0498                     _getKeypadKey:	
  2964                           
  2965                           ;Othello.c: 252: unsigned char temp = 0xE0;
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in _getKeypadKey: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2969  0498  30E0               	movlw	224
  2970  0499  1283               	bcf	3,5	;RP0=0, select bank0
  2971  049A  1303               	bcf	3,6	;RP1=0, select bank0
  2972  049B  00B8               	movwf	??_getKeypadKey
  2973  049C  0838               	movf	??_getKeypadKey,w
  2974  049D  00BB               	movwf	getKeypadKey@temp
  2975                           
  2976                           ;Othello.c: 253: unsigned char temp2 = 0;
  2977  049E  01BA               	clrf	getKeypadKey@temp2
  2978                           
  2979                           ;Othello.c: 254: unsigned char col = 0;
  2980  049F  01BC               	clrf	getKeypadKey@col
  2981  04A0                     l225:	
  2982                           ;Othello.c: 255: while(temp != 0xF0) {
  2983                           
  2984  04A0  30F0               	movlw	240
  2985  04A1  063B               	xorwf	getKeypadKey@temp,w
  2986  04A2  1903               	btfsc	3,2
  2987  04A3  2CFB               	goto	l2648
  2988                           
  2989                           ;Othello.c: 256: PORTB = temp;
  2990  04A4  083B               	movf	getKeypadKey@temp,w
  2991  04A5  0086               	movwf	6	;volatile
  2992                           
  2993                           ;Othello.c: 257: temp2 = PORTB & 0x0F;
  2994  04A6  0806               	movf	6,w	;volatile
  2995  04A7  390F               	andlw	15
  2996  04A8  00B8               	movwf	??_getKeypadKey
  2997  04A9  0838               	movf	??_getKeypadKey,w
  2998  04AA  00BA               	movwf	getKeypadKey@temp2
  2999                           
  3000                           ;Othello.c: 258: switch(temp2) {
  3001  04AB  2CE0               	goto	l2644
  3002  04AC                     l2626:	
  3003                           ;Othello.c: 259: case 0b00001110:
  3004                           
  3005                           
  3006                           ;Othello.c: 260: return KEYS[3][3-col];
  3007  04AC  033C               	decf	getKeypadKey@col,w
  3008  04AD  3AFF               	xorlw	255
  3009  04AE  3E03               	addlw	3
  3010  04AF  3E1E               	addlw	low ((_KEYS| (0+32768)+12))
  3011  04B0  0084               	movwf	4
  3012  04B1  3088               	movlw	high ((_KEYS| (0+32768)+12))
  3013  04B2  1803               	skipnc
  3014  04B3  3E01               	addlw	1
  3015  04B4  00FF               	movwf	127
  3016  04B5  120A  158A  2000   	fcall	stringtab
  3017  04B8  0008               	return
  3018  04B9                     l2630:	
  3019                           ;Othello.c: 261: case 0b00001101:
  3020                           
  3021                           
  3022                           ;Othello.c: 262: return KEYS[2][3-col];
  3023  04B9  033C               	decf	getKeypadKey@col,w
  3024  04BA  3AFF               	xorlw	255
  3025  04BB  3E03               	addlw	3
  3026  04BC  3E1A               	addlw	low ((_KEYS| (0+32768)+8))
  3027  04BD  0084               	movwf	4
  3028  04BE  3088               	movlw	high ((_KEYS| (0+32768)+8))
  3029  04BF  1803               	skipnc
  3030  04C0  3E01               	addlw	1
  3031  04C1  00FF               	movwf	127
  3032  04C2  120A  158A  2000   	fcall	stringtab
  3033  04C5  0008               	return
  3034  04C6                     l2634:	
  3035                           ;Othello.c: 263: case 0b00001011:
  3036                           
  3037                           
  3038                           ;Othello.c: 264: return KEYS[1][3-col];
  3039  04C6  033C               	decf	getKeypadKey@col,w
  3040  04C7  3AFF               	xorlw	255
  3041  04C8  3E03               	addlw	3
  3042  04C9  3E16               	addlw	low ((_KEYS| (0+32768)+4))
  3043  04CA  0084               	movwf	4
  3044  04CB  3088               	movlw	high ((_KEYS| (0+32768)+4))
  3045  04CC  1803               	skipnc
  3046  04CD  3E01               	addlw	1
  3047  04CE  00FF               	movwf	127
  3048  04CF  120A  158A  2000   	fcall	stringtab
  3049  04D2  0008               	return
  3050  04D3                     l2638:	
  3051                           ;Othello.c: 265: case 0b00000111:
  3052                           
  3053                           
  3054                           ;Othello.c: 266: return KEYS[0][3-col];
  3055  04D3  033C               	decf	getKeypadKey@col,w
  3056  04D4  3AFF               	xorlw	255
  3057  04D5  3E03               	addlw	3
  3058  04D6  3E12               	addlw	low (_KEYS| (0+32768))
  3059  04D7  0084               	movwf	4
  3060  04D8  3088               	movlw	high (_KEYS| (0+32768))
  3061  04D9  1803               	skipnc
  3062  04DA  3E01               	addlw	1
  3063  04DB  00FF               	movwf	127
  3064  04DC  120A  158A  2000   	fcall	stringtab
  3065  04DF  0008               	return
  3066  04E0                     l2644:	
  3067                           ;Othello.c: 269: }
  3068                           
  3069                           ;Othello.c: 268: break;
  3070                           
  3071                           ;Othello.c: 267: default:
  3072                           
  3073  04E0  083A               	movf	getKeypadKey@temp2,w
  3074                           
  3075                           ; Switch size 1, requested type "space"
  3076                           ; Number of cases is 4, Range of values is 7 to 14
  3077                           ; switch strategies available:
  3078                           ; Name         Instructions Cycles
  3079                           ; simple_byte           13     7 (average)
  3080                           ; direct_byte           35    11 (fixed)
  3081                           ; jumptable            263     9 (fixed)
  3082                           ;	Chosen strategy is simple_byte
  3083  04E1  3A07               	xorlw	7	; case 7
  3084  04E2  1903               	skipnz
  3085  04E3  2CD3               	goto	l2638
  3086  04E4  3A0C               	xorlw	12	; case 11
  3087  04E5  1903               	skipnz
  3088  04E6  2CC6               	goto	l2634
  3089  04E7  3A06               	xorlw	6	; case 13
  3090  04E8  1903               	skipnz
  3091  04E9  2CB9               	goto	l2630
  3092  04EA  3A03               	xorlw	3	; case 14
  3093  04EB  1903               	skipnz
  3094  04EC  2CAC               	goto	l2626
  3095  04ED  2CEE               	goto	l2646
  3096  04EE                     l2646:	
  3097                           
  3098                           ;Othello.c: 270: col++;
  3099  04EE  3001               	movlw	1
  3100  04EF  00B8               	movwf	??_getKeypadKey
  3101  04F0  0838               	movf	??_getKeypadKey,w
  3102  04F1  07BC               	addwf	getKeypadKey@col,f
  3103                           
  3104                           ;Othello.c: 271: temp = ((temp & 0xF0) << 1) | 0x10;
  3105  04F2  083B               	movf	getKeypadKey@temp,w
  3106  04F3  39F0               	andlw	240
  3107  04F4  00B8               	movwf	??_getKeypadKey
  3108  04F5  0738               	addwf	??_getKeypadKey,w
  3109  04F6  3810               	iorlw	16
  3110  04F7  00B9               	movwf	??_getKeypadKey+1
  3111  04F8  0839               	movf	??_getKeypadKey+1,w
  3112  04F9  00BB               	movwf	getKeypadKey@temp
  3113  04FA  2CA0               	goto	l225
  3114  04FB                     l2648:	
  3115                           
  3116                           ;Othello.c: 272: }
  3117                           ;Othello.c: 273: return 0;
  3118  04FB  3000               	movlw	0
  3119  04FC  0008               	return
  3120  04FD                     __end_of_getKeypadKey:	
  3121                           
  3122                           	psect	text14
  3123  0309                     __ptext14:	
  3124 ;; *************** function _drawMatrix *****************
  3125 ;; Defined at:
  3126 ;;		line 207 in file "Othello.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;		None
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  temp            1    9[BANK0 ] unsigned char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3140 ;;      Params:         0       0       0       0       0
  3141 ;;      Locals:         0       1       0       0       0
  3142 ;;      Temps:          0       1       0       0       0
  3143 ;;      Totals:         0       2       0       0       0
  3144 ;;Total ram usage:        2 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    3
  3147 ;; This function calls:
  3148 ;;		_I2C_SendAddress
  3149 ;;		_I2C_SendByte
  3150 ;;		_I2C_Start
  3151 ;;		_I2C_Stop
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _drawMatrix
  3159  0309                     _drawMatrix:	
  3160                           
  3161                           ;Othello.c: 208: I2C_Start();
  3162                           
  3163                           ;incstack = 0
  3164                           ; Regs used in _drawMatrix: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3165  0309  120A  118A  206E  120A  118A  	fcall	_I2C_Start
  3166                           
  3167                           ;Othello.c: 209: RD1 = 1;
  3168  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3169  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0310  1488               	bsf	8,1	;volatile
  3171                           
  3172                           ;Othello.c: 210: I2C_SendAddress((0x70), 0x00);
  3173  0311  01B9               	clrf	I2C_SendAddress@rw
  3174  0312  3070               	movlw	112
  3175  0313  120A  118A  2060  120A  118A  	fcall	_I2C_SendAddress
  3176                           
  3177                           ;Othello.c: 211: I2C_SendByte(0x00);
  3178  0318  3000               	movlw	0
  3179  0319  120A  118A  20C5  120A  118A  	fcall	_I2C_SendByte
  3180                           
  3181                           ;Othello.c: 212: for(char temp = 0; temp < 8; temp++) {
  3182  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3183  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0320  01C1               	clrf	drawMatrix@temp
  3185  0321  3008               	movlw	8
  3186  0322  0241               	subwf	drawMatrix@temp,w
  3187  0323  1803               	btfsc	3,0
  3188  0324  2B45               	goto	l206
  3189  0325                     l2564:	
  3190                           
  3191                           ;Othello.c: 213: I2C_SendByte(GreenPos[temp]);
  3192  0325  0841               	movf	drawMatrix@temp,w
  3193  0326  3E28               	addlw	(low (_GreenPos| 0))& (0+255)
  3194  0327  0084               	movwf	4
  3195  0328  1383               	bcf	3,7	;select IRP bank0
  3196  0329  0800               	movf	0,w
  3197  032A  120A  118A  20C5  120A  118A  	fcall	_I2C_SendByte
  3198                           
  3199                           ;Othello.c: 214: I2C_SendByte(RedPos[temp]);
  3200  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0331  0841               	movf	drawMatrix@temp,w
  3203  0332  3E30               	addlw	(low (_RedPos| 0))& (0+255)
  3204  0333  0084               	movwf	4
  3205  0334  1383               	bcf	3,7	;select IRP bank0
  3206  0335  0800               	movf	0,w
  3207  0336  120A  118A  20C5  120A  118A  	fcall	_I2C_SendByte
  3208  033B  3001               	movlw	1
  3209  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3210  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3211  033E  00C0               	movwf	??_drawMatrix
  3212  033F  0840               	movf	??_drawMatrix,w
  3213  0340  07C1               	addwf	drawMatrix@temp,f
  3214  0341  3008               	movlw	8
  3215  0342  0241               	subwf	drawMatrix@temp,w
  3216  0343  1C03               	skipc
  3217  0344  2B25               	goto	l2564
  3218  0345                     l206:	
  3219                           
  3220                           ;Othello.c: 215: }
  3221                           ;Othello.c: 216: RD1 = 0;
  3222  0345  1088               	bcf	8,1	;volatile
  3223                           
  3224                           ;Othello.c: 217: I2C_Stop();
  3225  0346  120A  118A  207C   	fcall	_I2C_Stop
  3226  0349  0008               	return
  3227  034A                     __end_of_drawMatrix:	
  3228                           
  3229                           	psect	text15
  3230  007C                     __ptext15:	
  3231 ;; *************** function _I2C_Stop *****************
  3232 ;; Defined at:
  3233 ;;		line 137 in file "i2c/i2c.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0, pclath, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3247 ;;      Params:         0       0       0       0       0
  3248 ;;      Locals:         0       0       0       0       0
  3249 ;;      Temps:          0       0       0       0       0
  3250 ;;      Totals:         0       0       0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used:    1
  3253 ;; Hardware stack levels required when called:    2
  3254 ;; This function calls:
  3255 ;;		_I2C_Idle_Status
  3256 ;; This function is called by:
  3257 ;;		_matrixSetup
  3258 ;;		_drawMatrix
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function _I2C_Stop
  3264  007C                     _I2C_Stop:	
  3265  007C                     l1706:	
  3266                           ;i2c.c: 139: while(I2C_Idle_Status());
  3267                           
  3268                           ;incstack = 0
  3269                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3270                           
  3271  007C  120A  118A  2228  120A  118A  	fcall	_I2C_Idle_Status
  3272  0081  3A00               	xorlw	0
  3273  0082  1D03               	skipz
  3274  0083  287C               	goto	l1706
  3275                           
  3276                           ;i2c.c: 140: SSPCON2bits.PEN = 1;
  3277  0084  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0085  1303               	bcf	3,6	;RP1=0, select bank1
  3279  0086  1511               	bsf	17,2	;volatile
  3280  0087                     l398:	
  3281                           ;i2c.c: 141: while(SSPCON2bits.PEN);
  3282                           
  3283  0087  1911               	btfsc	17,2	;volatile
  3284  0088  2887               	goto	l398
  3285                           
  3286                           ;i2c.c: 142: SSPIF = 0;
  3287  0089  1283               	bcf	3,5	;RP0=0, select bank0
  3288  008A  1303               	bcf	3,6	;RP1=0, select bank0
  3289  008B  118C               	bcf	12,3	;volatile
  3290  008C  0008               	return
  3291  008D                     __end_of_I2C_Stop:	
  3292                           
  3293                           	psect	text16
  3294  006E                     __ptext16:	
  3295 ;; *************** function _I2C_Start *****************
  3296 ;; Defined at:
  3297 ;;		line 112 in file "i2c/i2c.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0, pclath, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    2
  3318 ;; This function calls:
  3319 ;;		_I2C_Idle_Status
  3320 ;; This function is called by:
  3321 ;;		_matrixSetup
  3322 ;;		_drawMatrix
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           
  3327                           ;psect for function _I2C_Start
  3328  006E                     _I2C_Start:	
  3329  006E                     l1698:	
  3330                           ;i2c.c: 114: while(I2C_Idle_Status());
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3334                           
  3335  006E  120A  118A  2228  120A  118A  	fcall	_I2C_Idle_Status
  3336  0073  3A00               	xorlw	0
  3337  0074  1D03               	skipz
  3338  0075  286E               	goto	l1698
  3339                           
  3340                           ;i2c.c: 116: SSPCON2bits.SEN = 1;
  3341  0076  1683               	bsf	3,5	;RP0=1, select bank1
  3342  0077  1303               	bcf	3,6	;RP1=0, select bank1
  3343  0078  1411               	bsf	17,0	;volatile
  3344  0079                     l380:	
  3345                           ;i2c.c: 117: while(SSPCON2bits.SEN);
  3346                           
  3347  0079  1C11               	btfss	17,0	;volatile
  3348  007A  0008               	return
  3349  007B  2879               	goto	l380
  3350  007C                     __end_of_I2C_Start:	
  3351                           
  3352                           	psect	text17
  3353  0228                     __ptext17:	
  3354 ;; *************** function _I2C_Idle_Status *****************
  3355 ;; Defined at:
  3356 ;;		line 101 in file "i2c/i2c.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;		None
  3359 ;; Auto vars:     Size  Location     Type
  3360 ;;		None
  3361 ;; Return value:  Size  Location     Type
  3362 ;;                  1    wreg      unsigned char 
  3363 ;; Registers used:
  3364 ;;		wreg, status,2, status,0
  3365 ;; Tracked objects:
  3366 ;;		On entry : 0/0
  3367 ;;		On exit  : 0/0
  3368 ;;		Unchanged: 0/0
  3369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3370 ;;      Params:         0       0       0       0       0
  3371 ;;      Locals:         0       0       0       0       0
  3372 ;;      Temps:          0       8       0       0       0
  3373 ;;      Totals:         0       8       0       0       0
  3374 ;;Total ram usage:        8 bytes
  3375 ;; Hardware stack levels used:    1
  3376 ;; Hardware stack levels required when called:    1
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_I2C_Start
  3381 ;;		_I2C_Stop
  3382 ;;		_I2C_Restart
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           
  3387                           ;psect for function _I2C_Idle_Status
  3388  0228                     _I2C_Idle_Status:	
  3389                           
  3390                           ;i2c.c: 103: return (SSPSTATbits.R_nW | SSPCON2bits.SEN |
  3391                           ;i2c.c: 104: SSPCON2bits.RSEN | SSPCON2bits.PEN |
  3392                           ;i2c.c: 105: SSPCON2bits.RCEN | SSPCON2bits.ACKEN);
  3393                           
  3394                           ;incstack = 0
  3395                           ; Regs used in _I2C_Idle_Status: [wreg+status,2+status,0]
  3396  0228  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0229  1303               	bcf	3,6	;RP1=0, select bank1
  3398  022A  0E11               	swapf	17,w	;volatile
  3399  022B  3901               	andlw	1
  3400  022C  1283               	bcf	3,5	;RP0=0, select bank0
  3401  022D  1303               	bcf	3,6	;RP1=0, select bank0
  3402  022E  00B8               	movwf	??_I2C_Idle_Status
  3403  022F  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0230  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0231  0C11               	rrf	17,w	;volatile
  3406  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3407  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3408  0234  00B9               	movwf	??_I2C_Idle_Status+1
  3409  0235  0CB9               	rrf	??_I2C_Idle_Status+1,f
  3410  0236  0C39               	rrf	??_I2C_Idle_Status+1,w
  3411  0237  3901               	andlw	1
  3412  0238  00BA               	movwf	??_I2C_Idle_Status+2
  3413  0239  1683               	bsf	3,5	;RP0=1, select bank1
  3414  023A  1303               	bcf	3,6	;RP1=0, select bank1
  3415  023B  0C11               	rrf	17,w	;volatile
  3416  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3417  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3418  023E  00BB               	movwf	??_I2C_Idle_Status+3
  3419  023F  0C3B               	rrf	??_I2C_Idle_Status+3,w
  3420  0240  3901               	andlw	1
  3421  0241  00BC               	movwf	??_I2C_Idle_Status+4
  3422  0242  1683               	bsf	3,5	;RP0=1, select bank1
  3423  0243  1303               	bcf	3,6	;RP1=0, select bank1
  3424  0244  0C11               	rrf	17,w	;volatile
  3425  0245  3901               	andlw	1
  3426  0246  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0247  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0248  00BD               	movwf	??_I2C_Idle_Status+5
  3429  0249  1683               	bsf	3,5	;RP0=1, select bank1
  3430  024A  1303               	bcf	3,6	;RP1=0, select bank1
  3431  024B  0811               	movf	17,w	;volatile
  3432  024C  3901               	andlw	1
  3433  024D  1283               	bcf	3,5	;RP0=0, select bank0
  3434  024E  1303               	bcf	3,6	;RP1=0, select bank0
  3435  024F  00BE               	movwf	??_I2C_Idle_Status+6
  3436  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3437  0251  1303               	bcf	3,6	;RP1=0, select bank1
  3438  0252  0C14               	rrf	20,w	;volatile
  3439  0253  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0254  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0255  00BF               	movwf	??_I2C_Idle_Status+7
  3442  0256  0C3F               	rrf	??_I2C_Idle_Status+7,w
  3443  0257  3901               	andlw	1
  3444  0258  043E               	iorwf	??_I2C_Idle_Status+6,w
  3445  0259  043D               	iorwf	??_I2C_Idle_Status+5,w
  3446  025A  043C               	iorwf	??_I2C_Idle_Status+4,w
  3447  025B  043A               	iorwf	??_I2C_Idle_Status+2,w
  3448  025C  0438               	iorwf	??_I2C_Idle_Status,w
  3449  025D  0008               	return
  3450  025E                     __end_of_I2C_Idle_Status:	
  3451                           
  3452                           	psect	text18
  3453  0060                     __ptext18:	
  3454 ;; *************** function _I2C_SendAddress *****************
  3455 ;; Defined at:
  3456 ;;		line 172 in file "i2c/i2c.c"
  3457 ;; Parameters:    Size  Location     Type
  3458 ;;  address         1    wreg     unsigned char 
  3459 ;;  rw              1    1[BANK0 ] unsigned char 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  address         1    2[BANK0 ] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      unsigned char 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, pclath, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       1       0       0       0
  3472 ;;      Locals:         0       1       0       0       0
  3473 ;;      Temps:          0       0       0       0       0
  3474 ;;      Totals:         0       2       0       0       0
  3475 ;;Total ram usage:        2 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    2
  3478 ;; This function calls:
  3479 ;;		_I2C_SendByte
  3480 ;; This function is called by:
  3481 ;;		_matrixSetup
  3482 ;;		_drawMatrix
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           
  3487                           ;psect for function _I2C_SendAddress
  3488  0060                     _I2C_SendAddress:	
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _I2C_SendAddress: [wreg+status,2+status,0+pclath+cstack]
  3492                           ;I2C_SendAddress@address stored from wreg
  3493  0060  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0061  1303               	bcf	3,6	;RP1=0, select bank0
  3495  0062  00BA               	movwf	I2C_SendAddress@address
  3496                           
  3497                           ;i2c.c: 174: return I2C_SendByte(address | (rw?1:0));
  3498                           ;	Return value of _I2C_SendAddress is never used
  3499  0063  0839               	movf	I2C_SendAddress@rw,w
  3500  0064  1903               	btfsc	3,2
  3501  0065  2868               	goto	u2550
  3502  0066  3001               	movlw	1
  3503  0067  2869               	goto	u2560
  3504  0068                     u2550:	
  3505  0068  3000               	movlw	0
  3506  0069                     u2560:	
  3507  0069  043A               	iorwf	I2C_SendAddress@address,w
  3508  006A  120A  118A  20C5   	fcall	_I2C_SendByte
  3509  006D  0008               	return
  3510  006E                     __end_of_I2C_SendAddress:	
  3511                           
  3512                           	psect	text19
  3513  00C5                     __ptext19:	
  3514 ;; *************** function _I2C_SendByte *****************
  3515 ;; Defined at:
  3516 ;;		line 158 in file "i2c/i2c.c"
  3517 ;; Parameters:    Size  Location     Type
  3518 ;;  data            1    wreg     unsigned char 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  data            1    0[BANK0 ] unsigned char 
  3521 ;; Return value:  Size  Location     Type
  3522 ;;                  1    wreg      unsigned char 
  3523 ;; Registers used:
  3524 ;;		wreg, status,2, status,0
  3525 ;; Tracked objects:
  3526 ;;		On entry : 0/0
  3527 ;;		On exit  : 0/0
  3528 ;;		Unchanged: 0/0
  3529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3530 ;;      Params:         0       0       0       0       0
  3531 ;;      Locals:         0       1       0       0       0
  3532 ;;      Temps:          1       0       0       0       0
  3533 ;;      Totals:         1       1       0       0       0
  3534 ;;Total ram usage:        2 bytes
  3535 ;; Hardware stack levels used:    1
  3536 ;; Hardware stack levels required when called:    1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_matrixSetup
  3541 ;;		_drawMatrix
  3542 ;;		_I2C_SendAddress
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           
  3547                           ;psect for function _I2C_SendByte
  3548  00C5                     _I2C_SendByte:	
  3549                           
  3550                           ;incstack = 0
  3551                           ; Regs used in _I2C_SendByte: [wreg+status,2+status,0]
  3552                           ;I2C_SendByte@data stored from wreg
  3553  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  3554  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  3555  00C7  00B8               	movwf	I2C_SendByte@data
  3556                           
  3557                           ;i2c.c: 161: SSPBUF = data;
  3558  00C8  0838               	movf	I2C_SendByte@data,w
  3559  00C9  0093               	movwf	19	;volatile
  3560                           
  3561                           ;i2c.c: 162: SSPIF = 0;
  3562  00CA  118C               	bcf	12,3	;volatile
  3563  00CB                     l410:	
  3564                           ;i2c.c: 163: while(SSPSTATbits.R_nW);
  3565                           
  3566  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  3567  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  3568  00CD  1914               	btfsc	20,2	;volatile
  3569  00CE  28CB               	goto	l410
  3570                           
  3571                           ;i2c.c: 164: SSPIF = 0;
  3572  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  3573  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  3574  00D1  118C               	bcf	12,3	;volatile
  3575                           
  3576                           ;i2c.c: 165: return SSPCON2bits.ACKSTAT;
  3577  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  3578  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  3579  00D4  0E11               	swapf	17,w	;volatile
  3580  00D5  00F6               	movwf	??_I2C_SendByte
  3581  00D6  0CF6               	rrf	??_I2C_SendByte,f
  3582  00D7  0C76               	rrf	??_I2C_SendByte,w
  3583  00D8  3901               	andlw	1
  3584  00D9  0008               	return
  3585  00DA                     __end_of_I2C_SendByte:	
  3586                           
  3587                           	psect	text20
  3588  01F2                     __ptext20:	
  3589 ;; *************** function _displayNuber *****************
  3590 ;; Defined at:
  3591 ;;		line 404 in file "Othello.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;  num             1    wreg     unsigned char 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  num             1   10[BANK0 ] unsigned char 
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0, pclath, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3605 ;;      Params:         0       0       0       0       0
  3606 ;;      Locals:         0       1       0       0       0
  3607 ;;      Temps:          0       2       0       0       0
  3608 ;;      Totals:         0       3       0       0       0
  3609 ;;Total ram usage:        3 bytes
  3610 ;; Hardware stack levels used:    1
  3611 ;; Hardware stack levels required when called:    5
  3612 ;; This function calls:
  3613 ;;		___awdiv
  3614 ;;		___awmod
  3615 ;;		_lcd_putch
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function _displayNuber
  3623  01F2                     _displayNuber:	
  3624                           
  3625                           ;incstack = 0
  3626                           ; Regs used in _displayNuber: [wreg+status,2+status,0+pclath+cstack]
  3627                           ;displayNuber@num stored from wreg
  3628  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3629  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3630  01F4  00C2               	movwf	displayNuber@num
  3631                           
  3632                           ;Othello.c: 405: lcd_putch(0x30 + num/10);
  3633  01F5  300A               	movlw	10
  3634  01F6  00B8               	movwf	___awdiv@divisor
  3635  01F7  3000               	movlw	0
  3636  01F8  00B9               	movwf	___awdiv@divisor+1
  3637  01F9  0842               	movf	displayNuber@num,w
  3638  01FA  00C0               	movwf	??_displayNuber
  3639  01FB  01C1               	clrf	??_displayNuber+1
  3640  01FC  0840               	movf	??_displayNuber,w
  3641  01FD  00BA               	movwf	___awdiv@dividend
  3642  01FE  0841               	movf	??_displayNuber+1,w
  3643  01FF  00BB               	movwf	___awdiv@dividend+1
  3644  0200  120A  118A  23E1  120A  118A  	fcall	___awdiv
  3645  0205  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0206  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0207  0838               	movf	?___awdiv,w
  3648  0208  3E30               	addlw	48
  3649  0209  120A  118A  2054  120A  118A  	fcall	_lcd_putch
  3650                           
  3651                           ;Othello.c: 406: lcd_putch(0x30 + num%10);
  3652  020E  300A               	movlw	10
  3653  020F  1283               	bcf	3,5	;RP0=0, select bank0
  3654  0210  1303               	bcf	3,6	;RP1=0, select bank0
  3655  0211  00B8               	movwf	___awmod@divisor
  3656  0212  3000               	movlw	0
  3657  0213  00B9               	movwf	___awmod@divisor+1
  3658  0214  0842               	movf	displayNuber@num,w
  3659  0215  00C0               	movwf	??_displayNuber
  3660  0216  01C1               	clrf	??_displayNuber+1
  3661  0217  0840               	movf	??_displayNuber,w
  3662  0218  00BA               	movwf	___awmod@dividend
  3663  0219  0841               	movf	??_displayNuber+1,w
  3664  021A  00BB               	movwf	___awmod@dividend+1
  3665  021B  120A  118A  2394  120A  118A  	fcall	___awmod
  3666  0220  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0221  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0222  0838               	movf	?___awmod,w
  3669  0223  3E30               	addlw	48
  3670  0224  120A  118A  2054   	fcall	_lcd_putch
  3671  0227  0008               	return
  3672  0228                     __end_of_displayNuber:	
  3673                           
  3674                           	psect	text21
  3675  0054                     __ptext21:	
  3676 ;; *************** function _lcd_putch *****************
  3677 ;; Defined at:
  3678 ;;		line 157 in file "lcd4bit/lcd4bits.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  character       1    wreg     unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  character       1    5[BANK0 ] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       0       0       0       0
  3693 ;;      Locals:         0       1       0       0       0
  3694 ;;      Temps:          0       1       0       0       0
  3695 ;;      Totals:         0       2       0       0       0
  3696 ;;Total ram usage:        2 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    4
  3699 ;; This function calls:
  3700 ;;		_lcd_write
  3701 ;; This function is called by:
  3702 ;;		_displayNuber
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _lcd_putch
  3709  0054                     _lcd_putch:	
  3710                           
  3711                           ;incstack = 0
  3712                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  3713                           ;lcd_putch@character stored from wreg
  3714  0054  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0055  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0056  00BD               	movwf	lcd_putch@character
  3717                           
  3718                           ;lcd4bits.c: 158: lcd_write(1, character);
  3719  0057  083D               	movf	lcd_putch@character,w
  3720  0058  00BC               	movwf	??_lcd_putch
  3721  0059  083C               	movf	??_lcd_putch,w
  3722  005A  00B9               	movwf	lcd_write@CmdChar
  3723  005B  3001               	movlw	1
  3724  005C  120A  118A  225E   	fcall	_lcd_write
  3725  005F  0008               	return
  3726  0060                     __end_of_lcd_putch:	
  3727                           
  3728                           	psect	text22
  3729  025E                     __ptext22:	
  3730 ;; *************** function _lcd_write *****************
  3731 ;; Defined at:
  3732 ;;		line 126 in file "lcd4bit/lcd4bits.c"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;  mode            1    wreg     unsigned char 
  3735 ;;  CmdChar         1    1[BANK0 ] unsigned char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  mode            1    3[BANK0 ] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, pclath, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3747 ;;      Params:         0       1       0       0       0
  3748 ;;      Locals:         0       1       0       0       0
  3749 ;;      Temps:          0       1       0       0       0
  3750 ;;      Totals:         0       3       0       0       0
  3751 ;;Total ram usage:        3 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    3
  3754 ;; This function calls:
  3755 ;;		_Delay20us
  3756 ;;		_LCD_strobe
  3757 ;; This function is called by:
  3758 ;;		_lcd_clear
  3759 ;;		_lcd_puts
  3760 ;;		_lcd_putch
  3761 ;;		_lcd_goto
  3762 ;;		_lcd_init
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function _lcd_write
  3768  025E                     _lcd_write:	
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  3772                           ;lcd_write@mode stored from wreg
  3773  025E  1283               	bcf	3,5	;RP0=0, select bank0
  3774  025F  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0260  00BB               	movwf	lcd_write@mode
  3776                           
  3777                           ;lcd4bits.c: 128: PORTA = (CmdChar & 0xF0)>>4;
  3778  0261  0839               	movf	lcd_write@CmdChar,w
  3779  0262  00BA               	movwf	??_lcd_write
  3780  0263  3004               	movlw	4
  3781  0264                     u2495:	
  3782  0264  1003               	clrc
  3783  0265  0CBA               	rrf	??_lcd_write,f
  3784  0266  3EFF               	addlw	-1
  3785  0267  1D03               	skipz
  3786  0268  2A64               	goto	u2495
  3787  0269  083A               	movf	??_lcd_write,w
  3788  026A  390F               	andlw	15
  3789  026B  0085               	movwf	5	;volatile
  3790                           
  3791                           ;lcd4bits.c: 130: RA5 = mode;
  3792  026C  1C3B               	btfss	lcd_write@mode,0
  3793  026D  2A72               	goto	u2500
  3794  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3795  026F  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0270  1685               	bsf	5,5	;volatile
  3797  0271  2A75               	goto	l2384
  3798  0272                     u2500:	
  3799  0272  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0273  1303               	bcf	3,6	;RP1=0, select bank0
  3801  0274  1285               	bcf	5,5	;volatile
  3802  0275                     l2384:	
  3803                           
  3804                           ;lcd4bits.c: 131: LCD_strobe();
  3805  0275  120A  118A  203E  120A  118A  	fcall	_LCD_strobe
  3806                           
  3807                           ;lcd4bits.c: 133: Delay20us();
  3808  027A  120A  118A  2048  120A  118A  	fcall	_Delay20us
  3809                           
  3810                           ;lcd4bits.c: 134: PORTA = (CmdChar & 0x0F);
  3811  027F  1283               	bcf	3,5	;RP0=0, select bank0
  3812  0280  1303               	bcf	3,6	;RP1=0, select bank0
  3813  0281  0839               	movf	lcd_write@CmdChar,w
  3814  0282  390F               	andlw	15
  3815  0283  0085               	movwf	5	;volatile
  3816                           
  3817                           ;lcd4bits.c: 136: RA5 = mode;
  3818  0284  1C3B               	btfss	lcd_write@mode,0
  3819  0285  2A8A               	goto	u2520
  3820  0286  1283               	bcf	3,5	;RP0=0, select bank0
  3821  0287  1303               	bcf	3,6	;RP1=0, select bank0
  3822  0288  1685               	bsf	5,5	;volatile
  3823  0289  2A8D               	goto	l2392
  3824  028A                     u2520:	
  3825  028A  1283               	bcf	3,5	;RP0=0, select bank0
  3826  028B  1303               	bcf	3,6	;RP1=0, select bank0
  3827  028C  1285               	bcf	5,5	;volatile
  3828  028D                     l2392:	
  3829                           
  3830                           ;lcd4bits.c: 137: LCD_strobe();
  3831  028D  120A  118A  203E  120A  118A  	fcall	_LCD_strobe
  3832                           
  3833                           ;lcd4bits.c: 139: Delay20us();
  3834  0292  120A  118A  2048   	fcall	_Delay20us
  3835  0295  0008               	return
  3836  0296                     __end_of_lcd_write:	
  3837                           
  3838                           	psect	text23
  3839  003E                     __ptext23:	
  3840 ;; *************** function _LCD_strobe *****************
  3841 ;; Defined at:
  3842 ;;		line 109 in file "lcd4bit/lcd4bits.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0, pclath, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3856 ;;      Params:         0       0       0       0       0
  3857 ;;      Locals:         0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0
  3859 ;;      Totals:         0       0       0       0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels used:    1
  3862 ;; Hardware stack levels required when called:    2
  3863 ;; This function calls:
  3864 ;;		_Delay20us
  3865 ;; This function is called by:
  3866 ;;		_lcd_write
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           
  3871                           ;psect for function _LCD_strobe
  3872  003E                     _LCD_strobe:	
  3873                           
  3874                           ;lcd4bits.c: 110: RA4 = 1;
  3875                           
  3876                           ;incstack = 0
  3877                           ; Regs used in _LCD_strobe: [wreg+status,2+status,0+pclath+cstack]
  3878  003E  1283               	bcf	3,5	;RP0=0, select bank0
  3879  003F  1303               	bcf	3,6	;RP1=0, select bank0
  3880  0040  1605               	bsf	5,4	;volatile
  3881                           
  3882                           ;lcd4bits.c: 111: Delay20us();
  3883  0041  120A  118A  2048   	fcall	_Delay20us
  3884                           
  3885                           ;lcd4bits.c: 112: RA4 = 0;
  3886  0044  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0045  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0046  1205               	bcf	5,4	;volatile
  3889  0047  0008               	return
  3890  0048                     __end_of_LCD_strobe:	
  3891                           
  3892                           	psect	text24
  3893  0048                     __ptext24:	
  3894 ;; *************** function _Delay20us *****************
  3895 ;; Defined at:
  3896 ;;		line 100 in file "lcd4bit/lcd4bits.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;		None
  3899 ;; Auto vars:     Size  Location     Type
  3900 ;;  next            1    0[BANK0 ] unsigned char 
  3901 ;; Return value:  Size  Location     Type
  3902 ;;                  1    wreg      void 
  3903 ;; Registers used:
  3904 ;;		wreg, status,2, status,0
  3905 ;; Tracked objects:
  3906 ;;		On entry : 0/0
  3907 ;;		On exit  : 0/0
  3908 ;;		Unchanged: 0/0
  3909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3910 ;;      Params:         0       0       0       0       0
  3911 ;;      Locals:         0       1       0       0       0
  3912 ;;      Temps:          1       0       0       0       0
  3913 ;;      Totals:         1       1       0       0       0
  3914 ;;Total ram usage:        2 bytes
  3915 ;; Hardware stack levels used:    1
  3916 ;; Hardware stack levels required when called:    1
  3917 ;; This function calls:
  3918 ;;		Nothing
  3919 ;; This function is called by:
  3920 ;;		_LCD_strobe
  3921 ;;		_lcd_write
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           
  3926                           ;psect for function _Delay20us
  3927  0048                     _Delay20us:	
  3928                           
  3929                           ;lcd4bits.c: 101: unsigned char next;
  3930                           ;lcd4bits.c: 102: for (next = 0; next < 3; next++);
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in _Delay20us: [wreg+status,2+status,0]
  3934  0048  1283               	bcf	3,5	;RP0=0, select bank0
  3935  0049  1303               	bcf	3,6	;RP1=0, select bank0
  3936  004A  01B8               	clrf	Delay20us@next
  3937  004B                     L2:	
  3938  004B  3003               	movlw	3
  3939  004C  0238               	subwf	Delay20us@next,w
  3940  004D  1803               	btfsc	3,0
  3941  004E  0008               	return
  3942  004F  3001               	movlw	1
  3943  0050  00F6               	movwf	??_Delay20us
  3944  0051  0876               	movf	??_Delay20us,w
  3945  0052  07B8               	addwf	Delay20us@next,f
  3946  0053  284B               	goto	L2
  3947  0054                     __end_of_Delay20us:	
  3948                           
  3949                           	psect	text25
  3950  0394                     __ptext25:	
  3951 ;; *************** function ___awmod *****************
  3952 ;; Defined at:
  3953 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  divisor         2    0[BANK0 ] int 
  3956 ;;  dividend        2    2[BANK0 ] int 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  sign            1    5[BANK0 ] unsigned char 
  3959 ;;  counter         1    4[BANK0 ] unsigned char 
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  2    0[BANK0 ] int 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3969 ;;      Params:         0       4       0       0       0
  3970 ;;      Locals:         0       2       0       0       0
  3971 ;;      Temps:          1       0       0       0       0
  3972 ;;      Totals:         1       6       0       0       0
  3973 ;;Total ram usage:        7 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    1
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_displayNuber
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           
  3984                           ;psect for function ___awmod
  3985  0394                     ___awmod:	
  3986                           
  3987                           ;incstack = 0
  3988                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3989  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3990  0395  1303               	bcf	3,6	;RP1=0, select bank0
  3991  0396  01BD               	clrf	___awmod@sign
  3992  0397  1FBB               	btfss	___awmod@dividend+1,7
  3993  0398  2BA0               	goto	l2460
  3994  0399  09BA               	comf	___awmod@dividend,f
  3995  039A  09BB               	comf	___awmod@dividend+1,f
  3996  039B  0ABA               	incf	___awmod@dividend,f
  3997  039C  1903               	skipnz
  3998  039D  0ABB               	incf	___awmod@dividend+1,f
  3999  039E  01BD               	clrf	___awmod@sign
  4000  039F  0ABD               	incf	___awmod@sign,f
  4001  03A0                     l2460:	
  4002  03A0  1FB9               	btfss	___awmod@divisor+1,7
  4003  03A1  2BA7               	goto	l2464
  4004  03A2  09B8               	comf	___awmod@divisor,f
  4005  03A3  09B9               	comf	___awmod@divisor+1,f
  4006  03A4  0AB8               	incf	___awmod@divisor,f
  4007  03A5  1903               	skipnz
  4008  03A6  0AB9               	incf	___awmod@divisor+1,f
  4009  03A7                     l2464:	
  4010  03A7  0838               	movf	___awmod@divisor,w
  4011  03A8  0439               	iorwf	___awmod@divisor+1,w
  4012  03A9  1903               	btfsc	3,2
  4013  03AA  2BD4               	goto	l2482
  4014  03AB  01BC               	clrf	___awmod@counter
  4015  03AC  0ABC               	incf	___awmod@counter,f
  4016  03AD                     l2472:	
  4017  03AD  1BB9               	btfsc	___awmod@divisor+1,7
  4018  03AE  2BBB               	goto	l2474
  4019  03AF  3001               	movlw	1
  4020  03B0                     u2635:	
  4021  03B0  1003               	clrc
  4022  03B1  0DB8               	rlf	___awmod@divisor,f
  4023  03B2  0DB9               	rlf	___awmod@divisor+1,f
  4024  03B3  3EFF               	addlw	-1
  4025  03B4  1D03               	skipz
  4026  03B5  2BB0               	goto	u2635
  4027  03B6  3001               	movlw	1
  4028  03B7  00F6               	movwf	??___awmod
  4029  03B8  0876               	movf	??___awmod,w
  4030  03B9  07BC               	addwf	___awmod@counter,f
  4031  03BA  2BAD               	goto	l2472
  4032  03BB                     l2474:	
  4033  03BB  0839               	movf	___awmod@divisor+1,w
  4034  03BC  023B               	subwf	___awmod@dividend+1,w
  4035  03BD  1D03               	skipz
  4036  03BE  2BC1               	goto	u2655
  4037  03BF  0838               	movf	___awmod@divisor,w
  4038  03C0  023A               	subwf	___awmod@dividend,w
  4039  03C1                     u2655:	
  4040  03C1  1C03               	skipc
  4041  03C2  2BC9               	goto	l2478
  4042  03C3  0838               	movf	___awmod@divisor,w
  4043  03C4  02BA               	subwf	___awmod@dividend,f
  4044  03C5  0839               	movf	___awmod@divisor+1,w
  4045  03C6  1C03               	skipc
  4046  03C7  03BB               	decf	___awmod@dividend+1,f
  4047  03C8  02BB               	subwf	___awmod@dividend+1,f
  4048  03C9                     l2478:	
  4049  03C9  3001               	movlw	1
  4050  03CA                     u2665:	
  4051  03CA  1003               	clrc
  4052  03CB  0CB9               	rrf	___awmod@divisor+1,f
  4053  03CC  0CB8               	rrf	___awmod@divisor,f
  4054  03CD  3EFF               	addlw	-1
  4055  03CE  1D03               	skipz
  4056  03CF  2BCA               	goto	u2665
  4057  03D0  3001               	movlw	1
  4058  03D1  02BC               	subwf	___awmod@counter,f
  4059  03D2  1D03               	btfss	3,2
  4060  03D3  2BBB               	goto	l2474
  4061  03D4                     l2482:	
  4062  03D4  083D               	movf	___awmod@sign,w
  4063  03D5  1903               	btfsc	3,2
  4064  03D6  2BDC               	goto	l2486
  4065  03D7  09BA               	comf	___awmod@dividend,f
  4066  03D8  09BB               	comf	___awmod@dividend+1,f
  4067  03D9  0ABA               	incf	___awmod@dividend,f
  4068  03DA  1903               	skipnz
  4069  03DB  0ABB               	incf	___awmod@dividend+1,f
  4070  03DC                     l2486:	
  4071  03DC  083B               	movf	___awmod@dividend+1,w
  4072  03DD  00B9               	movwf	?___awmod+1
  4073  03DE  083A               	movf	___awmod@dividend,w
  4074  03DF  00B8               	movwf	?___awmod
  4075  03E0  0008               	return
  4076  03E1                     __end_of___awmod:	
  4077                           
  4078                           	psect	text26
  4079  03E1                     __ptext26:	
  4080 ;; *************** function ___awdiv *****************
  4081 ;; Defined at:
  4082 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  divisor         2    0[BANK0 ] int 
  4085 ;;  dividend        2    2[BANK0 ] int 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  quotient        2    6[BANK0 ] int 
  4088 ;;  sign            1    5[BANK0 ] unsigned char 
  4089 ;;  counter         1    4[BANK0 ] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  2    0[BANK0 ] int 
  4092 ;; Registers used:
  4093 ;;		wreg, status,2, status,0
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         0       4       0       0       0
  4100 ;;      Locals:         0       4       0       0       0
  4101 ;;      Temps:          1       0       0       0       0
  4102 ;;      Totals:         1       8       0       0       0
  4103 ;;Total ram usage:        9 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    1
  4106 ;; This function calls:
  4107 ;;		Nothing
  4108 ;; This function is called by:
  4109 ;;		_displayNuber
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function ___awdiv
  4115  03E1                     ___awdiv:	
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4119  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  4120  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  4121  03E3  01BD               	clrf	___awdiv@sign
  4122  03E4  1FB9               	btfss	___awdiv@divisor+1,7
  4123  03E5  2BED               	goto	l1774
  4124  03E6  09B8               	comf	___awdiv@divisor,f
  4125  03E7  09B9               	comf	___awdiv@divisor+1,f
  4126  03E8  0AB8               	incf	___awdiv@divisor,f
  4127  03E9  1903               	skipnz
  4128  03EA  0AB9               	incf	___awdiv@divisor+1,f
  4129  03EB  01BD               	clrf	___awdiv@sign
  4130  03EC  0ABD               	incf	___awdiv@sign,f
  4131  03ED                     l1774:	
  4132  03ED  1FBB               	btfss	___awdiv@dividend+1,7
  4133  03EE  2BF8               	goto	l1780
  4134  03EF  09BA               	comf	___awdiv@dividend,f
  4135  03F0  09BB               	comf	___awdiv@dividend+1,f
  4136  03F1  0ABA               	incf	___awdiv@dividend,f
  4137  03F2  1903               	skipnz
  4138  03F3  0ABB               	incf	___awdiv@dividend+1,f
  4139  03F4  3001               	movlw	1
  4140  03F5  00F6               	movwf	??___awdiv
  4141  03F6  0876               	movf	??___awdiv,w
  4142  03F7  06BD               	xorwf	___awdiv@sign,f
  4143  03F8                     l1780:	
  4144  03F8  01BE               	clrf	___awdiv@quotient
  4145  03F9  01BF               	clrf	___awdiv@quotient+1
  4146  03FA  0838               	movf	___awdiv@divisor,w
  4147  03FB  0439               	iorwf	___awdiv@divisor+1,w
  4148  03FC  1903               	btfsc	3,2
  4149  03FD  2C2F               	goto	l1802
  4150  03FE  01BC               	clrf	___awdiv@counter
  4151  03FF  0ABC               	incf	___awdiv@counter,f
  4152  0400                     l1790:	
  4153  0400  1BB9               	btfsc	___awdiv@divisor+1,7
  4154  0401  2C0E               	goto	l1792
  4155  0402  3001               	movlw	1
  4156  0403                     u1545:	
  4157  0403  1003               	clrc
  4158  0404  0DB8               	rlf	___awdiv@divisor,f
  4159  0405  0DB9               	rlf	___awdiv@divisor+1,f
  4160  0406  3EFF               	addlw	-1
  4161  0407  1D03               	skipz
  4162  0408  2C03               	goto	u1545
  4163  0409  3001               	movlw	1
  4164  040A  00F6               	movwf	??___awdiv
  4165  040B  0876               	movf	??___awdiv,w
  4166  040C  07BC               	addwf	___awdiv@counter,f
  4167  040D  2C00               	goto	l1790
  4168  040E                     l1792:	
  4169  040E  3001               	movlw	1
  4170  040F                     u1565:	
  4171  040F  1003               	clrc
  4172  0410  0DBE               	rlf	___awdiv@quotient,f
  4173  0411  0DBF               	rlf	___awdiv@quotient+1,f
  4174  0412  3EFF               	addlw	-1
  4175  0413  1D03               	skipz
  4176  0414  2C0F               	goto	u1565
  4177  0415  0839               	movf	___awdiv@divisor+1,w
  4178  0416  023B               	subwf	___awdiv@dividend+1,w
  4179  0417  1D03               	skipz
  4180  0418  2C1B               	goto	u1575
  4181  0419  0838               	movf	___awdiv@divisor,w
  4182  041A  023A               	subwf	___awdiv@dividend,w
  4183  041B                     u1575:	
  4184  041B  1C03               	skipc
  4185  041C  2C24               	goto	l1798
  4186  041D  0838               	movf	___awdiv@divisor,w
  4187  041E  02BA               	subwf	___awdiv@dividend,f
  4188  041F  0839               	movf	___awdiv@divisor+1,w
  4189  0420  1C03               	skipc
  4190  0421  03BB               	decf	___awdiv@dividend+1,f
  4191  0422  02BB               	subwf	___awdiv@dividend+1,f
  4192  0423  143E               	bsf	___awdiv@quotient,0
  4193  0424                     l1798:	
  4194  0424  3001               	movlw	1
  4195  0425                     u1585:	
  4196  0425  1003               	clrc
  4197  0426  0CB9               	rrf	___awdiv@divisor+1,f
  4198  0427  0CB8               	rrf	___awdiv@divisor,f
  4199  0428  3EFF               	addlw	-1
  4200  0429  1D03               	skipz
  4201  042A  2C25               	goto	u1585
  4202  042B  3001               	movlw	1
  4203  042C  02BC               	subwf	___awdiv@counter,f
  4204  042D  1D03               	btfss	3,2
  4205  042E  2C0E               	goto	l1792
  4206  042F                     l1802:	
  4207  042F  083D               	movf	___awdiv@sign,w
  4208  0430  1903               	btfsc	3,2
  4209  0431  2C37               	goto	l1806
  4210  0432  09BE               	comf	___awdiv@quotient,f
  4211  0433  09BF               	comf	___awdiv@quotient+1,f
  4212  0434  0ABE               	incf	___awdiv@quotient,f
  4213  0435  1903               	skipnz
  4214  0436  0ABF               	incf	___awdiv@quotient+1,f
  4215  0437                     l1806:	
  4216  0437  083F               	movf	___awdiv@quotient+1,w
  4217  0438  00B9               	movwf	?___awdiv+1
  4218  0439  083E               	movf	___awdiv@quotient,w
  4219  043A  00B8               	movwf	?___awdiv
  4220  043B  0008               	return
  4221  043C                     __end_of___awdiv:	
  4222                           
  4223                           	psect	text27
  4224  01C7                     __ptext27:	
  4225 ;; *************** function _countColor *****************
  4226 ;; Defined at:
  4227 ;;		line 391 in file "Othello.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  color           1    wreg     PTR unsigned char 
  4230 ;;		 -> RedPos(8), GreenPos(8), AllPos(8), 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  color           1    3[BANK0 ] PTR unsigned char 
  4233 ;;		 -> RedPos(8), GreenPos(8), AllPos(8), 
  4234 ;;  i               1    4[BANK0 ] unsigned char 
  4235 ;;  temp            1    5[BANK0 ] unsigned char 
  4236 ;;  count           1    2[BANK0 ] unsigned char 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      unsigned char 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4246 ;;      Params:         0       0       0       0       0
  4247 ;;      Locals:         0       4       0       0       0
  4248 ;;      Temps:          0       2       0       0       0
  4249 ;;      Totals:         0       6       0       0       0
  4250 ;;Total ram usage:        6 bytes
  4251 ;; Hardware stack levels used:    1
  4252 ;; Hardware stack levels required when called:    1
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           
  4261                           ;psect for function _countColor
  4262  01C7                     _countColor:	
  4263                           
  4264                           ;incstack = 0
  4265                           ; Regs used in _countColor: [wreg-fsr0h+status,2+status,0]
  4266                           ;countColor@color stored from wreg
  4267  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  4268  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  4269  01C9  00BB               	movwf	countColor@color
  4270                           
  4271                           ;Othello.c: 392: unsigned char count = 0;
  4272  01CA  01BA               	clrf	countColor@count
  4273                           
  4274                           ;Othello.c: 393: unsigned char temp = 0;
  4275  01CB  01BD               	clrf	countColor@temp
  4276                           
  4277                           ;Othello.c: 394: for(unsigned char i = 0; i < 8; i++) {
  4278  01CC  01BC               	clrf	countColor@i
  4279  01CD  3008               	movlw	8
  4280  01CE  023C               	subwf	countColor@i,w
  4281  01CF  1803               	btfsc	3,0
  4282  01D0  29F0               	goto	l2714
  4283  01D1                     l2706:	
  4284                           
  4285                           ;Othello.c: 395: temp = color[i];
  4286  01D1  083C               	movf	countColor@i,w
  4287  01D2  073B               	addwf	countColor@color,w
  4288  01D3  00B8               	movwf	??_countColor
  4289  01D4  0838               	movf	??_countColor,w
  4290  01D5  0084               	movwf	4
  4291  01D6  1383               	bcf	3,7	;select IRP bank0
  4292  01D7  0800               	movf	0,w
  4293  01D8                     L3:	
  4294  01D8  00B9               	movwf	??_countColor+1
  4295  01D9  0839               	movf	??_countColor+1,w
  4296  01DA  00BD               	movwf	countColor@temp
  4297  01DB  083D               	movf	countColor@temp,w
  4298  01DC  1903               	btfsc	3,2
  4299  01DD  29E8               	goto	l2710
  4300                           
  4301                           ;Othello.c: 397: count += temp & 0x01;
  4302                           
  4303                           ;Othello.c: 396: while(temp != 0) {
  4304  01DE  083D               	movf	countColor@temp,w
  4305  01DF  3901               	andlw	1
  4306  01E0  00B8               	movwf	??_countColor
  4307  01E1  0838               	movf	??_countColor,w
  4308  01E2  07BA               	addwf	countColor@count,f
  4309                           
  4310                           ;Othello.c: 398: temp = temp >> 1;
  4311  01E3  083D               	movf	countColor@temp,w
  4312  01E4  00B8               	movwf	??_countColor
  4313  01E5  1003               	clrc
  4314  01E6  0C38               	rrf	??_countColor,w
  4315  01E7  29D8               	goto	L3
  4316  01E8                     l2710:	
  4317  01E8  3001               	movlw	1
  4318  01E9  00B8               	movwf	??_countColor
  4319  01EA  0838               	movf	??_countColor,w
  4320  01EB  07BC               	addwf	countColor@i,f
  4321  01EC  3008               	movlw	8
  4322  01ED  023C               	subwf	countColor@i,w
  4323  01EE  1C03               	skipc
  4324  01EF  29D1               	goto	l2706
  4325  01F0                     l2714:	
  4326                           
  4327                           ;Othello.c: 399: }
  4328                           ;Othello.c: 400: }
  4329                           ;Othello.c: 401: return count;
  4330  01F0  083A               	movf	countColor@count,w
  4331  01F1  0008               	return
  4332  01F2                     __end_of_countColor:	
  4333                           
  4334                           	psect	text28
  4335  0139                     __ptext28:	
  4336 ;; *************** function _checkFullBoard *****************
  4337 ;; Defined at:
  4338 ;;		line 383 in file "Othello.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;		None
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  i               1    0[BANK0 ] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      unsigned char 
  4345 ;; Registers used:
  4346 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4352 ;;      Params:         0       0       0       0       0
  4353 ;;      Locals:         0       1       0       0       0
  4354 ;;      Temps:          1       0       0       0       0
  4355 ;;      Totals:         1       1       0       0       0
  4356 ;;Total ram usage:        2 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    1
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_main
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           
  4367                           ;psect for function _checkFullBoard
  4368  0139                     _checkFullBoard:	
  4369                           
  4370                           ;Othello.c: 384: for(unsigned char i = 0; i < 8; i++) {
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in _checkFullBoard: [wreg-fsr0h+status,2+status,0]
  4374  0139  1283               	bcf	3,5	;RP0=0, select bank0
  4375  013A  1303               	bcf	3,6	;RP1=0, select bank0
  4376  013B  01B8               	clrf	checkFullBoard@i
  4377  013C  3008               	movlw	8
  4378  013D  0238               	subwf	checkFullBoard@i,w
  4379  013E  1803               	btfsc	3,0
  4380  013F  2951               	goto	l2696
  4381  0140                     l2686:	
  4382                           
  4383                           ;Othello.c: 385: if(AllPos[i] != 0xFF)
  4384  0140  0838               	movf	checkFullBoard@i,w
  4385  0141  3E20               	addlw	(low (_AllPos| 0))& (0+255)
  4386  0142  0084               	movwf	4
  4387  0143  1383               	bcf	3,7	;select IRP bank0
  4388  0144  0A00               	incf	0,w
  4389  0145  1903               	btfsc	3,2
  4390  0146  2949               	goto	l2692
  4391                           
  4392                           ;Othello.c: 386: return 0;
  4393  0147  3000               	movlw	0
  4394  0148  0008               	return
  4395  0149                     l2692:	
  4396  0149  3001               	movlw	1
  4397  014A  00F6               	movwf	??_checkFullBoard
  4398  014B  0876               	movf	??_checkFullBoard,w
  4399  014C  07B8               	addwf	checkFullBoard@i,f
  4400  014D  3008               	movlw	8
  4401  014E  0238               	subwf	checkFullBoard@i,w
  4402  014F  1C03               	skipc
  4403  0150  2940               	goto	l2686
  4404  0151                     l2696:	
  4405                           
  4406                           ;Othello.c: 387: }
  4407                           ;Othello.c: 388: return 1;
  4408  0151  3001               	movlw	1
  4409  0152  0008               	return
  4410  0153                     __end_of_checkFullBoard:	
  4411                           
  4412                           	psect	text29
  4413  0153                     __ptext29:	
  4414 ;; *************** function _OutCharMsg *****************
  4415 ;; Defined at:
  4416 ;;		line 182 in file "Othello.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  string          2    0[BANK0 ] PTR const unsigned char 
  4419 ;;		 -> STR_5(51), 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       2       0       0       0
  4432 ;;      Locals:         0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0
  4434 ;;      Totals:         0       2       0       0       0
  4435 ;;Total ram usage:        2 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		_OutChar
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _OutCharMsg
  4447  0153                     _OutCharMsg:	
  4448  0153                     l2552:	
  4449                           ;Othello.c: 183: while(*string != 0)
  4450                           
  4451                           ;incstack = 0
  4452                           ; Regs used in _OutCharMsg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4453                           
  4454  0153  1283               	bcf	3,5	;RP0=0, select bank0
  4455  0154  1303               	bcf	3,6	;RP1=0, select bank0
  4456  0155  0839               	movf	OutCharMsg@string+1,w
  4457  0156  00FF               	movwf	127
  4458  0157  0838               	movf	OutCharMsg@string,w
  4459  0158  0084               	movwf	4
  4460  0159  120A  158A  2000  120A  118A  	fcall	stringtab
  4461  015E  3A00               	xorlw	0
  4462  015F  1903               	btfsc	3,2
  4463  0160  0008               	return
  4464                           
  4465                           ;Othello.c: 184: OutChar(*string++);
  4466  0161  1283               	bcf	3,5	;RP0=0, select bank0
  4467  0162  1303               	bcf	3,6	;RP1=0, select bank0
  4468  0163  0839               	movf	OutCharMsg@string+1,w
  4469  0164  00FF               	movwf	127
  4470  0165  0838               	movf	OutCharMsg@string,w
  4471  0166  0084               	movwf	4
  4472  0167  120A  158A  2000  120A  118A  	fcall	stringtab
  4473  016C  120A  118A  202E  120A  118A  	fcall	_OutChar
  4474  0171  3001               	movlw	1
  4475  0172  1283               	bcf	3,5	;RP0=0, select bank0
  4476  0173  1303               	bcf	3,6	;RP1=0, select bank0
  4477  0174  07B8               	addwf	OutCharMsg@string,f
  4478  0175  1803               	skipnc
  4479  0176  0AB9               	incf	OutCharMsg@string+1,f
  4480  0177  2953               	goto	l2552
  4481  0178                     __end_of_OutCharMsg:	
  4482                           
  4483                           	psect	text30
  4484  002E                     __ptext30:	
  4485 ;; *************** function _OutChar *****************
  4486 ;; Defined at:
  4487 ;;		line 172 in file "Othello.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  outchr          1    wreg     unsigned char 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  outchr          1    5[COMMON] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         0       0       0       0       0
  4502 ;;      Locals:         1       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0
  4504 ;;      Totals:         1       0       0       0       0
  4505 ;;Total ram usage:        1 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    1
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_OutCharMsg
  4512 ;;		_sendMatrix
  4513 ;;		_main
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517                           
  4518                           ;psect for function _OutChar
  4519  002E                     _OutChar:	
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _OutChar: [wreg]
  4523                           ;OutChar@outchr stored from wreg
  4524  002E  00F6               	movwf	OutChar@outchr
  4525  002F                     l178:	
  4526                           ;Othello.c: 173: while (TXIF == 0);
  4527                           
  4528  002F  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0030  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0031  1E0C               	btfss	12,4	;volatile
  4531  0032  282F               	goto	l178
  4532                           
  4533                           ;Othello.c: 174: TXREG = outchr;
  4534  0033  0876               	movf	OutChar@outchr,w
  4535  0034  0099               	movwf	25	;volatile
  4536  0035  0008               	return
  4537  0036                     __end_of_OutChar:	
  4538                           
  4539                           	psect	text31
  4540  0120                     __ptext31:	
  4541 ;; *************** function _interrupt_handler *****************
  4542 ;; Defined at:
  4543 ;;		line 66 in file "Othello.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;		None
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4557 ;;      Params:         0       0       0       0       0
  4558 ;;      Locals:         0       0       0       0       0
  4559 ;;      Temps:          5       0       0       0       0
  4560 ;;      Totals:         5       0       0       0       0
  4561 ;;Total ram usage:        5 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; This function calls:
  4564 ;;		Nothing
  4565 ;; This function is called by:
  4566 ;;		Interrupt level 1
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           
  4571                           ;psect for function _interrupt_handler
  4572  0120                     _interrupt_handler:	
  4573                           
  4574                           ;Othello.c: 67: if(TMR1IF == 1) {
  4575  0120  1C0C               	btfss	12,0	;volatile
  4576  0121  292E               	goto	i1l169
  4577                           
  4578                           ;Othello.c: 68: TMR1IF = 0;
  4579  0122  100C               	bcf	12,0	;volatile
  4580                           
  4581                           ;Othello.c: 70: if(LCDStateCount > 8) {
  4582  0123  3009               	movlw	9
  4583  0124  0277               	subwf	_LCDStateCount,w
  4584  0125  1C03               	skipc
  4585  0126  292A               	goto	i1l2088
  4586                           
  4587                           ;Othello.c: 71: LCDNextState = 1;
  4588  0127  01CB               	clrf	_LCDNextState
  4589  0128  0ACB               	incf	_LCDNextState,f
  4590                           
  4591                           ;Othello.c: 72: LCDStateCount = 0;
  4592  0129  01F7               	clrf	_LCDStateCount
  4593  012A                     i1l2088:	
  4594                           
  4595                           ;Othello.c: 73: }
  4596                           ;Othello.c: 74: LCDStateCount++;
  4597  012A  3001               	movlw	1
  4598  012B  00F1               	movwf	??_interrupt_handler
  4599  012C  0871               	movf	??_interrupt_handler,w
  4600  012D  07F7               	addwf	_LCDStateCount,f
  4601  012E                     i1l169:	
  4602  012E  0875               	movf	??_interrupt_handler+4,w
  4603  012F  00FF               	movwf	127
  4604  0130  0874               	movf	??_interrupt_handler+3,w
  4605  0131  008A               	movwf	10
  4606  0132  0873               	movf	??_interrupt_handler+2,w
  4607  0133  0084               	movwf	4
  4608  0134  0E72               	swapf	(??_interrupt_handler+1)^(0+-128),w
  4609  0135  0083               	movwf	3
  4610  0136  0EFE               	swapf	126,f
  4611  0137  0E7E               	swapf	126,w
  4612  0138  0009               	retfie
  4613  0139                     __end_of_interrupt_handler:	
  4614  007E                     btemp	set	126	;btemp
  4615  007E                     wtemp	set	126
  4616  007E                     wtemp0	set	126
  4617  0080                     wtemp1	set	128
  4618  0082                     wtemp2	set	130
  4619  0084                     wtemp3	set	132
  4620  0086                     wtemp4	set	134
  4621  0088                     wtemp5	set	136
  4622  007F                     wtemp6	set	127
  4623  007E                     ttemp	set	126
  4624  007E                     ttemp0	set	126
  4625  0081                     ttemp1	set	129
  4626  0084                     ttemp2	set	132
  4627  0087                     ttemp3	set	135
  4628  007F                     ttemp4	set	127
  4629  007E                     ltemp	set	126
  4630  007E                     ltemp0	set	126
  4631  0082                     ltemp1	set	130
  4632  0086                     ltemp2	set	134
  4633  0080                     ltemp3	set	128
  4634                           
  4635                           	psect	intentry
  4636  0004                     __pintentry:	
  4637                           ;incstack = 0
  4638                           ; Regs used in _interrupt_handler: [wreg+status,2+status,0]
  4639                           
  4640  0004                     interrupt_function:	
  4641  007E                     saved_w	set	btemp
  4642  0004  00FE               	movwf	btemp
  4643  0005  0E03               	swapf	3,w
  4644  0006  00F2               	movwf	??_interrupt_handler+1
  4645  0007  0804               	movf	4,w
  4646  0008  00F3               	movwf	??_interrupt_handler+2
  4647  0009  080A               	movf	10,w
  4648  000A  00F4               	movwf	??_interrupt_handler+3
  4649  000B  1283               	bcf	3,5	;RP0=0, select bank0
  4650  000C  1303               	bcf	3,6	;RP1=0, select bank0
  4651  000D  087F               	movf	btemp+1,w
  4652  000E  00F5               	movwf	??_interrupt_handler+4
  4653  000F  120A  118A  2920   	ljmp	_interrupt_handler


Data Sizes:
    Strings     234
    Constant    16
    Data        24
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      6       8
    BANK0            80     19      46
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    countColor@color	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), AllPos(BANK0[8]), 

    checkPositionFree@colorArray	PTR unsigned char  size(1) Largest target is 8
		 -> RedPos(BANK0[8]), GreenPos(BANK0[8]), AllPos(BANK0[8]), 

    OutCharMsg@string	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_5(CODE[51]), 

    lcd_puts@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_20(CODE[9]), STR_19(CODE[14]), STR_18(CODE[6]), STR_17(CODE[6]), 
		 -> STR_16(CODE[9]), STR_15(CODE[14]), STR_14(CODE[12]), STR_13(CODE[11]), 
		 -> STR_12(CODE[14]), STR_11(CODE[8]), STR_10(CODE[6]), STR_9(CODE[14]), 
		 -> STR_8(CODE[14]), STR_7(CODE[13]), STR_6(CODE[11]), STR_4(CODE[10]), 
		 -> STR_3(CODE[14]), STR_2(CODE[9]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_OutChar
    _main->_checkFullBoard
    _matrixSetup->_I2C_SendByte
    _lcd_init->_tmr0_init
    _sendMatrix->_OutChar
    _drawMatrix->_I2C_SendByte
    _I2C_SendAddress->_I2C_SendByte
    _displayNuber->___awdiv
    _displayNuber->___awmod
    _lcd_write->_Delay20us
    _LCD_strobe->_Delay20us
    _OutCharMsg->_OutChar

Critical Paths under _interrupt_handler in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sendMatrix
    _lcd_init->_lcd_write
    _lcd_clear->_lcd_write
    _sendMatrix->_checkPositionFree
    _lcd_puts->_lcd_write
    _lcd_goto->_lcd_write
    _I2C_Stop->_I2C_Idle_Status
    _I2C_Start->_I2C_Idle_Status
    _I2C_SendAddress->_I2C_SendByte
    _displayNuber->___awdiv
    _lcd_putch->_lcd_write
    _lcd_write->_Delay20us
    _LCD_strobe->_Delay20us

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   17818
                                             14 BANK0      5     5      0
                            _DelayMs
                            _OutChar
                         _OutCharMsg
                     _checkFullBoard
                         _countColor
                       _displayNuber
                         _drawMatrix
                       _getKeypadKey
                   _getKeypadPressed
                          _lcd_clear
                           _lcd_goto
                          _lcd_putch
                           _lcd_puts
                         _sendMatrix
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3638
                     _I2C_Initialize
                           _lcd_init
                        _matrixSetup
 ---------------------------------------------------------------------------------
 (2) _matrixSetup                                          0     0      0     432
                    _I2C_SendAddress
                       _I2C_SendByte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             1     1      0    3206
                                              4 BANK0      1     1      0
                            _DelayMs
                          _lcd_clear
                          _lcd_write
                          _tmr0_init
 ---------------------------------------------------------------------------------
 (3) _tmr0_init                                            1     1      0       0
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            0     0      0    1603
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sendMatrix                                           6     5      1    3069
                                              8 BANK0      6     5      1
                            _OutChar
                  _checkPositionFree
 ---------------------------------------------------------------------------------
 (2) _checkPositionFree                                    8     6      2    2139
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             3     1      2    2404
                                              4 BANK0      3     1      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0    1634
                                              4 BANK0      2     2      0
                            _DelayMs
                          _lcd_write
 ---------------------------------------------------------------------------------
 (4) _DelayMs                                              2     0      2     727
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _getKeypadPressed                                     4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _getKeypadKey                                         5     5      0     266
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _drawMatrix                                           2     2      0     562
                                              8 BANK0      2     2      0
                    _I2C_SendAddress
                       _I2C_SendByte
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                    _I2C_Idle_Status
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                    _I2C_Idle_Status
 ---------------------------------------------------------------------------------
 (4) _I2C_Idle_Status                                      8     8      0       0
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) _I2C_SendAddress                                      2     1      1     401
                                              1 BANK0      2     1      1
                       _I2C_SendByte
 ---------------------------------------------------------------------------------
 (3) _I2C_SendByte                                         2     2      0      31
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _displayNuber                                         3     3      0    1984
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
                          _lcd_putch
 ---------------------------------------------------------------------------------
 (1) _lcd_putch                                            2     2      0     907
                                              4 BANK0      2     2      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            3     2      1     876
                                              1 BANK0      3     2      1
                          _Delay20us
                         _LCD_strobe
 ---------------------------------------------------------------------------------
 (4) _LCD_strobe                                           0     0      0      68
                          _Delay20us
 ---------------------------------------------------------------------------------
 (5) _Delay20us                                            2     2      0      68
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     587
                                              5 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                              5 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _countColor                                           6     6      0     368
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _checkFullBoard                                       2     2      0      99
                                              5 COMMON     1     1      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OutCharMsg                                           2     0      2     164
                                              0 BANK0      2     0      2
                            _OutChar
 ---------------------------------------------------------------------------------
 (2) _OutChar                                              1     1      0      22
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_handler                                    5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DelayMs
   _OutChar
   _OutCharMsg
     _OutChar
   _checkFullBoard
   _countColor
   _displayNuber
     ___awdiv
     ___awmod
     _lcd_putch
       _lcd_write
         _Delay20us
         _LCD_strobe
           _Delay20us
   _drawMatrix
     _I2C_SendAddress
       _I2C_SendByte
     _I2C_SendByte
     _I2C_Start
       _I2C_Idle_Status
     _I2C_Stop
       _I2C_Idle_Status
   _getKeypadKey
   _getKeypadPressed
   _lcd_clear
     _DelayMs
     _lcd_write
       _Delay20us
       _LCD_strobe
         _Delay20us
   _lcd_goto
     _DelayMs
     _lcd_write
       _Delay20us
       _LCD_strobe
         _Delay20us
   _lcd_putch
     _lcd_write
       _Delay20us
       _LCD_strobe
         _Delay20us
   _lcd_puts
     _lcd_write
       _Delay20us
       _LCD_strobe
         _Delay20us
   _sendMatrix
     _OutChar
     _checkPositionFree
   _setup
     _I2C_Initialize
     _lcd_init
       _DelayMs
       _lcd_clear
         _DelayMs
         _lcd_write
           _Delay20us
           _LCD_strobe
             _Delay20us
       _lcd_write
         _Delay20us
         _LCD_strobe
           _Delay20us
       _tmr0_init
     _matrixSetup
       _I2C_SendAddress
         _I2C_SendByte
       _I2C_SendByte
       _I2C_Start
         _I2C_Idle_Status
       _I2C_Stop
         _I2C_Idle_Status

 _interrupt_handler (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      2E       5       57.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      6       8       1       61.5%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      36      12        0.0%
ABS                  0      0      36       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri May 20 01:32:49 2016

                          pc 0002           __size_of_I2C_Start 000E                  __CFG_CP$OFF 0000  
                _SSPSTATbits 0094                           l32 00E5                 ___awdiv@sign 003D  
                         fsr 0004                ?_displayNuber 0071                          l206 0345  
                        l225 04A0                          l410 00CB                          l238 017F  
                        l178 002F                          l346 07E8                          l380 0079  
                        l398 0087                          _GIE 005F                          _RA0 0028  
                        _RA1 0029                          _RA2 002A                          _RA3 002B  
                        _RA4 002C                          _RA5 002D                          _RD1 0041  
               __CFG_CPD$OFF 0000                          fsr0 0004                          indf 0000  
               ___awmod@sign 003D                 __CFG_FOSC$HS 0000                  ?_LCD_strobe 0071  
               __CFG_LVP$OFF 0000                         l2600 0551                         l1802 042F  
                       l1706 007C                         l2602 0553                         l2460 03A0  
                       l2710 01E8                         l1806 0437                         l2630 04B9  
                       l2614 0579                         l2552 0153                         l2472 03AD  
                       l2464 03A7                         l2392 028D                         l2384 0275  
                       l2608 0563                         l2714 01F0                         l2706 01D1  
                       l2474 03BB                         l2482 03D4                         l2634 04C6  
                       l2626 04AC                         l2378 00DA                         l1780 03F8  
                       l2564 0325                         l2644 04E0                         l1790 0400  
                       l1774 03ED                         l2486 03DC                         l2478 03C9  
                       l2646 04EE                         l2638 04D3                         l2590 0514  
                       l2910 06EE                         l2830 0591                         l1792 040E  
                       l2648 04FB                         l2496 019E                         l2584 050A  
                       l2920 071E                         l2904 06D3                         l2912 06F2  
                       l2832 059E                         l1698 006E                         l2666 0193  
                       l2594 0529                         l2578 0505                         l2914 0705  
                       l2692 0149                         l2668 019C                         l2916 070B  
                       l2852 0600                         l2686 0140                         l1798 0424  
                       l2934 075C                         l2926 072F                         l2696 0151  
                       l2960 07D7                         l2952 07AA                         l2944 0786  
                       l2880 0665                         l2848 05ED                         l2962 07DF  
                       l2874 064A                         l2964 0636                         l2886 0682  
                       l2878 0659                         l2896 06B5                         STR_1 08A8  
                       STR_2 08E0                         STR_3 088D                         STR_4 08D6  
                       STR_5 0822                         STR_6 08C0                         STR_7 089B  
                       STR_8 0855                         STR_9 0871                         _BRGH 04C2  
                       _T0IF 005A                         _CREN 00C4                         u2500 0272  
                       u2520 028A                         u1545 0403                         u1565 040F  
                       u2550 0068                         u1575 041B                         u2560 0069  
                       u1585 0425                         u2635 03B0                         u2580 02C9  
                       u2590 02CA                         u2574 02A3                         u2655 03C1  
                       u2495 0264                         u2575 02A0                         u2665 03CA  
                       _PEIE 005E                         _KEYS 0812                         _RCIF 0065  
                       _TMR0 0001                         _SPEN 00C7                         _TXEN 04C5  
                       _TXIF 0064                         _SYNC 04C4                 __CFG_WRT$OFF 0000  
              _LCDStateCount 0077                         _main 0584                         btemp 007E  
           __end_of_I2C_Stop 008D                         ltemp 007E                         start 0012  
                       ttemp 007E                         wtemp 007E                __CFG_IESO$OFF 0000  
      __size_of_I2C_SendByte 0015              __end_of_DelayMs 00F0              ?_checkFullBoard 0071  
              __CFG_MCLRE$ON 0000         checkPositionFree@col 0038         checkPositionFree@row 003E  
            __end_of_OutChar 0036               ??_displayNuber 0040                        ?_main 0071  
                      _BCLIF 006B              __end_of___awdiv 043C                        STR_10 08FA  
                      STR_11 08F2                        STR_20 08E9                        STR_12 0863  
                      STR_13 08CB                        STR_14 08B4                        STR_15 087F  
                      STR_16 08E9                        _BRG16 0C3B                        STR_17 0906  
              __CFG_WDTE$OFF 0000                        STR_18 0900                        STR_19 087F  
            __end_of___awmod 03E1                        _ANSEL 0188              ___awdiv@divisor 0038  
                      i1l169 012E              ___awdiv@counter 003C                        _RCREG 001A  
                      _SPBRG 0099                        _PORTA 0005                        _PORTB 0006  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        _SSPIF 0063             _getKeypadPressed 0178  
                      _TXREG 0019   __size_of_checkPositionFree 0039               __CFG_FCMEN$OFF 0000  
                      _nRBPU 040F                 ?_matrixSetup 0071                        _color 004D  
                      _setup 02CF                 _I2C_SendByte 00C5            __end_of_I2C_Start 007C  
             __CFG_BOREN$OFF 0000                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
                countColor@i 003C                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F                DelayMs@millis 0038  
           ?_I2C_SendAddress 0039        getKeypadPressed@temp2 003A                 __end_of_KEYS 0822  
            __initialization 07EB          __size_of_LCD_strobe 000A                 __end_of_main 07EB  
         __size_of_Delay20us 000C         __end_of_getKeypadKey 04FD                       ??_main 0046  
      checkPositionFree@temp 003F              getKeypadKey@col 003C             ___awdiv@dividend 003A  
                     ?_setup 0071                       _ANSELH 0189                       i1l2088 012A  
                  ??_DelayMs 0076                       _TMR1GE 0086                       _TMR1IE 0460  
                     _TMR1IF 0060                       _TMR1CS 0081                       _TMR1ON 0080  
                     _SSPADD 0093                       _TRISC3 043B                       _TRISC4 043C  
                     _SSPCON 0014                       _SSPBUF 0013                       _AllPos 0020  
             __CFG_PWRTE$OFF 0000               drawMatrix@temp 0041                   _OutCharMsg 0153  
                     _RedPos 0030                    ??_OutChar 0076             __end_of_lcd_init 0498  
           __end_of_lcd_goto 0108             __end_of_lcd_puts 01C7                    ??___awdiv 0076  
                  ??___awmod 0076             ___awdiv@quotient 003E                       _played 0078  
            ___awmod@divisor 0038              ___awmod@counter 003C      __size_of_I2C_Initialize 0013  
                  ?_I2C_Stop 0071                       saved_w 007E            __end_of_Delay20us 0054  
    __end_of__initialization 07FC         __end_of_displayNuber 0228             OutCharMsg@string 0038  
              lcd_write@mode 003B               __pcstackCOMMON 0071                 __pidataBANK0 0108  
          I2C_SendAddress@rw 0039                __end_of_setup 0309                   ??_I2C_Stop 0076  
               ??_LCD_strobe 0077           __size_of_lcd_clear 0014           __size_of_lcd_putch 000C  
         __size_of_lcd_write 0038                      ??_setup 0077                   __pbssBANK0 004B  
       __size_of_matrixSetup 004A     __size_of_I2C_Idle_Status 0036             ??_checkFullBoard 0076  
           getKeypadKey@temp 003B     __end_of_getKeypadPressed 019E                  ?_OutCharMsg 0038  
      __size_of_getKeypadKey 0065                   __pmaintext 0584           __end_of_LCD_strobe 0048  
                sendMatrix@c 0045                  sendMatrix@r 0044                   __pintentry 0004  
         __size_of_tmr0_init 0008                      _T1CKPS0 0084                      _T1CKPS1 0085  
                 _drawMatrix 0309                      _SSPCON2 0091                    ?_lcd_init 0071  
                  ?_lcd_goto 0071                      _SSPSTAT 0094                    ?_lcd_puts 003C  
                 __stringtab 0800                 _getKeypadKey 0498                      _DelayMs 00DA  
                 _countColor 01C7                    _I2C_Start 006E                      _OutChar 002E  
              OutChar@outchr 0076            __end_of_lcd_clear 00C5            __end_of_lcd_putch 0060  
                    ___awdiv 03E1                      ___awmod 0394            __end_of_lcd_write 0296  
             _I2C_Initialize 009E                      __ptext1 02CF                      __ptext2 034A  
                    __ptext3 043C                      __ptext4 0036                      __ptext5 00B1  
                    __ptext6 009E                      __ptext7 04FD                      __ptext8 0296  
                    __ptext9 019E             ___awmod@dividend 003A  checkPositionFree@colorArray 0039  
        __size_of_OutCharMsg 0025        __size_of_displayNuber 0036                      main@col 0049  
                 ??_lcd_init 003C                      main@row 004A                   ??_lcd_goto 003C  
                 ??_lcd_puts 003E         end_of_initialization 07FC                   _sendMatrix 04FD  
          __end_of_tmr0_init 003E               lcd_puts@string 003C                   ?_I2C_Start 0071  
          ??_I2C_Idle_Status 0038       __end_of_I2C_Initialize 00B1     __size_of_I2C_SendAddress 000E  
               __pstringtext 0800                 _displayNuber 01F2                  ?_drawMatrix 0071  
               _LCDNextState 004B            __size_of_I2C_Stop 0011                    _Delay20us 0048  
                ?_countColor 0071              ?_I2C_Initialize 0071          start_initialization 07EB  
       getKeypadPressed@temp 003B                  ?_sendMatrix 0040                   ?_Delay20us 0071  
                ??_I2C_Start 0076                 ??_OutCharMsg 0077            ?_getKeypadPressed 0071  
        __size_of_drawMatrix 0041           ??_getKeypadPressed 0038                   init_fetch0 008D  
                __pdataBANK0 0020            ??_I2C_SendAddress 0077          __size_of_countColor 002B  
                __pbssCOMMON 0077                    ___latbits 0002                __pcstackBANK0 0038  
              ??_matrixSetup 0077           __end_of_OutCharMsg 0178                ?_I2C_SendByte 0071  
          getKeypadKey@temp2 003A                     ?_DelayMs 0038            __size_of_lcd_init 005C  
          __size_of_lcd_goto 0018            __size_of_lcd_puts 0029                     ?_OutChar 0071  
                   ?___awdiv 0038                     ?___awmod 0038                    _lcd_clear 00B1  
        __size_of_sendMatrix 0087             I2C_SendByte@data 0038                    _lcd_putch 0054  
                  _lcd_write 025E            _interrupt_handler 0120           sendMatrix@PointerC 0040  
         sendMatrix@PointerR 0043                     _I2C_Stop 007C           ?_interrupt_handler 0071  
             ??_I2C_SendByte 0076               __size_of_setup 003A              _I2C_Idle_Status 0228  
        ??_interrupt_handler 0071            interrupt_function 0004                  ??_Delay20us 0076  
                   _LCDState 004C          __end_of_matrixSetup 0394                    _tmr0_init 0036  
     I2C_SendAddress@address 003A      __size_of_checkFullBoard 001A                   ?_lcd_clear 0071  
  __end_of_interrupt_handler 0139                   ?_lcd_putch 0071                  __stringbase 0812  
                 ?_lcd_write 0039                 ??_drawMatrix 0040                     _GreenPos 0028  
               ??_countColor 0038             __size_of_DelayMs 0016                   ?_tmr0_init 0071  
           ??_I2C_Initialize 0076             __size_of_OutChar 0008           __end_of_drawMatrix 034A  
           __size_of___awdiv 005B             __size_of___awmod 004D           __end_of__stringtab 0812  
    __end_of_I2C_Idle_Status 025E           __end_of_countColor 01F2                     __ptext10 00F0  
                   __ptext11 00DA                     __ptext20 01F2                     __ptext12 0178  
                   __ptext21 0054                     __ptext13 0498                     __ptext30 002E  
                   __ptext22 025E                     __ptext14 0309                     __ptext31 0120  
                   __ptext23 003E                     __ptext15 007C                     __ptext24 0048  
                   __ptext16 006E                     __ptext25 0394                     __ptext17 0228  
                   __ptext26 03E1                     __ptext18 0060                     __ptext27 01C7  
                   __ptext19 00C5                     __ptext28 0139                     __ptext29 0153  
          __CFG_BOR4V$BOR21V 0000                  _matrixSetup 034A              checkFullBoard@i 0038  
                   _lcd_init 043C                     _lcd_goto 00F0                 ??_sendMatrix 0041  
                   _lcd_puts 019E                __size_of_main 0267           lcd_putch@character 003D  
            _I2C_SendAddress 0060              displayNuber@num 0042         __end_of_I2C_SendByte 00DA  
                ??_lcd_clear 0077   __size_of_interrupt_handler 0019                     main@temp 0047  
            countColor@color 003B           __end_of_sendMatrix 0584              countColor@count 003A  
                ??_lcd_putch 003C                  ??_lcd_write 003A    __size_of_getKeypadPressed 0026  
                 _LCD_strobe 003E                     init_ram0 0091            _checkPositionFree 0296  
              ?_getKeypadKey 0071                     intlevel1 0000                Delay20us@next 0038  
         ?_checkPositionFree 0038                  ??_tmr0_init 0076                    stringcode 080A  
        ??_checkPositionFree 003A               _checkFullBoard 0139               countColor@temp 003D  
                 _OPTION_REG 0081             lcd_goto@position 003D             ?_I2C_Idle_Status 0071  
                   stringtab 0800    __end_of_checkPositionFree 02CF                  _SSPCON2bits 0091  
             ??_getKeypadKey 0038      __end_of_I2C_SendAddress 006E             lcd_write@CmdChar 0039  
     __end_of_checkFullBoard 0153  
